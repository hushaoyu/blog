{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"source/404/img.png","path":"404/img.png","modified":1,"renderable":0},{"_id":"source/nodeppt/demo.html","path":"nodeppt/demo.html","modified":1,"renderable":0},{"_id":"source/nodeppt/css/chunk-vendors.4e4765ff.css","path":"nodeppt/css/chunk-vendors.4e4765ff.css","modified":1,"renderable":0},{"_id":"source/nodeppt/img/swipe.svg","path":"nodeppt/img/swipe.svg","modified":1,"renderable":0},{"_id":"source/nodeppt/js/chunk-vendors.js","path":"nodeppt/js/chunk-vendors.js","modified":1,"renderable":0},{"_id":"source/nodeppt/js/chunk-vendors.js.LICENSE.txt","path":"nodeppt/js/chunk-vendors.js.LICENSE.txt","modified":1,"renderable":0},{"_id":"source/nodeppt/js/demo.js","path":"nodeppt/js/demo.js","modified":1,"renderable":0},{"_id":"source/nodeppt/js/demo.js.LICENSE.txt","path":"nodeppt/js/demo.js.LICENSE.txt","modified":1,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/wechat_channel.png","path":"images/wechat_channel.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/wechat-qcode.jpg","path":"uploads/wechat-qcode.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/LICENSE","path":"lib/canvas-ribbon/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/README.md","path":"lib/canvas-ribbon/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/README.md","path":"lib/pace/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flat-top.min.css","path":"lib/pace/pace-theme-flat-top.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-material.min.css","path":"lib/pace/pace-theme-material.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/CHANGELOG.md","path":"lib/pjax/CHANGELOG.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/LICENSE","path":"lib/pjax/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/README.md","path":"lib/pjax/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/index.d.ts","path":"lib/pjax/index.d.ts","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/index.js","path":"lib/pjax/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/package.json","path":"lib/pjax/package.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/pjax.js","path":"lib/pjax/pjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/pjax.min.js","path":"lib/pjax/pjax.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/README.md","path":"lib/three/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/LICENSE","path":"lib/three/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/gulpfile.js","path":"lib/three/gulpfile.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/package.json","path":"lib/three/package.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/renovate.json","path":"lib/three/renovate.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/example.js","path":"lib/pjax/example/example.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/forms.html","path":"lib/pjax/example/forms.html","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/index.html","path":"lib/pjax/example/index.html","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/page2.html","path":"lib/pjax/example/page2.html","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/page3.html","path":"lib/pjax/example/page3.html","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/abort-request.js","path":"lib/pjax/lib/abort-request.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/eval-script.js","path":"lib/pjax/lib/eval-script.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/foreach-els.js","path":"lib/pjax/lib/foreach-els.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/execute-scripts.js","path":"lib/pjax/lib/execute-scripts.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/foreach-selectors.js","path":"lib/pjax/lib/foreach-selectors.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/is-supported.js","path":"lib/pjax/lib/is-supported.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/parse-options.js","path":"lib/pjax/lib/parse-options.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/send-request.js","path":"lib/pjax/lib/send-request.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/switches-selectors.js","path":"lib/pjax/lib/switches-selectors.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/switches.js","path":"lib/pjax/lib/switches.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/uniqueid.js","path":"lib/pjax/lib/uniqueid.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/setup.js","path":"lib/pjax/tests/setup.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/test.ts","path":"lib/pjax/tests/test.ts","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","path":"lib/three/lib/CanvasRenderer.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","path":"lib/three/src/canvas_lines.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/lib/Projector.js","path":"lib/three/lib/Projector.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","path":"lib/three/src/canvas_sphere.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/three-waves.js","path":"lib/three/src/three-waves.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/off.js","path":"lib/pjax/lib/events/off.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/on.js","path":"lib/pjax/lib/events/on.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/trigger.js","path":"lib/pjax/lib/events/trigger.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-form.js","path":"lib/pjax/lib/proto/attach-form.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-link.js","path":"lib/pjax/lib/proto/attach-link.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/log.js","path":"lib/pjax/lib/proto/log.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/handle-response.js","path":"lib/pjax/lib/proto/handle-response.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/parse-element.js","path":"lib/pjax/lib/proto/parse-element.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/clone.js","path":"lib/pjax/lib/util/clone.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/contains.js","path":"lib/pjax/lib/util/contains.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/extend.js","path":"lib/pjax/lib/util/extend.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/noop.js","path":"lib/pjax/lib/util/noop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/update-query-string.js","path":"lib/pjax/lib/util/update-query-string.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/abort-request.js","path":"lib/pjax/tests/lib/abort-request.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/eval-scripts.js","path":"lib/pjax/tests/lib/eval-scripts.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/events.js","path":"lib/pjax/tests/lib/events.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/execute-scripts.js","path":"lib/pjax/tests/lib/execute-scripts.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-els.js","path":"lib/pjax/tests/lib/foreach-els.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-selectors.js","path":"lib/pjax/tests/lib/foreach-selectors.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/is-supported.js","path":"lib/pjax/tests/lib/is-supported.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/parse-options.js","path":"lib/pjax/tests/lib/parse-options.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/send-request.js","path":"lib/pjax/tests/lib/send-request.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/switch-selectors.js","path":"lib/pjax/tests/lib/switch-selectors.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/switches.js","path":"lib/pjax/tests/lib/switches.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/uniqueid.js","path":"lib/pjax/tests/lib/uniqueid.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-form.js","path":"lib/pjax/tests/lib/proto/attach-form.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-link.js","path":"lib/pjax/tests/lib/proto/attach-link.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/handle-response.js","path":"lib/pjax/tests/lib/proto/handle-response.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/parse-element.js","path":"lib/pjax/tests/lib/proto/parse-element.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/clone.js","path":"lib/pjax/tests/lib/util/clone.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/contains.js","path":"lib/pjax/tests/lib/util/contains.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/extend.js","path":"lib/pjax/tests/lib/util/extend.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/noop.js","path":"lib/pjax/tests/lib/util/noop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/update-query-string.js","path":"lib/pjax/tests/lib/util/update-query-string.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/robots.txt","hash":"f5413416f3268b3aa7715f7b0ec2fcc26c0363ec","modified":1644722329578},{"_id":"source/404/img.png","hash":"812084879aba3c5d5200efd61631c0b4f911c5b4","modified":1641521324413},{"_id":"source/404/index.md","hash":"2d98d9d13d7d911a286d02ef9d2f1ed06f51df90","modified":1644722329581},{"_id":"source/_posts/CSS-开发技巧.md","hash":"c208fde9658216b68485f68b816844a1436038fa","modified":1642742546257},{"_id":"source/_posts/Echarts-开发笔记.md","hash":"63a5c888bbfcef72fdf9ab939334ca016ffe5591","modified":1642498089764},{"_id":"source/_posts/Hexo-Note-使用NexT主题.md","hash":"1d2aea4fd83c9606b112240a0e5dc5fb77cb9759","modified":1644722329586},{"_id":"source/_posts/Hexo-持续改进.md","hash":"cd4ca1a416462abcb619728b6358733ba8f12a9e","modified":1643188639745},{"_id":"source/_posts/Hexo-Note-初始化及常用配置.md","hash":"d3b1abab52e7e69d6505ccfbc563a0f1fa73fbac","modified":1641795939390},{"_id":"source/_posts/JavaScript-开发技巧.md","hash":"5bf02eec614916f5f87dd2965049b9b7753e18d7","modified":1644720942885},{"_id":"source/_posts/Hexo-Note-命令.md","hash":"c7fe54b0e08735fb6ad1a8f627a90e4cf0ef9d5f","modified":1641795939399},{"_id":"source/_posts/JavaScript-正则收录.md","hash":"20184ae6107cdc28ed5e760d1baec07c6f1ea761","modified":1644729222112},{"_id":"source/_posts/Markdown-using-document.md","hash":"80fd7352c9b4da91af0a2c186262579993c083b1","modified":1641795939378},{"_id":"source/_posts/React-基础开发框架搭建.md","hash":"c475ad9188dce248b4b780745f16b8e6c7446c66","modified":1642126550078},{"_id":"source/_posts/React插件-react-codemirror2.md","hash":"610fa8c6ac22750a5df5261d619f66eff4f15594","modified":1642926080262},{"_id":"source/_posts/ThreeJS-知识体系.md","hash":"9e096eca64d793a9f945938dd78dac2cafc884aa","modified":1643014286252},{"_id":"source/_posts/There-js入门系列之React中使用Three-js.md","hash":"431a898950c539a8ce273339477efa59ea1b80c2","modified":1641525695579},{"_id":"source/_posts/TypeScript-React组件中的类型注解.md","hash":"a193b5a7daab4fe12c20c67809d88ea144db66b3","modified":1644558236063},{"_id":"source/_posts/Typescript-基础.md","hash":"714bb40c717b502812ac10ad0554279eb16b02f0","modified":1643180226167},{"_id":"source/_posts/nodeppt-css.md","hash":"4b7ce97074c0b298994841e8930c71ac2c98a866","modified":1642148612120},{"_id":"source/_posts/webpack-技巧篇.md","hash":"6e6e2d0a950a2fc46958ea1f1e640b0380fd9638","modified":1642125675564},{"_id":"source/_posts/工具合集.md","hash":"f74a62cf365a3a9b5aa63a4c1216ff73b4ebb3b4","modified":1643096091223},{"_id":"source/_posts/微信小程序-开发笔记.md","hash":"9e09ae5ce5e27c7d785bc63c32f6b1c6c4499451","modified":1642407718424},{"_id":"source/_posts/生成PPT-nodeppt.md","hash":"902a635eaed752d8a5a5f425910bc2b55ff64aa3","modified":1642148549628},{"_id":"source/categories/index.md","hash":"08e520eddc1abccdfe98354a3b29f5da10fd95c0","modified":1641462321681},{"_id":"source/intro/index.md","hash":"8b52cdb1ff7df3539cb70051a568bc84eddd99ce","modified":1641462321676},{"_id":"source/nodeppt/demo.html","hash":"4b1874ecd087412522ccc97da30790971720e95c","modified":1642151872475},{"_id":"source/tags/index.md","hash":"660050540be40fadc8bc5689fb1b20780dee1e7b","modified":1641536804916},{"_id":"source/nodeppt/img/swipe.svg","hash":"21c944bb622059b5f2974345dd35f082d01f3333","modified":1642151872452},{"_id":"source/nodeppt/js/chunk-vendors.js","hash":"9d028f9ae9cdfabe44ea2d4f01cb533ac3642a09","modified":1642151872453},{"_id":"source/nodeppt/js/demo.js","hash":"bb4b94d53ec066dd17e9dd0e5f519bfc7adc2c08","modified":1642151872454},{"_id":"source/nodeppt/js/chunk-vendors.js.LICENSE.txt","hash":"b9fe24e9574b5f05a2fbb03f8234b998e6c8c12c","modified":1642151872454},{"_id":"source/nodeppt/js/demo.js.LICENSE.txt","hash":"b9fe24e9574b5f05a2fbb03f8234b998e6c8c12c","modified":1642151872454},{"_id":"source/nodeppt/css/chunk-vendors.4e4765ff.css","hash":"abd0e586824cde74bd2348327b0d209e38d6e9b0","modified":1642151872454},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1641435059709},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1641435059709},{"_id":"themes/next/.gitignore","hash":"83418530da80e6a78501e1d62a89c3bf5cbaec3d","modified":1641435059712},{"_id":"themes/next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1641435059709},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1641435059712},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1641435059712},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1641435059712},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1641435059712},{"_id":"themes/next/_config.yml","hash":"cc0cd0a372358c00b1d6b7b9b5be319a1845e01a","modified":1642407388876},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1641435059713},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1641435059717},{"_id":"themes/next/package.json","hash":"db30ae076a330b84aa86a1a2a2824c1beeb9e17b","modified":1641697461623},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"778b7e052993ed59f21ed266ba7119ee2e5253fb","modified":1641435059710},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ddde54fb50d11dc08cec899a3588addb56aa386","modified":1641435059710},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"d2f8e6b65783e31787feb05d2ccea86151f53f35","modified":1641435059710},{"_id":"themes/next/.github/config.yml","hash":"df3d970700e6b409edc3d23be8d553db78d5ba3f","modified":1641435059710},{"_id":"themes/next/.github/issue-close-app.yml","hash":"b14756e65546eb9ecc9d4393f0c9a84a3dac1824","modified":1641435059710},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1641435059711},{"_id":"themes/next/.github/lock.yml","hash":"3ce3d0a26030a1cd52b273cc6a6d444d7c8d85c2","modified":1641435059711},{"_id":"themes/next/.github/release-drafter.yml","hash":"09c3352b2d643acdc6839601ceb38abc38ab97c5","modified":1641435059711},{"_id":"themes/next/.github/stale.yml","hash":"590b65aca710e0fba75d3cf5361a64d13b6b0f63","modified":1641435059711},{"_id":"themes/next/.github/mergeable.yml","hash":"1c1cb77a62df1e3654b151c2da34b4a10d351170","modified":1641435059711},{"_id":"themes/next/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1641435059711},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1641435059714},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1641435059714},{"_id":"themes/next/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1641435059714},{"_id":"themes/next/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1641435059714},{"_id":"themes/next/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1641435059714},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1641435059715},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1641435059714},{"_id":"themes/next/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1641435059715},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1641435059715},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1641435059717},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1641435059717},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1641435059718},{"_id":"themes/next/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1641435059718},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1641435059718},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1641435059718},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1641435059719},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1641435059718},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1641435059719},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1641435059719},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1641435059719},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1641435059719},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1641435059719},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1641435059719},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1641435059719},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1641435059720},{"_id":"themes/next/languages/tr.yml","hash":"c4e9ab7e047ae13a19f147c6bec163c3ba2c6898","modified":1641435059720},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1641435059720},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1641435059720},{"_id":"themes/next/languages/zh-CN.yml","hash":"bbef9d7055587a4295d5567308dd36b56192ca5c","modified":1642152000544},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1641435059720},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1641435059720},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1641461485879},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1641435059731},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1641435059732},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1641435059732},{"_id":"themes/next/layout/page.swig","hash":"146251d8ecbb15d9772e7d05c90248331708c833","modified":1641536581942},{"_id":"themes/next/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1641435059732},{"_id":"themes/next/layout/tag-color.swig","hash":"9dae2f916d850a4f30cc6839384c5b85e459f159","modified":1641536765864},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1641435059732},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1641435059736},{"_id":"themes/next/source/404.html","hash":"b5e6533bfe368e8ac136dde99b162c6b35ce9dc1","modified":1641464274181},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"e67146befddec3a0dc47dc80d1109070c71d5d04","modified":1641435059710},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"6beeca0f45a429cd932b6e648617f548ff64c27c","modified":1641435059710},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d5aa1a3323639a36bcd9a401484b67537043cd3c","modified":1641435059710},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"59275aa0582f793fee7be67904dcf52ad33a7181","modified":1641435059710},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1641435059715},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1641435059715},{"_id":"themes/next/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1641435059715},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1641435059716},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1641435059716},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1641435059716},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1641435059716},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1641435059716},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1641435059717},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1641435059717},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1641435059717},{"_id":"themes/next/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1641435059717},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1641435059717},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1641435059721},{"_id":"themes/next/layout/_partials/footer.swig","hash":"86db4f303e5d57e0d5a1c9c2571c139fe9076e2d","modified":1641534127505},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1641435059723},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1641435059723},{"_id":"themes/next/layout/_partials/runtime.swig","hash":"37b8d7a4ef0ce4dc8cb72c29f9aa24030fccd6e0","modified":1641463552571},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1641435059726},{"_id":"themes/next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1641435059726},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1641435059726},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1641435059726},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1641435059726},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1641435059727},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1641536876827},{"_id":"themes/next/layout/_macro/post.swig","hash":"3d683aba1da140b3399579d11cda3728240adb5b","modified":1641522322206},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b5e0d035bb313ad65be219cea125bc38b4bae782","modified":1641534851253},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"28b0a7e843ec4365db1963646659a153753cd746","modified":1641435059727},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1641435059728},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1641435059730},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1641435059730},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1641435059733},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1641435059734},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1641435059734},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1641435059735},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1641435059735},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1641435059735},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1641435059735},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1641435059735},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1641435059735},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1641435059735},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1641435059736},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1641435059736},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1641435059736},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1641435059736},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1641435059736},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1641435059736},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1641435059737},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1641435059737},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1641435059737},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1641435059737},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1641435059752},{"_id":"themes/next/source/images/avatar.gif","hash":"9d5cb17b9b206016aca2530fb6e9c8d166bcd219","modified":1641436336718},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1641435059753},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1641435059753},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1641435059753},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1641435059753},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1641435059753},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1641435059754},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1641435059754},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"2826163eb1cccf2e17fe002b1bc3072743b11bb1","modified":1641435801203},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"255885cf2641441745cffdbcb6aebf744569a3f8","modified":1641435908381},{"_id":"themes/next/source/images/logo.svg","hash":"bd5e37ae30c3538e0e4061a6002293e9f9557f89","modified":1641436042574},{"_id":"themes/next/source/images/wechat_channel.png","hash":"400b68b3f37f0af0c7285ae49ec66bae73d52306","modified":1641437033453},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1641435059737},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1641435059748},{"_id":"themes/next/source/css/main.styl","hash":"2445a4b5f312ea33ab472733dfa97707309ac3c7","modified":1643187302312},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1641435059755},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1641435059755},{"_id":"themes/next/source/js/local-search.js","hash":"cfa6a0f3f9c2bc759ee507668a21f4e8f250f42a","modified":1641435059755},{"_id":"themes/next/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1641435059755},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1641435059755},{"_id":"themes/next/source/js/utils.js","hash":"26a82e46fdcadc7c3c2c56a7267284b61a26f7f3","modified":1641435059756},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1641435059757},{"_id":"themes/next/source/uploads/wechat-qcode.jpg","hash":"7fd36404971e7c5fc2bb07a5b889143f1e83ad75","modified":1641464594761},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1641435059722},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1643011020103},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1641435059722},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1641435059722},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1641435059722},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1641435059723},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1641435059723},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1641435059723},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1641435059723},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1641435059724},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1641435059724},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1641435059724},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1641435059724},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1641435059724},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1641435059724},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1641435059725},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1641435059725},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1641532811978},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1641435059726},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1641435059726},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1641435059726},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1641435059726},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1641435059726},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1641435059727},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1641435059727},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1641435059727},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1641435059727},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1641435059727},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1641435059728},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1641435059728},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1641435059728},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1641435059728},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1641435059728},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1641435059728},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1641435059728},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1641435059728},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1641435059728},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1641435059730},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1641435059730},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1641435059730},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1641435059730},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1641435059730},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1641435059731},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1641435059731},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1641435059731},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1641435059731},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1641435059731},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1641435059731},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1641435059733},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1641435059733},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1641435059733},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1641435059733},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1641435059733},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1641435059734},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1641435059734},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1641435059734},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1641435059734},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1641435059734},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1641435059734},{"_id":"themes/next/source/css/_custom/default.css","hash":"74768a5b34489c52136e7a1f74b0250192475b0d","modified":1643187957631},{"_id":"themes/next/source/css/_custom/table.css","hash":"5e41be17ffb1e9fe9d17d5da15d2381d20821c2c","modified":1643011313455},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1641435059751},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1641435059752},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1641435059752},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1641435059752},{"_id":"themes/next/source/css/_variables/base.styl","hash":"840a5082808226842c03cc8dd646df030829b9d0","modified":1641543127896},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1641435059756},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1641435059756},{"_id":"themes/next/source/lib/canvas-ribbon/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1641463051230},{"_id":"themes/next/source/lib/canvas-ribbon/README.md","hash":"da243fc43315d5953438dab71eb59dc3961c33e3","modified":1641463051230},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"62ff1ba692f3153d0288c514c42c6c92cc17e9b6","modified":1641463051231},{"_id":"themes/next/source/lib/pace/README.md","hash":"6f22149ab4cd861d653970591c81670625aa1fdc","modified":1641463178599},{"_id":"themes/next/source/lib/pace/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1641463178599},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1641463178599},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1641463178600},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1641463178600},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1641463178600},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1641463178600},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1641463178600},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1641463178600},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1641463178601},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1641463178601},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1641463178601},{"_id":"themes/next/source/lib/pace/pace-theme-flat-top.min.css","hash":"544f038c983e2be5f7fc04ce6615f7b70e4554fe","modified":1641463178601},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1641463178601},{"_id":"themes/next/source/lib/pace/pace-theme-material.min.css","hash":"131747a1e6982312ae3777998a99763b684d3290","modified":1641463178602},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1641463178601},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1641463178602},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1641463178602},{"_id":"themes/next/source/lib/pjax/.editorconfig","hash":"8c81c4efc1ebde69b4c084c370c29071af62ed2f","modified":1641461671977},{"_id":"themes/next/source/lib/pjax/.eslintignore","hash":"72a528c49453bc417123c12a5482f9a3dec8e1a5","modified":1641461671977},{"_id":"themes/next/source/lib/pjax/.eslintrc.json","hash":"37eb8287500c9f2d4e1b887bec1c7636791a31dc","modified":1641461671977},{"_id":"themes/next/source/lib/pjax/.gitignore","hash":"37a0d5efc8a1eaa132681e1c2bf9f68333c2fbff","modified":1641461671978},{"_id":"themes/next/source/lib/pjax/.prettierignore","hash":"72a528c49453bc417123c12a5482f9a3dec8e1a5","modified":1641461671978},{"_id":"themes/next/source/lib/pjax/.travis.yml","hash":"a8afaf403ef826c018803df13ed5a36943320983","modified":1641461671978},{"_id":"themes/next/source/lib/pjax/CHANGELOG.md","hash":"c6bec1421c73c2b33eb0f2974566351968eac342","modified":1641461671978},{"_id":"themes/next/source/lib/pjax/LICENSE","hash":"2c7168814d9d35ea9500809b0904962f511eb4a8","modified":1641461671978},{"_id":"themes/next/source/lib/pjax/README.md","hash":"f3f023db70ec08d0e8602e091c9aee621978a23d","modified":1641461671979},{"_id":"themes/next/source/lib/pjax/index.d.ts","hash":"c452cd6e990eeeea10f7dbf17fefbc6845585bf6","modified":1641461671980},{"_id":"themes/next/source/lib/pjax/index.js","hash":"e6fc3fb4501520bae1505c5d95214d3318810c2d","modified":1641461671980},{"_id":"themes/next/source/lib/pjax/package.json","hash":"c3670a3576aa4bc6d0818edda3723e034b647e52","modified":1641461671984},{"_id":"themes/next/source/lib/pjax/pjax.js","hash":"39b3063839a090bf3224c0c4776ffcedf2faf327","modified":1641461671984},{"_id":"themes/next/source/lib/pjax/pjax.min.js","hash":"68d0c6ad28f042c78fc18a6e9d782a7047c01905","modified":1641461671984},{"_id":"themes/next/source/lib/three/.gitignore","hash":"5767276045f60da2350895a59aa6e138b0e83294","modified":1641462881698},{"_id":"themes/next/source/lib/three/README.md","hash":"76071f107e07113ccb23192680782577a15c5350","modified":1641462881699},{"_id":"themes/next/source/lib/three/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1641462881698},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"558838e0821f76c1e6d58add25116853caa1976c","modified":1641462881699},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"1b371d908c6729f15877601792583e25cc4e6091","modified":1641462881707},{"_id":"themes/next/source/lib/three/gulpfile.js","hash":"8667c49d81292b55e4ec8c0ec9f8eb42f4ababab","modified":1641462881707},{"_id":"themes/next/source/lib/three/package.json","hash":"ff493a283c04f87a272abdffa8aa29fb4368b803","modified":1641462881709},{"_id":"themes/next/source/lib/three/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":1641462881709},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"62fe85b767c525a07bbec1193c0840ee924dad9a","modified":1641462881711},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1641435059759},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1641435059759},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1641435059737},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1641435059738},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1641435059738},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1641435059740},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1641435059743},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1641435059743},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"50c7abfc33a9b759eb8385dc9c561f2c99af37a0","modified":1643015574980},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1641435059745},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1641435059745},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1641435059746},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1641435059746},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1641435059746},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1641435059746},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1641435059748},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1641435059748},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1641435059748},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1641435059749},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1641435059749},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1641435059749},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1641435059749},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1641435059749},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1641435059749},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1641435059749},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1641435059749},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1641435059750},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1641435059750},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1641435059750},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1641526364192},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1641435059750},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"dc9318992ce2eb086ebaa2fe56b325e56d24098b","modified":1641435059750},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1641435059750},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1641435059750},{"_id":"themes/next/source/lib/canvas-ribbon/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1641463051216},{"_id":"themes/next/source/lib/canvas-ribbon/.git/config","hash":"859dd85203388dc5f882e8b78019889577e2dbb2","modified":1641463051223},{"_id":"themes/next/source/lib/canvas-ribbon/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1641463049609},{"_id":"themes/next/source/lib/canvas-ribbon/.git/index","hash":"be84518835aa405177daedec6562a8c03c4def42","modified":1641463051231},{"_id":"themes/next/source/lib/canvas-ribbon/.git/packed-refs","hash":"1a669ea6243f62a7f4c02d82225d6a49fdadb567","modified":1641463051211},{"_id":"themes/next/source/lib/canvas-ribbon/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1641463051230},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1641435059757},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1641435059758},{"_id":"themes/next/source/lib/pace/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1641463178583},{"_id":"themes/next/source/lib/pace/.git/config","hash":"fadcc75e42b86ee74d05ce56b08984ec6b034e5e","modified":1641463178591},{"_id":"themes/next/source/lib/pace/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1641463177215},{"_id":"themes/next/source/lib/pace/.git/index","hash":"eef81ed6d32b2130004bf5ec50f06af6b4034b0a","modified":1641463178602},{"_id":"themes/next/source/lib/pace/.git/packed-refs","hash":"7728d474cdaa7943851d42c42eaa718b8afbab97","modified":1641463178578},{"_id":"themes/next/source/lib/pace/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1641463178599},{"_id":"themes/next/source/lib/pjax/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1641461671963},{"_id":"themes/next/source/lib/pjax/.git/config","hash":"010b0a17841ab64c111503876d0d06bafdd7ef62","modified":1641461671969},{"_id":"themes/next/source/lib/pjax/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1641461670164},{"_id":"themes/next/source/lib/pjax/.git/index","hash":"f1caad61f19694ecc93efcaa1267e36b111bc9f6","modified":1641461671988},{"_id":"themes/next/source/lib/pjax/.git/packed-refs","hash":"edbdf218d3ec5dca511b8e29e88aebcf725d68ad","modified":1641461671958},{"_id":"themes/next/source/lib/pjax/example/example.js","hash":"4d9fea820f1a91590b0d49099e8a79d3984ba9bf","modified":1641461671979},{"_id":"themes/next/source/lib/pjax/example/forms.html","hash":"35769b826750d64ad649f93ee2272961d65a61c7","modified":1641461671979},{"_id":"themes/next/source/lib/pjax/example/index.html","hash":"1cc0a16040597669b26e8a7168a620520c98f4a1","modified":1641461671979},{"_id":"themes/next/source/lib/pjax/example/page2.html","hash":"5396196c9179746716ef02833504b1172332243f","modified":1641461671979},{"_id":"themes/next/source/lib/pjax/example/page3.html","hash":"703e2d34011c3d8918ba811ead26f1734d4d74fb","modified":1641461671980},{"_id":"themes/next/source/lib/pjax/lib/abort-request.js","hash":"a6eae74d5b80dccde2ee4485ee427aca39dbe66b","modified":1641461671980},{"_id":"themes/next/source/lib/pjax/lib/eval-script.js","hash":"773d5fddaad11e76df9354f3cf8078f26ad760ff","modified":1641461671980},{"_id":"themes/next/source/lib/pjax/lib/foreach-els.js","hash":"95df8390d94be89f23f50e2acbde8e08a6264096","modified":1641461671981},{"_id":"themes/next/source/lib/pjax/lib/execute-scripts.js","hash":"b16da782b37eb0538ac267f4ec4d478e79e96fa6","modified":1641461671981},{"_id":"themes/next/source/lib/pjax/lib/foreach-selectors.js","hash":"e79ce0bccb20e9245605ae7b2d7dc35fa4213c45","modified":1641461671981},{"_id":"themes/next/source/lib/pjax/lib/is-supported.js","hash":"dea4eb52b70fd285ba3df161b51496d30677d9e9","modified":1641461671981},{"_id":"themes/next/source/lib/pjax/lib/parse-options.js","hash":"0b29aa13306a0462d5c6ba0761acd75e65bb1691","modified":1641461671981},{"_id":"themes/next/source/lib/pjax/lib/send-request.js","hash":"ca86271d363eecd1abc854bf03491130101b427d","modified":1641461671982},{"_id":"themes/next/source/lib/pjax/lib/switches-selectors.js","hash":"1348fec349076f4ccf72bb6f01999988764bdafd","modified":1641461671983},{"_id":"themes/next/source/lib/pjax/lib/switches.js","hash":"29ea82638d566d41dc6562873fb3d58310ca34d0","modified":1641461671983},{"_id":"themes/next/source/lib/pjax/lib/uniqueid.js","hash":"643336dc475999234b7843b1e7b38c60a48041bc","modified":1641461671983},{"_id":"themes/next/source/lib/pjax/tests/setup.js","hash":"de561f5d8212d10ae79188b294c94264e6f96386","modified":1641461671988},{"_id":"themes/next/source/lib/pjax/tests/test.ts","hash":"5fc54ab37b36965037b2476e62adbc684cdd5537","modified":1641461671988},{"_id":"themes/next/source/lib/three/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1641462881691},{"_id":"themes/next/source/lib/three/.git/config","hash":"cda2331fd856452032d3b25cb7313af1c9c4c411","modified":1641462881695},{"_id":"themes/next/source/lib/three/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1641462876374},{"_id":"themes/next/source/lib/three/.git/index","hash":"dd24f29dd436bf8186a6f7f37ed3da6817f60326","modified":1641462881716},{"_id":"themes/next/source/lib/three/.git/packed-refs","hash":"51439496ae6791f8b002584e71f5d10f4f1a1f71","modified":1641462881685},{"_id":"themes/next/source/lib/three/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1641462881697},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","hash":"71141daa39bbcedcf14ae95c05023a57828a5a43","modified":1641462881708},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","hash":"10795d7f1e5393b2b5e1529b017ee4e0ffe82ac9","modified":1641462881710},{"_id":"themes/next/source/lib/three/lib/Projector.js","hash":"69725cd0af6868c5aa059343cc6e18e0c10b2f2e","modified":1641462881708},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","hash":"8381c792b161001a1b5cf39613c6d48e2588b3ce","modified":1641462881710},{"_id":"themes/next/source/lib/three/src/three-waves.js","hash":"ac382962d408f16acf07b925b94bb15495b5207c","modified":1641462881711},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1641435059738},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1641435059738},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1641435059738},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"97974c231b4659b8aa5e9321c4d54db5c816d0db","modified":1641435059738},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1641435059738},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a52f8cae599099231866298ed831fdf76c9b6717","modified":1641435059738},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1641435059739},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1641435059739},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1641435059739},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1641435059739},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1641435059739},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"93ba8172c0d2c37d738e6dbd44fcd5a2e23b92f3","modified":1641435059739},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1641435059740},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1641435059740},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1641435059740},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1641435059740},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1641435059740},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"9892dd45bfe7dcedc1b5d5fb76a21036625fb15e","modified":1643014960855},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1641435059741},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1641435059741},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1641435059741},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1641435059741},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1641435059741},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1641435059741},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1641435059742},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1641435059742},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1641435059742},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1641435059742},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1641435059742},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1641435059742},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1641435059742},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1641435059743},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1641435059744},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1641435059744},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"8be852c86aab16a31bd73f4f5c9cc824f93911ed","modified":1641534932011},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1641435059744},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1641435059744},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1641435059744},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1641435059744},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1641435059744},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1641435059744},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1641435059745},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1641435059745},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1641435059746},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1641435059746},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1641435059747},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1641435059747},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1641435059747},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1641435059747},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1641435059747},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1641435059747},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1641435059748},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1641463049609},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/fsmonitor-watchman.sample","hash":"118ff5509f187039734d04456bf01e44c933ac19","modified":1641463049610},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1641463049610},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1641463049610},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1641463049610},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1641463049618},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1641463049618},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-push.sample","hash":"a599b773b930ca83dbc3a5c7c13059ac4a6eaedc","modified":1641463049618},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1641463049618},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1641463049618},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1641463049619},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/push-to-checkout.sample","hash":"508240328c8b55f8157c93c43bf5e291e5d2fbcb","modified":1641463049619},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/update.sample","hash":"730e6bd5225478bab6147b7a62a6e2ae21d40507","modified":1641463049619},{"_id":"themes/next/source/lib/canvas-ribbon/.git/logs/HEAD","hash":"64010ac926f8df85f3ef55b97bddb7277242da4e","modified":1641463051218},{"_id":"themes/next/source/lib/canvas-ribbon/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1641463049619},{"_id":"themes/next/source/lib/pace/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1641463177216},{"_id":"themes/next/source/lib/pace/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1641463177216},{"_id":"themes/next/source/lib/pace/.git/hooks/fsmonitor-watchman.sample","hash":"118ff5509f187039734d04456bf01e44c933ac19","modified":1641463177216},{"_id":"themes/next/source/lib/pace/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1641463177216},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1641463177216},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1641463177217},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1641463177217},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-push.sample","hash":"a599b773b930ca83dbc3a5c7c13059ac4a6eaedc","modified":1641463177217},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1641463177217},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1641463177217},{"_id":"themes/next/source/lib/pace/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1641463177217},{"_id":"themes/next/source/lib/pace/.git/hooks/push-to-checkout.sample","hash":"508240328c8b55f8157c93c43bf5e291e5d2fbcb","modified":1641463177218},{"_id":"themes/next/source/lib/pace/.git/hooks/update.sample","hash":"730e6bd5225478bab6147b7a62a6e2ae21d40507","modified":1641463177218},{"_id":"themes/next/source/lib/pace/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1641463177218},{"_id":"themes/next/source/lib/pace/.git/logs/HEAD","hash":"5611892884978478433f8042e87de544e9dca66a","modified":1641463178586},{"_id":"themes/next/source/lib/pjax/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1641461670164},{"_id":"themes/next/source/lib/pjax/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1641461670165},{"_id":"themes/next/source/lib/pjax/.git/hooks/fsmonitor-watchman.sample","hash":"118ff5509f187039734d04456bf01e44c933ac19","modified":1641461670165},{"_id":"themes/next/source/lib/pjax/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1641461670165},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1641461670165},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1641461670166},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1641461670166},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-push.sample","hash":"a599b773b930ca83dbc3a5c7c13059ac4a6eaedc","modified":1641461670166},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1641461670167},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1641461670167},{"_id":"themes/next/source/lib/pjax/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1641461670167},{"_id":"themes/next/source/lib/pjax/.git/hooks/push-to-checkout.sample","hash":"508240328c8b55f8157c93c43bf5e291e5d2fbcb","modified":1641461670167},{"_id":"themes/next/source/lib/pjax/.git/hooks/update.sample","hash":"730e6bd5225478bab6147b7a62a6e2ae21d40507","modified":1641461670168},{"_id":"themes/next/source/lib/pjax/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1641461670168},{"_id":"themes/next/source/lib/pjax/.git/logs/HEAD","hash":"58c348579346c1073fe062f614a8a70e9915d5a5","modified":1641461671965},{"_id":"themes/next/source/lib/pjax/lib/events/off.js","hash":"edc5309f813bc323a0f470836d763aa54d996042","modified":1641461671980},{"_id":"themes/next/source/lib/pjax/lib/events/on.js","hash":"c8d6059a8117c61e64e10e65a977e6d82b866af8","modified":1641461671981},{"_id":"themes/next/source/lib/pjax/lib/events/trigger.js","hash":"1e8b098cc0ff96a964fe90595bcf65b7d6ca1792","modified":1641461671981},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-form.js","hash":"65db8791b8914ab29f2bad44202d2ee20cfaac1f","modified":1641461671982},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-link.js","hash":"de0d6d91ecb8650e0cb49dc40470233c4bab57e9","modified":1641461671982},{"_id":"themes/next/source/lib/pjax/lib/proto/log.js","hash":"a61b7223e6af70a075bb7c6c5f6ebfa4adbc5f31","modified":1641461671982},{"_id":"themes/next/source/lib/pjax/lib/proto/handle-response.js","hash":"43bff3061ccc910c86247735c6059ff489310a81","modified":1641461671982},{"_id":"themes/next/source/lib/pjax/lib/util/clone.js","hash":"862544f772345622927de6a4bcb27e4ef18aec3e","modified":1641461671983},{"_id":"themes/next/source/lib/pjax/lib/util/contains.js","hash":"77fd6688fb2c1818d9b35f17b6d3b6a70cc492f7","modified":1641461671983},{"_id":"themes/next/source/lib/pjax/lib/proto/parse-element.js","hash":"fa128f4b896c22c48c748b41cd6886ac7325a2d4","modified":1641461671982},{"_id":"themes/next/source/lib/pjax/lib/util/extend.js","hash":"bfd842a1c6b091b9a231652cc9aa4b59bcc4ea6f","modified":1641461671983},{"_id":"themes/next/source/lib/pjax/lib/util/noop.js","hash":"674eb07958489875f1d449b7864511f6bc70ee45","modified":1641461671983},{"_id":"themes/next/source/lib/pjax/lib/util/update-query-string.js","hash":"d505d78906844c180503c63767083d599bfbbfa8","modified":1641461671983},{"_id":"themes/next/source/lib/pjax/tests/lib/abort-request.js","hash":"edb7512db755a13b963510914152b53aaf490e40","modified":1641461671985},{"_id":"themes/next/source/lib/pjax/tests/lib/eval-scripts.js","hash":"3a11fd9978ccc4c5b5ca91699a55336633173d33","modified":1641461671985},{"_id":"themes/next/source/lib/pjax/tests/lib/events.js","hash":"6c4e2b245605bf78d84fcd596034680f6e483dee","modified":1641461671985},{"_id":"themes/next/source/lib/pjax/tests/lib/execute-scripts.js","hash":"2419bf5111e717b720643dbf5f89e49f301b4ac0","modified":1641461671985},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-els.js","hash":"a94e48ceede2b4543e82f74ed0f2b2da3fb8357f","modified":1641461671985},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-selectors.js","hash":"2ca80242a94d2aab40fd0e25d91a6db4991802ce","modified":1641461671985},{"_id":"themes/next/source/lib/pjax/tests/lib/is-supported.js","hash":"19f819a9508f4ce2ce11ad8f27979fa84d7a2a52","modified":1641461671985},{"_id":"themes/next/source/lib/pjax/tests/lib/parse-options.js","hash":"65baba099b1074521287a10f5ff3f4e99cf8f8ee","modified":1641461671986},{"_id":"themes/next/source/lib/pjax/tests/lib/send-request.js","hash":"b8fd6112a0d908c0f4c64ec898578bedbd23ed70","modified":1641461671986},{"_id":"themes/next/source/lib/pjax/tests/lib/switch-selectors.js","hash":"b3f170dd24a1d4a9aefbb5cdfbaad16dfafa6c80","modified":1641461671987},{"_id":"themes/next/source/lib/pjax/tests/lib/switches.js","hash":"0274886c7f0985da381c234a3ddca510e1a8cc0f","modified":1641461671987},{"_id":"themes/next/source/lib/pjax/tests/lib/uniqueid.js","hash":"e0bc8cf01dcc15eb72a856c4f0734f02790e3275","modified":1641461671988},{"_id":"themes/next/source/lib/three/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1641462876375},{"_id":"themes/next/source/lib/three/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1641462876375},{"_id":"themes/next/source/lib/three/.git/hooks/fsmonitor-watchman.sample","hash":"118ff5509f187039734d04456bf01e44c933ac19","modified":1641462876375},{"_id":"themes/next/source/lib/three/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1641462876375},{"_id":"themes/next/source/lib/three/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1641462876376},{"_id":"themes/next/source/lib/three/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1641462876375},{"_id":"themes/next/source/lib/three/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1641462876376},{"_id":"themes/next/source/lib/three/.git/hooks/pre-push.sample","hash":"a599b773b930ca83dbc3a5c7c13059ac4a6eaedc","modified":1641462876376},{"_id":"themes/next/source/lib/three/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1641462876376},{"_id":"themes/next/source/lib/three/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1641462876376},{"_id":"themes/next/source/lib/three/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1641462876377},{"_id":"themes/next/source/lib/three/.git/hooks/push-to-checkout.sample","hash":"508240328c8b55f8157c93c43bf5e291e5d2fbcb","modified":1641462876377},{"_id":"themes/next/source/lib/three/.git/hooks/update.sample","hash":"730e6bd5225478bab6147b7a62a6e2ae21d40507","modified":1641462876377},{"_id":"themes/next/source/lib/three/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1641462876377},{"_id":"themes/next/source/lib/three/.git/logs/HEAD","hash":"fa7356843478d8847cd74334232f4110c6b1c389","modified":1641462881693},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/pack/pack-51ad3c571540d30ecb2fd40cca6293673eef2128.pack","hash":"721d98e54084ae6c5a293eb8f4f49db4f530f135","modified":1641463051179},{"_id":"themes/next/source/lib/canvas-ribbon/.git/refs/heads/master","hash":"16bd947558482613ed699f6cd50bfef39a7837da","modified":1641463051218},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/pack/pack-51ad3c571540d30ecb2fd40cca6293673eef2128.idx","hash":"b3ed21853151871bcff26c186e8f7f91d585c99e","modified":1641463051179},{"_id":"themes/next/source/lib/pace/.git/objects/pack/pack-a216b3a30ac40cd759f5986da014d2e403d1e7ba.idx","hash":"9d38ccbcc91ea9aa27a81c3e387044a01b2341fe","modified":1641463178546},{"_id":"themes/next/source/lib/pace/.git/objects/pack/pack-a216b3a30ac40cd759f5986da014d2e403d1e7ba.pack","hash":"18445e371c7ea0fa1976e4c5d8da6685cce0c1c9","modified":1641463178546},{"_id":"themes/next/source/lib/pace/.git/refs/heads/master","hash":"22684435265b2bb504024b34b80ffbd6786a2411","modified":1641463178586},{"_id":"themes/next/source/lib/pjax/.git/objects/pack/pack-c44afb8b14583aea8a946bf5944820752f2a752d.idx","hash":"db4f698e84be1b114c7d29712172449b3183c286","modified":1641461671926},{"_id":"themes/next/source/lib/pjax/.git/refs/heads/master","hash":"3c8414e83b32974579667c4c79e04af7d699edde","modified":1641461671965},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-form.js","hash":"93675412f1c9e4008ab5c64edcb9a08b549bb477","modified":1641461671986},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-link.js","hash":"9b1b047dc1d1d3d114540438511afcedb5b86528","modified":1641461671986},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/handle-response.js","hash":"1dbbfa86a360c1109fc1153bea363cfd57d05afe","modified":1641461671986},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/parse-element.js","hash":"942486a70ec1f582f456834df4f22effa2603a87","modified":1641461671986},{"_id":"themes/next/source/lib/pjax/tests/lib/util/clone.js","hash":"306d6430ddcddf7c67c1d76ed784036713cd86a1","modified":1641461671988},{"_id":"themes/next/source/lib/pjax/tests/lib/util/contains.js","hash":"c8b155c78944368f37715f9631115769ea1f645b","modified":1641461671988},{"_id":"themes/next/source/lib/pjax/tests/lib/util/extend.js","hash":"f46afc9bf5c2ebe3766ffeb0ee638ac610e70332","modified":1641461671988},{"_id":"themes/next/source/lib/pjax/tests/lib/util/noop.js","hash":"ed2fb792fe378b9b92cf7854a3e395fc6eec21bf","modified":1641461671988},{"_id":"themes/next/source/lib/pjax/tests/lib/util/update-query-string.js","hash":"ffd39a45f445e2f2d20593415ef31280bff7dfdd","modified":1641461671988},{"_id":"themes/next/source/lib/three/.git/objects/pack/pack-75f0bd54ccc830622c5523e90e168e5d930b759d.idx","hash":"5f4f97f13dbe353456fa6978bc089b4320f79272","modified":1641462881306},{"_id":"themes/next/source/lib/three/.git/refs/heads/master","hash":"dcb9d54aa64c8a682ca5ca209370022b8a8dc843","modified":1641462881693},{"_id":"themes/next/source/lib/canvas-ribbon/.git/logs/refs/heads/master","hash":"64010ac926f8df85f3ef55b97bddb7277242da4e","modified":1641463051218},{"_id":"themes/next/source/lib/pace/.git/logs/refs/heads/master","hash":"5611892884978478433f8042e87de544e9dca66a","modified":1641463178586},{"_id":"themes/next/source/lib/canvas-ribbon/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1641463051216},{"_id":"themes/next/source/lib/pace/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1641463178583},{"_id":"themes/next/source/lib/pjax/.git/logs/refs/heads/master","hash":"58c348579346c1073fe062f614a8a70e9915d5a5","modified":1641461671965},{"_id":"themes/next/source/lib/pjax/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1641461671963},{"_id":"themes/next/source/lib/three/.git/logs/refs/heads/master","hash":"fa7356843478d8847cd74334232f4110c6b1c389","modified":1641462881693},{"_id":"themes/next/source/lib/three/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1641462881690},{"_id":"themes/next/source/lib/canvas-ribbon/.git/logs/refs/remotes/origin/HEAD","hash":"64010ac926f8df85f3ef55b97bddb7277242da4e","modified":1641463051216},{"_id":"themes/next/source/lib/pace/.git/logs/refs/remotes/origin/HEAD","hash":"5611892884978478433f8042e87de544e9dca66a","modified":1641463178583},{"_id":"themes/next/source/lib/pjax/.git/logs/refs/remotes/origin/HEAD","hash":"58c348579346c1073fe062f614a8a70e9915d5a5","modified":1641461671963},{"_id":"themes/next/source/lib/three/.git/logs/refs/remotes/origin/HEAD","hash":"fa7356843478d8847cd74334232f4110c6b1c389","modified":1641462881689},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"47167a03d5377b65426921073b9d75f0fb5e04e9","modified":1641435937939},{"_id":"themes/next/source/images/wechatpay.png","hash":"ec1c810888244275cccce5ed9abb39efc057913e","modified":1641436601920},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1641435059758},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1641435059758},{"_id":"themes/next/package-lock.json","hash":"370735c607404ab4ffdec3bd311422e2f7743aa1","modified":1641697461673},{"_id":"themes/next/source/lib/three/.git/objects/pack/pack-75f0bd54ccc830622c5523e90e168e5d930b759d.pack","hash":"89e534013b432027b94500494ad5573cd869ce00","modified":1641462881306},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1641462881715},{"_id":"themes/next/source/lib/pjax/.git/objects/pack/pack-c44afb8b14583aea8a946bf5944820752f2a752d.pack","hash":"c1012ba4ce7f42ed478471cc6dd0c20153bfc19f","modified":1641461671925},{"_id":"public/baidusitemap.xml","hash":"91c1732056eef726601f895e2844f3e7a6025ae2","modified":1644729277480},{"_id":"public/search.xml","hash":"86b6048d8998f6cee0dde33cf8e22be867ba5b3d","modified":1644729277480},{"_id":"public/sitemap.xml","hash":"d867142c0d5e1702bce6f08e926a434cc68516ea","modified":1644729277480},{"_id":"public/content.json","hash":"f23cfd3806281c6e98c01a932ea182c65b227af4","modified":1644729277480},{"_id":"public/atom.xml","hash":"6ff7194f182dd847313a6821739de748c8916f92","modified":1644729277480},{"_id":"public/404.html","hash":"0dc793257a1eaf73f97f656d3118b9f177dcc23e","modified":1644729277480},{"_id":"public/categories/index.html","hash":"ec7ccbc97eca6a6bf57dc9ddb5a0e7d134ba27be","modified":1644729277480},{"_id":"public/tags/index.html","hash":"fc90983829ca7bd2a0e81471f5a9d418b3cd24ca","modified":1644729277480},{"_id":"public/index.html","hash":"910cbb14387da9be813719e67ff994e289593a9f","modified":1644729277480},{"_id":"public/2022/02/13/JavaScript-正则收录/index.html","hash":"c1f36fe8f676118040be09f2cbb33ca24b182156","modified":1644729277480},{"_id":"public/2022/01/26/TypeScript-React组件中的类型注解/index.html","hash":"790c74cba29727a6d5becc26687a310d23642819","modified":1644729277480},{"_id":"public/2022/01/26/JavaScript-开发技巧/index.html","hash":"fac5b829a3f64a4312cdc7383ca495d7bdac8530","modified":1644729277480},{"_id":"public/2022/01/25/工具合集/index.html","hash":"68328b1a70c4d706d26b617f86b6281888936afe","modified":1644729277480},{"_id":"public/2022/01/25/Typescript-基础/index.html","hash":"6f4109631ebec174bfb7d51a59bc839796ba9fb6","modified":1644729277480},{"_id":"public/2022/01/24/ThreeJS-知识体系/index.html","hash":"a82523f4db1cb026b5de26f26952f6dc686fbaac","modified":1644729277480},{"_id":"public/2022/01/24/Hexo-持续改进/index.html","hash":"ec2aa0d8795c5d732d4e62971e67a72a26a60d3d","modified":1644729277480},{"_id":"public/2022/01/23/React插件-react-codemirror2/index.html","hash":"e7c387163701895eb290dd1972004967e72970ab","modified":1644729277480},{"_id":"public/2022/01/18/Echarts-开发笔记/index.html","hash":"1dc955b79958e810e92c8cb75e7105f38e08ce42","modified":1644729277480},{"_id":"public/2022/01/17/微信小程序-开发笔记/index.html","hash":"9487edc9af2eb00d393c82d7dc89551526a85ab0","modified":1644729277480},{"_id":"public/2022/01/14/nodeppt-css/index.html","hash":"ccfcfb0f98e0eae67a8e427249508eb2c2ef284c","modified":1644729277480},{"_id":"public/2022/01/14/生成PPT-nodeppt/index.html","hash":"ad151ac15591731e8ccb4284ff001d3f9574b377","modified":1644729277480},{"_id":"public/2022/01/14/React-基础开发框架搭建/index.html","hash":"785f71b5dc633b8d3815df0b9309742a104a39d5","modified":1644729277480},{"_id":"public/2022/01/14/webpack-技巧篇/index.html","hash":"f9106c35cd3f48b61d532c7868995144b7b6f371","modified":1644729277480},{"_id":"public/2022/01/13/CSS-开发技巧/index.html","hash":"d1992cf2dca9c9b5360006529ad0a5bd5dc86aaf","modified":1644729277480},{"_id":"public/2022/01/10/Hexo-Note-使用NexT主题/index.html","hash":"2a53e15c6fb8e33eac37f6713e93671cff5441cb","modified":1644729277480},{"_id":"public/2022/01/09/Hexo-Note-命令/index.html","hash":"0b67fc59f4dba6983aef8624769845aa2a68447e","modified":1644729277480},{"_id":"public/2022/01/09/Hexo-Note-初始化及常用配置/index.html","hash":"a074b7cb8d3d8ba53f1675f4c2721bbced6a18b7","modified":1644729277480},{"_id":"public/2022/01/05/Markdown-using-document/index.html","hash":"47baeeac2bc056833d14e9d151116e1e7ccbd1ff","modified":1644729277480},{"_id":"public/2022/01/05/There-js入门系列之React中使用Three-js/index.html","hash":"fef8056a6a3bf9169d5ca68aec03132ee4f56f7c","modified":1644729277480},{"_id":"public/archives/index.html","hash":"2e175762b51607093ea469d31ff4a3c8ca3eb659","modified":1644729277480},{"_id":"public/archives/page/2/index.html","hash":"9d1aae4fd99fb91cfd5711df19eec9663cc55b06","modified":1644729277480},{"_id":"public/archives/2022/index.html","hash":"c4c477f513c537687bac86f2e273a61dae2a3a9b","modified":1644729277480},{"_id":"public/archives/2022/page/2/index.html","hash":"58b7d2acf2df6e372f8300d01dc6664385126a4b","modified":1644729277480},{"_id":"public/archives/2022/01/index.html","hash":"820e30feefa7f3f71b6911b5644a6f1683164f62","modified":1644729277480},{"_id":"public/archives/2022/01/page/2/index.html","hash":"6942429937b99a358cb7c67e9abbb36de47a2ccf","modified":1644729277480},{"_id":"public/archives/2022/02/index.html","hash":"2e6bdcad2978c75efac9e79d8f08f17eaeeaebad","modified":1644729277480},{"_id":"public/categories/CSS/index.html","hash":"18234173737e75a358f3608c7a92bdfac4f685ea","modified":1644729277480},{"_id":"public/categories/Echarts/index.html","hash":"d142c8497a9e0d72ad8aab52d627333a84b0f785","modified":1644729277480},{"_id":"public/categories/Hexo/index.html","hash":"c67dbf7b0acf09384dc660be897f0e55533ecd33","modified":1644729277480},{"_id":"public/categories/JavaScript/index.html","hash":"d1d25aa77d15cbc88dad7d76cf346a4c34926c37","modified":1644729277480},{"_id":"public/categories/handbook/index.html","hash":"f101247bc7c0fff0d10ae335a269db401bf954c7","modified":1644729277480},{"_id":"public/categories/React/index.html","hash":"fc64c588a955aff74c07046cdc75ba3be794bde9","modified":1644729277480},{"_id":"public/categories/web/index.html","hash":"ead9c440bb24c8e98cd870e0b6da720eabefdee5","modified":1644729277480},{"_id":"public/categories/ThreeJs/index.html","hash":"281d4027eb0aca74254bafc45b78f6e1c57d4d84","modified":1644729277480},{"_id":"public/categories/TypeScript/index.html","hash":"70bd10f4fb033a96e2a7801d97051e3bb24e8925","modified":1644729277480},{"_id":"public/categories/nodeppt/index.html","hash":"f3a5d80a3317fa4b3691c05e429c517a73650230","modified":1644729277480},{"_id":"public/categories/webpack/index.html","hash":"b501676360cb91a61c2ec5765f7f3761872d82cc","modified":1644729277480},{"_id":"public/categories/工具/index.html","hash":"b80002a021bdedc926063508512ea0ffb97e66c7","modified":1644729277480},{"_id":"public/categories/JavaScript/正则/index.html","hash":"d0bfb9480cdea6a31dfc3290ee21be47f940f204","modified":1644729277480},{"_id":"public/categories/微信小程序，开发笔记/index.html","hash":"d6d64ac797da0477d65bcc502598f1913bc47b3a","modified":1644729277480},{"_id":"public/categories/PPT/index.html","hash":"ba0d36c45accfdf27b031eba7ce6bc694939e3bc","modified":1644729277480},{"_id":"public/categories/handbook/Markdown/index.html","hash":"19fb75a619d4a4f0d4a0b533ecf3f4b537f9ebaa","modified":1644729277480},{"_id":"public/categories/React/create-react-app/index.html","hash":"6678784d0bae4eaa44a2be141ff2694d5ec849b7","modified":1644729277480},{"_id":"public/categories/React/插件/index.html","hash":"83cf031673fcab2fd8486a92dead35650b747d77","modified":1644729277480},{"_id":"public/categories/web/ThreeJS/index.html","hash":"0ae344a7578bda06b974a9300a773ddc06e20773","modified":1644729277480},{"_id":"public/categories/TypeScript/React-Props/index.html","hash":"96170e6484c12c74f4901f7fa8b159d108689888","modified":1644729277480},{"_id":"public/categories/PPT/nodeppt/index.html","hash":"9495e74c1d30808a564d480e8b8906d4b4cbb393","modified":1644729277480},{"_id":"public/tags/CSS/index.html","hash":"9d999e75f0e8d8878d34cb368684f0ca0d525980","modified":1644729277480},{"_id":"public/tags/开发技巧/index.html","hash":"d15a463115110c23bb8665eca890286251642c99","modified":1644729277480},{"_id":"public/tags/Echarts/index.html","hash":"5db75a7c2d65f48ddfb48a5111fa7f4d359f6808","modified":1644729277480},{"_id":"public/tags/开发笔记/index.html","hash":"8e3085cddbb6aa007e56898a0dba7f2ae76cf7c6","modified":1644729277480},{"_id":"public/tags/Hexo/index.html","hash":"51c1ff6c6b86743edda1c22d155d4a51f9cf2131","modified":1644729277480},{"_id":"public/tags/JavaScript/index.html","hash":"281ce8bb50b2175eacf1c0734081c9509dd74eec","modified":1644729277480},{"_id":"public/tags/正则/index.html","hash":"09605a394b274c3719fa334c0403e2db60ef0f13","modified":1644729277480},{"_id":"public/tags/Markdown/index.html","hash":"3914ebcb85d2f798c6202498b50a3943ff8874a3","modified":1644729277480},{"_id":"public/tags/handbook/index.html","hash":"ec364da4edbc02414e45e7f9585101e841482c3e","modified":1644729277480},{"_id":"public/tags/React/index.html","hash":"3c406c01202f47782f985846cf13c236c7996340","modified":1644729277480},{"_id":"public/tags/框架搭建/index.html","hash":"43a6794d3c5e7485701dbc832dfa18465ac2e63e","modified":1644729277480},{"_id":"public/tags/creat-react-app/index.html","hash":"c9335de269e81ab2c8aeec2b5e5902189bf60b56","modified":1644729277480},{"_id":"public/tags/插件/index.html","hash":"edb7f33a346140513aa0e511935a81efc0285268","modified":1644729277480},{"_id":"public/tags/react-codemirror2/index.html","hash":"424a931649767b49a4a9093a85c43e64baeceac7","modified":1644729277480},{"_id":"public/tags/web/index.html","hash":"ad05951ee649d22402faf76cbcb74e2ecd681640","modified":1644729277480},{"_id":"public/tags/ThreeJS/index.html","hash":"65f140c9b957b3f15c9301756367d1f77e0d6641","modified":1644729277480},{"_id":"public/tags/encrypt/index.html","hash":"98285b67ec35ed25362e3bff1f9a2cd4e84c5448","modified":1644729277480},{"_id":"public/tags/ThreeJs/index.html","hash":"a0e438697666c933f705feaf7781399f5ef75fb4","modified":1644729277480},{"_id":"public/tags/TypeScript/index.html","hash":"98b596cf6715b05de5f3c8372ebe17e3c4bea3ee","modified":1644729277480},{"_id":"public/tags/nodeppt/index.html","hash":"881636daee0d6b58b0407e8b3405b391153b3ff4","modified":1644729277480},{"_id":"public/tags/webpack/index.html","hash":"8be128658ea23f928409d82f59a8724ea1e870aa","modified":1644729277480},{"_id":"public/tags/工具/index.html","hash":"194751614eea2dff1e4a533330d9cdc0af6c998e","modified":1644729277480},{"_id":"public/tags/微信小程序，开发笔记/index.html","hash":"c10732186a752b3474ccb250a77c9c85e2adfb7f","modified":1644729277480},{"_id":"public/tags/PPT/index.html","hash":"ae671cb1e32c4a79a32331933743339e5c23d111","modified":1644729277480},{"_id":"public/page/2/index.html","hash":"d27e3e19e450b622a71e15997407984c47b2a361","modified":1644729277480},{"_id":"public/nodeppt/demo.html","hash":"4b1874ecd087412522ccc97da30790971720e95c","modified":1644729277480},{"_id":"public/robots.txt","hash":"f5413416f3268b3aa7715f7b0ec2fcc26c0363ec","modified":1644729277480},{"_id":"public/404/img.png","hash":"812084879aba3c5d5200efd61631c0b4f911c5b4","modified":1644729277480},{"_id":"public/nodeppt/img/swipe.svg","hash":"21c944bb622059b5f2974345dd35f082d01f3333","modified":1644729277480},{"_id":"public/nodeppt/js/chunk-vendors.js.LICENSE.txt","hash":"b9fe24e9574b5f05a2fbb03f8234b998e6c8c12c","modified":1644729277480},{"_id":"public/nodeppt/js/chunk-vendors.js","hash":"9d028f9ae9cdfabe44ea2d4f01cb533ac3642a09","modified":1644729277480},{"_id":"public/nodeppt/js/demo.js.LICENSE.txt","hash":"b9fe24e9574b5f05a2fbb03f8234b998e6c8c12c","modified":1644729277480},{"_id":"public/nodeppt/js/demo.js","hash":"bb4b94d53ec066dd17e9dd0e5f519bfc7adc2c08","modified":1644729277480},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1644729277480},{"_id":"public/images/avatar.gif","hash":"9d5cb17b9b206016aca2530fb6e9c8d166bcd219","modified":1644729277480},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1644729277480},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1644729277480},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1644729277480},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1644729277480},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1644729277480},{"_id":"public/images/favicon-16x16-next.png","hash":"2826163eb1cccf2e17fe002b1bc3072743b11bb1","modified":1644729277480},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1644729277480},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1644729277480},{"_id":"public/images/favicon-32x32-next.png","hash":"255885cf2641441745cffdbcb6aebf744569a3f8","modified":1644729277480},{"_id":"public/images/logo.svg","hash":"bd5e37ae30c3538e0e4061a6002293e9f9557f89","modified":1644729277480},{"_id":"public/images/wechat_channel.png","hash":"400b68b3f37f0af0c7285ae49ec66bae73d52306","modified":1644729277480},{"_id":"public/uploads/wechat-qcode.jpg","hash":"7fd36404971e7c5fc2bb07a5b889143f1e83ad75","modified":1644729277480},{"_id":"public/lib/canvas-ribbon/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1644729277480},{"_id":"public/lib/pace/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1644729277480},{"_id":"public/lib/pjax/LICENSE","hash":"2c7168814d9d35ea9500809b0904962f511eb4a8","modified":1644729277480},{"_id":"public/lib/pjax/index.d.ts","hash":"c452cd6e990eeeea10f7dbf17fefbc6845585bf6","modified":1644729277480},{"_id":"public/lib/three/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1644729277480},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1644729277480},{"_id":"public/lib/pjax/tests/test.ts","hash":"5fc54ab37b36965037b2476e62adbc684cdd5537","modified":1644729277480},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1644729277480},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1644729277480},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/14_%20sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1644729277480},{"_id":"public/live2dw/assets/ni-j.model.json","hash":"3c77e66d6436136bf50d5fdbc8ee8cd543a35e01","modified":1644729277480},{"_id":"public/live2dw/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1644729277480},{"_id":"public/live2dw/assets/ni-j.physics.json","hash":"ef2dd194f934f129f5f4db7785a9c7b7e45671ff","modified":1644729277480},{"_id":"public/live2dw/assets/ni-j.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1644729277480},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1644729277480},{"_id":"public/images/apple-touch-icon-next.png","hash":"47167a03d5377b65426921073b9d75f0fb5e04e9","modified":1644729277480},{"_id":"public/images/wechatpay.png","hash":"ec1c810888244275cccce5ed9abb39efc057913e","modified":1644729277480},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1644729277480},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1644729277480},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1644729277480},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1644729277480},{"_id":"public/live2dw/assets/moc/ni-j.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1644729277480},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1644729277480},{"_id":"public/live2dw/assets/moc/ni-j.2048/texture_01.png","hash":"f868cb3bffe97108ef677c43659a6ad7f6a906b2","modified":1644729277480},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1644729277480},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1644729277480},{"_id":"public/css/main.css","hash":"4317138bd7f49eac23762cb41ed7ed975b86e4a3","modified":1644729277480},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1644729277480},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1644729277480},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1644729277480},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1644729277480},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1644729277480},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1644729277480},{"_id":"public/lib/canvas-ribbon/README.html","hash":"1b6d10c79836d002d90f4bcf35f498f1bf38c7ee","modified":1644729277480},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"65b1a8f12d04b15d7ed6eeb9d11dec760a799c5f","modified":1644729277480},{"_id":"public/lib/pace/README.html","hash":"b1db0e6c71c25fbdc5a161e1bd70382846ce99ab","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-flat-top.min.css","hash":"5e1c97e232b46e48592a8e4983ae5a89e0a7da6a","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1644729277480},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1644729277480},{"_id":"public/lib/pjax/CHANGELOG.html","hash":"1646dbdd1b80dcdb9b8704b1fcfe81345f5fcd6d","modified":1644729277480},{"_id":"public/lib/pjax/package.json","hash":"da55143475b12cb91a44aeb5a995c53879fe3326","modified":1644729277480},{"_id":"public/lib/pjax/index.js","hash":"4af61bcf253ce67d67bb0f524b441869301de9a5","modified":1644729277480},{"_id":"public/lib/three/README.html","hash":"d8faebc08f93684752eeb936400e62117bd59b6e","modified":1644729277480},{"_id":"public/lib/three/gulpfile.js","hash":"e0e9e7051d9d82a37c2aba1df396d8b3916323c4","modified":1644729277480},{"_id":"public/lib/three/package.json","hash":"3e6a0c56ec47a38c0bf7b404f6e46965ec7d2e3d","modified":1644729277480},{"_id":"public/lib/three/renovate.json","hash":"94990e0ad04ce4a7c6f0ac3543318d9e02db1264","modified":1644729277480},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1644729277480},{"_id":"public/lib/pjax/example/example.js","hash":"48b27c93eb351d2fa91247c35038a9f1627e971a","modified":1644729277480},{"_id":"public/lib/pjax/example/index.html","hash":"4a00b556253eeb11fc10013c8c3940a019154001","modified":1644729277480},{"_id":"public/lib/pjax/example/forms.html","hash":"aa62fc6e697e17e16a947eb0176dc24e2e42d72c","modified":1644729277480},{"_id":"public/lib/pjax/example/page3.html","hash":"8d1d6a9afd80caf29e5b22f10a849b23a864a6a4","modified":1644729277480},{"_id":"public/lib/pjax/example/page2.html","hash":"7654e0a5a471bec5d74fb88d9f2f218817afdd52","modified":1644729277480},{"_id":"public/lib/pjax/lib/eval-script.js","hash":"d5980b3c5f3c1a95427eab0d7d2263324fb72bca","modified":1644729277480},{"_id":"public/lib/pjax/lib/abort-request.js","hash":"cbae038c94f70163340801cb608f4e503640b88d","modified":1644729277480},{"_id":"public/lib/pjax/lib/foreach-els.js","hash":"d8e50967878930891112f4acb46f47697ddc3ad7","modified":1644729277480},{"_id":"public/lib/pjax/lib/execute-scripts.js","hash":"8c7c18b14c11af7e2d8dd0146b7df428bf8149bb","modified":1644729277480},{"_id":"public/lib/pjax/lib/send-request.js","hash":"15c341d066b0d60879ef3ca5ff858103381fb378","modified":1644729277480},{"_id":"public/lib/pjax/lib/switches-selectors.js","hash":"f31b4af163db3d9a5b3bb7c7534a4a2dd5543435","modified":1644729277480},{"_id":"public/lib/pjax/lib/switches.js","hash":"4e283f667c10e0fea15e269f1c73ccb699979bb4","modified":1644729277480},{"_id":"public/lib/pjax/lib/uniqueid.js","hash":"eb127cf8936e5bdcaa7459cf5bd042ff96b5a387","modified":1644729277480},{"_id":"public/lib/pjax/lib/is-supported.js","hash":"62ede7268080ab7efddd64fced8b3e79af2901f6","modified":1644729277480},{"_id":"public/lib/pjax/tests/setup.js","hash":"4a9489e72cbe98527931d95d68b68e2d6a9bff6e","modified":1644729277480},{"_id":"public/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1644729277480},{"_id":"public/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1644729277480},{"_id":"public/lib/pjax/lib/foreach-selectors.js","hash":"b11d36344a7a6aa36d533a335785772c9bfb6bc9","modified":1644729277480},{"_id":"public/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1644729277480},{"_id":"public/lib/pjax/lib/events/on.js","hash":"111fba16cc4ca701aefedea2589c832b60af303d","modified":1644729277480},{"_id":"public/lib/pjax/lib/events/off.js","hash":"79920b24246e150f1c73511f1a271b93b9c5d9c8","modified":1644729277480},{"_id":"public/lib/pjax/lib/proto/attach-form.js","hash":"b41c66e58897e6371fbd04cd2b9eb7bae10e0d89","modified":1644729277480},{"_id":"public/lib/pjax/lib/events/trigger.js","hash":"c05ba73199c5e2c7682655491ed37743bd451751","modified":1644729277480},{"_id":"public/lib/pjax/lib/proto/attach-link.js","hash":"d15a61235aa8c1615e60ea34d9bbee834be804d0","modified":1644729277480},{"_id":"public/lib/pjax/lib/proto/log.js","hash":"c728730594aed7d81509787c5bb487af014415e1","modified":1644729277480},{"_id":"public/lib/pjax/lib/proto/handle-response.js","hash":"f68bab958cce4dbbcb91920d7a8aba55b9066b41","modified":1644729277480},{"_id":"public/lib/pjax/lib/parse-options.js","hash":"054a902e9f350f7414b80f62419da004dd90aa37","modified":1644729277480},{"_id":"public/lib/pjax/lib/util/clone.js","hash":"55027b88e007818c6963205fcd0090a61af8237c","modified":1644729277480},{"_id":"public/lib/pjax/lib/proto/parse-element.js","hash":"52bef8a845aab0d54907f73875fa58b4084019be","modified":1644729277480},{"_id":"public/lib/pjax/lib/util/contains.js","hash":"fcc9be0477d941b7c4ba71de328773e556ded7ce","modified":1644729277480},{"_id":"public/lib/pjax/lib/util/noop.js","hash":"2c9f7e231af1a62db195875ca62df7edc253c3c4","modified":1644729277480},{"_id":"public/lib/pjax/lib/util/extend.js","hash":"e599aaef93e3a00ccbd92cd87df09898d712e398","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/abort-request.js","hash":"96d7a604ca275455199bd94d16b9cdc254bee9b9","modified":1644729277480},{"_id":"public/lib/pjax/lib/util/update-query-string.js","hash":"eefcbff322f8c607865d47ee8fa49f1c8bfa8d7a","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/eval-scripts.js","hash":"3c9125a04cec9d511f16f9311656533ef6a115d1","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/execute-scripts.js","hash":"2d02a0151ead9924516cdae9308f8667b27a7ea7","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/events.js","hash":"70ca7ec140d1dcf8c4958e7b6788b09ef2b60181","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/foreach-els.js","hash":"85995dd27d0d866cfaf5c560732fab8b0099938c","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/foreach-selectors.js","hash":"898b48ef191719070488f16a54fba8a794b10057","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/is-supported.js","hash":"e25c7e69c8b7a64a44affcae317adb2b3889aee6","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/parse-options.js","hash":"45ab302da33e5457a71fd22bbd082e51f5b06b49","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/send-request.js","hash":"d6adad7f95754c53b9885c0999a5118995fdc76f","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/switch-selectors.js","hash":"993dd67b1b629288feb8d167fb12b602626cf1d5","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/proto/attach-form.js","hash":"3614a962e3185b354a2e0d987bcecdef4a209da6","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/uniqueid.js","hash":"430550f31b9e6356c2e3a033c1b418bd6acd9667","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/switches.js","hash":"f5dfdf57bafd2b4edd5f854d70837b5fe760756e","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/proto/attach-link.js","hash":"9d283cb0b09730e932673c73a3352a2d2e8939fa","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/proto/handle-response.js","hash":"26e0e334f0b20ff2fe75b3ab12a93ce44a5823f0","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/proto/parse-element.js","hash":"474edc8844028de67cbad054da79c05727620785","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/util/extend.js","hash":"d45488ff6f8e3e1b59a62d0c88c86b750fe50ed4","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/util/contains.js","hash":"bc0c8be855e9736cb256a2aa44fd46f3a7d1d6c5","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/util/noop.js","hash":"6959a4c02c41453a5edfa4163e36752fcfa3edf9","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/util/clone.js","hash":"4b0e62bd0f4eef3549b0da70987f63ce4953bef0","modified":1644729277480},{"_id":"public/lib/pjax/tests/lib/util/update-query-string.js","hash":"4158dcd877c5f229400417e0da22eb4c5b8e8e38","modified":1644729277480},{"_id":"public/nodeppt/css/chunk-vendors.4e4765ff.css","hash":"abd0e586824cde74bd2348327b0d209e38d6e9b0","modified":1644729277480},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1644729277480},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1644729277480},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1644729277480},{"_id":"public/lib/pace/pace-theme-material.min.css","hash":"f1ff83985c090f3a3236554c5ef69542dcceb049","modified":1644729277480},{"_id":"public/lib/pjax/README.html","hash":"b00baa4b41400b5987274a6b26b096b995c63a51","modified":1644729277480},{"_id":"public/lib/pjax/pjax.min.js","hash":"68d0c6ad28f042c78fc18a6e9d782a7047c01905","modified":1644729277480},{"_id":"public/lib/three/canvas_lines.min.js","hash":"ae6584edc0418d68731cab82c1494f26bd77c07d","modified":1644729277480},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"186c3bd6ae352d336cdbd0e555ee76a844854c94","modified":1644729277480},{"_id":"public/lib/three/three-waves.min.js","hash":"329483be97cdda030779da9a6cd1e3eae645cf4f","modified":1644729277480},{"_id":"public/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1644729277480},{"_id":"public/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1644729277480},{"_id":"public/lib/pjax/pjax.js","hash":"e973e2c6ffb6f6d7b4a1730ba0ed6d3628b2b39f","modified":1644729277480},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1644729277480},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1644729277480},{"_id":"public/live2dw/assets/moc/ni-j.moc","hash":"d846e2c4a4db0f003f2eda466f64cf2165e39ad8","modified":1644729277480},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1644729277480},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1644729277480}],"Category":[{"name":"CSS","_id":"ckzktchbg0004okpc731r1u4e"},{"name":"Echarts","_id":"ckzktchbj000bokpc148i0eu9"},{"name":"Hexo","_id":"ckzktchbl000gokpc9q0u0ip0"},{"name":"JavaScript","_id":"ckzktchbt000xokpcb0ore0i5"},{"name":"handbook","_id":"ckzktchbw001aokpc98tbfalg"},{"name":"React","_id":"ckzktchbx001gokpc5la8066n"},{"name":"web","_id":"ckzktchby001lokpc0jfc1dn1"},{"name":"ThreeJs","_id":"ckzktchbz001pokpc2rgchn9f"},{"name":"TypeScript","_id":"ckzktchbz001rokpc3xod7n9b"},{"name":"nodeppt","_id":"ckzktchc0001yokpcg60rcpwi"},{"name":"webpack","_id":"ckzktchc10021okpc9efk4sdu"},{"name":"工具","_id":"ckzktchc20025okpc2ny288i8"},{"name":"正则","parent":"ckzktchbt000xokpcb0ore0i5","_id":"ckzktchc3002aokpc2am0c2f9"},{"name":"微信小程序，开发笔记","_id":"ckzktchc3002dokpcf7qj7oyy"},{"name":"PPT","_id":"ckzktchc4002iokpch0h8cspv"},{"name":"Markdown","parent":"ckzktchbw001aokpc98tbfalg","_id":"ckzktchc4002nokpc61g37tel"},{"name":"create-react-app","parent":"ckzktchbx001gokpc5la8066n","_id":"ckzktchc4002pokpchxj29wm6"},{"name":"插件","parent":"ckzktchbx001gokpc5la8066n","_id":"ckzktchc5002sokpcb9qh0uh2"},{"name":"ThreeJS","parent":"ckzktchby001lokpc0jfc1dn1","_id":"ckzktchc5002yokpc9oqx04ty"},{"name":"React Props","parent":"ckzktchbz001rokpc3xod7n9b","_id":"ckzktchc60034okpc1sef5ity"},{"name":"nodeppt","parent":"ckzktchc4002iokpch0h8cspv","_id":"ckzktchc7003aokpc5u6b1z14"}],"Data":[],"Page":[{"title":"categories","date":"2022-01-06T08:49:28.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-01-06 16:49:28\ntype: \"categories\"\ncomments: false\n---\n","updated":"2022-01-06T09:45:21.681Z","path":"categories/index.html","layout":"page","_id":"ckzktchbb0000okpcc65p7u76","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"404","date":"2022-01-07T02:07:20.000Z","comments":0,"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"https://hushaoyu.github.io/blog/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2022-01-07 10:07:20\ncomments: false\npermalink: /404\n---\n<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"https://hushaoyu.github.io/blog/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","updated":"2022-02-13T03:18:49.581Z","path":"/404.html","layout":"page","_id":"ckzktchbf0002okpcakn60dee","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"https://hushaoyu.github.io/blog/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"length":0,"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"https://hushaoyu.github.io/blog/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"title":"标签","date":"2022-01-06T08:50:17.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2022-01-06 16:50:17\ntype: \"tags\"\ncomments: false\n---\n","updated":"2022-01-07T06:26:44.916Z","path":"tags/index.html","layout":"page","_id":"ckzktchbh0006okpc5rq34o6c","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"intro","date":"2022-01-06T09:02:29.000Z","type":"intro","comments":0,"_content":"","source":"intro/index.md","raw":"---\ntitle: intro\ndate: 2022-01-06 17:02:29\ntype: \"intro\"\npermalink: index.html\ncomments: false\n---\n","updated":"2022-01-06T09:45:21.676Z","path":"index.html","layout":"page","_id":"ckzktchbi0008okpc0g8b0qxp","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"CSS - 开发技巧","date":"2022-01-13T07:58:19.000Z","_content":"","source":"_posts/CSS-开发技巧.md","raw":"---\ntitle: CSS - 开发技巧\ndate: 2022-01-13 15:58:19\ntags: [CSS, 开发技巧]\ncategories: [CSS]\n---","slug":"CSS-开发技巧","published":1,"updated":"2022-01-21T05:22:26.257Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbd0001okpc9ekp812u","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"Echarts - 开发笔记","date":"2022-01-18T06:49:12.000Z","_content":"#### 更新渲染会残留之前的数据\n- 在 `setOption` 时添加一个额外的参数 `true`\n```javascript\nthis.chart.setOption(this.option, true);\n```\n  - `setOption` 参数说明请参考 [文档](https://echarts.apache.org/zh/api.html#echartsInstance.setOption)\n\n#### 全屏显示图表\n- 全屏、退出全屏\n```javascript\n//全屏显示\nexport function fullScreen(ele) {\n    let element = ele || document.documentElement;\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n}\n\n//退出全屏\nexport function exitFullscreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    }\n}\n```\n- 触发\n```javascript\nhandle = () => {\n    if (this.chart) {\n        fullScreen(this.chart._dom.parentElement);\n    }\n}\n```\n- 全屏状态下，背景色设置\n```less\n//各个浏览器下 全屏状态下背景色设置\n:-webkit-full-screen {\n  background-color: $content-bg !important;\n}\n:-moz-full-screen {\n  background-color: $content-bg !important;\n}\n\n:-ms-fullscreen {\n  background-color: $content-bg !important;\n}\n:fullscreen {\n  background-color: $content-bg !important;\n}\n```\n\n#### 折线图需求：同一天内可能存在一条、两条或者三条数据\n- 构造X轴数据、配置axisLabel及axisTick及formatter\n```yaml\n\t\toption = {\n\t\t    ...\n\t\t    xAxis: [\n\t\t        {\n\t\t            ...\n\t\t            axisTick: {\n\t\t              interval: (index, indexName) => indexName.length < 11\n\t\t            },\n\t\t            axisLabel: {\n\t\t                interval: (index, indexName) => indexName.length < 11\n\t\t            },\n\t\t            data: [\n\t\t                '2009/6/12', '2009/6/12 12', '2009/6/12 12', \n\t\t                '2009/6/13', '2009/6/13 12', '2009/6/14'],\n\t\t        }\n\t\t    ],\n\t\t    series: [\n\t\t        {\n                  ...\n                  data: [\n                    3.75,3.75,5.66,6.95,0.95,0.94,0.94,0.94,0.94,0.94,\n                    0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,\n                    0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,\n                    0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94]\n\t\t        },\n\t\t    ]\n\t\t};\n```\n\n#### 自定义触发行为\n- 手动缩放 `dataZoom`\n  - 单个缩放\n    ```javascript\n    myChart.dispatchAction({\n        type: 'dataZoom',\n        start: 20,\n        end: 30\n    });\n    ```\n  - 批量缩放\n    ```javascript\n    myChart.dispatchAction({\n        type: 'dataZoom',\n        batch: [{\n            // 第一个 dataZoom 组件\n            start: 20,\n            end: 30\n        }, {\n            // 第二个 dataZoom 组件\n            dataZoomIndex: 1,\n            start: 10,\n            end: 20\n        }]\n    });\n    ```\n- 轮播高亮显示\n```javascript\ngetEchart = (chart) => {\n    if (chart && _.isFunction(chart) && !this.timer) {\n        const instance = chart();\n        // 记录当前轮播的数据索引\n        let index = 0;\n        this.timer = setInterval(() => {\n            // 用户鼠标 hover 时，停止轮播\n            !this.state.hovered && instance &&instance.dispatchAction({\n                type: 'showTip',\n                seriesIndex: 0,\n                dataIndex: index\n            });\n            // 用户鼠标 hover 时，停止轮播数据项计数，hover交互移除后，继续当前索引进行轮播\n            !this.state.hovered && index++;\n            if (index > this.state.list.length - 1) {\n                index = 0;\n            }\n        }, 2000);\n    }\n}\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/dispaction_highlight.gif)\n\n#### 饼图内标题文字自适应显示\n  - `options` 配置，动态设置字体大小\n    ```javascript\n    title: [\n        {\n            text: _.get(this.state, `chartData.${day}`, 0),\n            top: '32%',\n            left: \"center\",\n            textStyle: {\n                color: '#FF0014',\n                fontSize: this.getFontSize(_.get(this.state, `chartData.${day}`, 0)),\n                fontWeight: 600,\n            },\n        }\n    ]\n    ```\n  - 获取自适应后的字体大小\n    ```javascript\n    getFontSize = (value) => {\n        const screenWidth = document.body.clientWidth;\n        let fontSize = 12;\n        const valueLength = _.isNumber(value) && value.toString().length;\n        if (screenWidth >= 1900) {\n            fontSize = this.generateSize(120, valueLength);\n        } else if (screenWidth < 1920 && screenWidth >= 1660) {\n            fontSize = this.generateSize(100, valueLength);\n        } else if (screenWidth < 1680 && screenWidth >= 1400) {\n            fontSize = this.generateSize(80, valueLength);\n        }\n        return fontSize;\n    }\n    ```\n  - 限定字体大小范围\n    ```javascript\n    generateSize = (size, length) => {\n        const fontSize = Math.ceil(size / length);\n        if (fontSize > 26) {\n            return 26;\n        } else if (fontSize < 8) {\n            return 8;\n        } else {\n            return fontSize;\n        }\n    }\n    ```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/pie_title_autoSize.png)\n\n#### 根据y轴刻度标签文本动态设置边距\n- 获取Y轴文本长度最长的一项\n```javascript\nconst maxLabel = _.get(yData.slice().sort((pre, next) => computedTextWidth(next) - computedTextWidth(pre)), '[0]', '');\n```\n- `options` 配置\n```yaml\ngrid: {\n    borderWidth: 0,\n    top: 15,\n    bottom: 20,\n    right: computedTextWidth(maxValue) + 18,\n    left: computedTextWidth(maxLabel, 12, true) + 18,\n}\n```\n- 计算文本长度工具方法\n```javascript\n/**\n * @description 计算字符串在浏览器中显示的宽度\n * @param text {string|number} 需要计算的文本\n * @param fontSize {number} 文本字体大小\n * @param overflowFlag {boolean} 是否超长省略显示\n * @return {number}\n */\nexport const computedTextWidth = (text, fontSize = 12, overflowFlag) => {\n    let span = document.getElementById('computedTextWidth');\n    if (!span) {\n        span = document.createElement('span');\n        span.id = 'computedTextWidth';\n        span.style.cssText = 'visibility:hidden;position: absolute;left: -999em;top:-999em;';\n        document.body.appendChild(span);\n    }\n    span.style.fontSize = `${fontSize}px`;\n    // 如果设置超长省略显示，则超出8个字符串后，接省略号显示\n    span.innerHTML = overflowFlag && _.isString(text) && text.length > 8 ? `${text.slice(0, 8)}...` : text;\n    return span.offsetWidth;\n};\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/Y_label_overflow.png)\n\n#### `legend` 文本过长换行显示\n- `legend` 配置项设置\n```yaml\nlegend: {\n          top:'20%',\n          width:222,\n          right:30,\n          orient: 'vertical',\n          type: 'scroll',\n          data: this.props.userList,\n          formatter: function (params) {\n            return formatterLegendText(params);\n          }\n}\n```\n- 工具方法\n```javascript\n/**\n * 格式化legend 文本过长换行显示\n * @params:\n *  params: 文本\n *  provideNumber: 每一行要显示的文本字数\n *  rows: 指定最多显示多少行\n * */\nexport const formatterLegendText = (params, provideNumber = 17, rows) => {\n    //超过十个字符就换行展示\n    let newParamsName = \"\";// 最终拼接成的字符串\n    const paramsNameNumber = params.length;// 实际标签的个数\n    // const provideNumber = 17;// 每行能显示的字的个数\n    const maxRows = Math.ceil(paramsNameNumber / provideNumber);// 换行的话，需要显示几行，向上取整;\n    let rowNumber = rows || maxRows;\n\n    // 条件等同于rowNumber>1\n    if (paramsNameNumber > provideNumber) {\n        for (let p = 0; p < rowNumber; p += 1) {\n            let tempStr = \"\";// 表示每一次截取的字符串\n            let start = p * provideNumber;// 开始截取的位置\n            let end = start + provideNumber;// 结束截取的位置\n            // 此处特殊处理最后一行的索引值\n            if (p == rowNumber - 1) {\n                // 最后一次不换行\n                tempStr = params.substring(start, paramsNameNumber);\n            } else {\n                // 每一次拼接字符串并换行\n                tempStr = params.substring(start, end) + \"\\n\";\n            }\n            newParamsName += tempStr;// 最终拼成的字符串\n        }\n    } else {\n        // 将旧标签的值赋给新标签\n        newParamsName = params;\n    }\n    if (rows && rows < maxRows) {\n        newParamsName += '...';\n    }\n    //将最终的字符串返回\n    return newParamsName\n}\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/legend_wrap.png)\n\n#### 将某个省份地区，切割成两部分显示\n- 引入完整天津地图\n```javascript\nimport chinaCity from 'echarts/map/json/province/tianjin.json';\n```\n- 通过地区代码定义需要分割的副地图区域数据\n```javascript\nsubMapArea = ['120101','120102','120103','120104','120105','120106'];\n```\n- 通过区域数据，将完整地图json数据划分为两份地图数据，并注册地图名称\n```javascript\ncomponentWillMount() {\n    const mainMap = _.cloneDeep(chinaCity);\n    const subMap = _.cloneDeep(chinaCity);\n    const mainFeatures = [], subFeatures = [];\n    chinaCity.features.map(item => {\n        if (this.subMapArea.indexOf(item.id) < 0) {\n            mainFeatures.push(_.cloneDeep(item));\n        } else {\n            subFeatures.push(_.cloneDeep(item));\n        }\n    });\n    mainMap.features = _.cloneDeep(mainFeatures);\n    subMap.features = _.cloneDeep(subFeatures);\n    echarts.registerMap('mainMap', mainMap);\n    echarts.registerMap('subMap', subMap);\n    mainMap.features.map(({properties: {cp = [], name = ''}, id}) => {\n        this.geoCoordMap[name] = cp.slice();\n        return;\n    });\n    subMap.features.map(({properties: {cp = [], name = ''}, id}) => {\n        this.subGeoCoordMap[name] = cp.slice();\n        return;\n    });\n}\n```\n- 在各自的option中geo的定义中，使用不同的地图名称显示地图轮廓\n```yaml\ngeo: [\n  {\n    map:'mainMap',\n    ...\n  },\n]\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/subMap.png)","source":"_posts/Echarts-开发笔记.md","raw":"---\ntitle: Echarts - 开发笔记\ndate: 2022-01-18 14:49:12\ntags: [Echarts, 开发笔记]\ncategories: [Echarts]\n---\n#### 更新渲染会残留之前的数据\n- 在 `setOption` 时添加一个额外的参数 `true`\n```javascript\nthis.chart.setOption(this.option, true);\n```\n  - `setOption` 参数说明请参考 [文档](https://echarts.apache.org/zh/api.html#echartsInstance.setOption)\n\n#### 全屏显示图表\n- 全屏、退出全屏\n```javascript\n//全屏显示\nexport function fullScreen(ele) {\n    let element = ele || document.documentElement;\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n}\n\n//退出全屏\nexport function exitFullscreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    }\n}\n```\n- 触发\n```javascript\nhandle = () => {\n    if (this.chart) {\n        fullScreen(this.chart._dom.parentElement);\n    }\n}\n```\n- 全屏状态下，背景色设置\n```less\n//各个浏览器下 全屏状态下背景色设置\n:-webkit-full-screen {\n  background-color: $content-bg !important;\n}\n:-moz-full-screen {\n  background-color: $content-bg !important;\n}\n\n:-ms-fullscreen {\n  background-color: $content-bg !important;\n}\n:fullscreen {\n  background-color: $content-bg !important;\n}\n```\n\n#### 折线图需求：同一天内可能存在一条、两条或者三条数据\n- 构造X轴数据、配置axisLabel及axisTick及formatter\n```yaml\n\t\toption = {\n\t\t    ...\n\t\t    xAxis: [\n\t\t        {\n\t\t            ...\n\t\t            axisTick: {\n\t\t              interval: (index, indexName) => indexName.length < 11\n\t\t            },\n\t\t            axisLabel: {\n\t\t                interval: (index, indexName) => indexName.length < 11\n\t\t            },\n\t\t            data: [\n\t\t                '2009/6/12', '2009/6/12 12', '2009/6/12 12', \n\t\t                '2009/6/13', '2009/6/13 12', '2009/6/14'],\n\t\t        }\n\t\t    ],\n\t\t    series: [\n\t\t        {\n                  ...\n                  data: [\n                    3.75,3.75,5.66,6.95,0.95,0.94,0.94,0.94,0.94,0.94,\n                    0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,\n                    0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,\n                    0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94]\n\t\t        },\n\t\t    ]\n\t\t};\n```\n\n#### 自定义触发行为\n- 手动缩放 `dataZoom`\n  - 单个缩放\n    ```javascript\n    myChart.dispatchAction({\n        type: 'dataZoom',\n        start: 20,\n        end: 30\n    });\n    ```\n  - 批量缩放\n    ```javascript\n    myChart.dispatchAction({\n        type: 'dataZoom',\n        batch: [{\n            // 第一个 dataZoom 组件\n            start: 20,\n            end: 30\n        }, {\n            // 第二个 dataZoom 组件\n            dataZoomIndex: 1,\n            start: 10,\n            end: 20\n        }]\n    });\n    ```\n- 轮播高亮显示\n```javascript\ngetEchart = (chart) => {\n    if (chart && _.isFunction(chart) && !this.timer) {\n        const instance = chart();\n        // 记录当前轮播的数据索引\n        let index = 0;\n        this.timer = setInterval(() => {\n            // 用户鼠标 hover 时，停止轮播\n            !this.state.hovered && instance &&instance.dispatchAction({\n                type: 'showTip',\n                seriesIndex: 0,\n                dataIndex: index\n            });\n            // 用户鼠标 hover 时，停止轮播数据项计数，hover交互移除后，继续当前索引进行轮播\n            !this.state.hovered && index++;\n            if (index > this.state.list.length - 1) {\n                index = 0;\n            }\n        }, 2000);\n    }\n}\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/dispaction_highlight.gif)\n\n#### 饼图内标题文字自适应显示\n  - `options` 配置，动态设置字体大小\n    ```javascript\n    title: [\n        {\n            text: _.get(this.state, `chartData.${day}`, 0),\n            top: '32%',\n            left: \"center\",\n            textStyle: {\n                color: '#FF0014',\n                fontSize: this.getFontSize(_.get(this.state, `chartData.${day}`, 0)),\n                fontWeight: 600,\n            },\n        }\n    ]\n    ```\n  - 获取自适应后的字体大小\n    ```javascript\n    getFontSize = (value) => {\n        const screenWidth = document.body.clientWidth;\n        let fontSize = 12;\n        const valueLength = _.isNumber(value) && value.toString().length;\n        if (screenWidth >= 1900) {\n            fontSize = this.generateSize(120, valueLength);\n        } else if (screenWidth < 1920 && screenWidth >= 1660) {\n            fontSize = this.generateSize(100, valueLength);\n        } else if (screenWidth < 1680 && screenWidth >= 1400) {\n            fontSize = this.generateSize(80, valueLength);\n        }\n        return fontSize;\n    }\n    ```\n  - 限定字体大小范围\n    ```javascript\n    generateSize = (size, length) => {\n        const fontSize = Math.ceil(size / length);\n        if (fontSize > 26) {\n            return 26;\n        } else if (fontSize < 8) {\n            return 8;\n        } else {\n            return fontSize;\n        }\n    }\n    ```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/pie_title_autoSize.png)\n\n#### 根据y轴刻度标签文本动态设置边距\n- 获取Y轴文本长度最长的一项\n```javascript\nconst maxLabel = _.get(yData.slice().sort((pre, next) => computedTextWidth(next) - computedTextWidth(pre)), '[0]', '');\n```\n- `options` 配置\n```yaml\ngrid: {\n    borderWidth: 0,\n    top: 15,\n    bottom: 20,\n    right: computedTextWidth(maxValue) + 18,\n    left: computedTextWidth(maxLabel, 12, true) + 18,\n}\n```\n- 计算文本长度工具方法\n```javascript\n/**\n * @description 计算字符串在浏览器中显示的宽度\n * @param text {string|number} 需要计算的文本\n * @param fontSize {number} 文本字体大小\n * @param overflowFlag {boolean} 是否超长省略显示\n * @return {number}\n */\nexport const computedTextWidth = (text, fontSize = 12, overflowFlag) => {\n    let span = document.getElementById('computedTextWidth');\n    if (!span) {\n        span = document.createElement('span');\n        span.id = 'computedTextWidth';\n        span.style.cssText = 'visibility:hidden;position: absolute;left: -999em;top:-999em;';\n        document.body.appendChild(span);\n    }\n    span.style.fontSize = `${fontSize}px`;\n    // 如果设置超长省略显示，则超出8个字符串后，接省略号显示\n    span.innerHTML = overflowFlag && _.isString(text) && text.length > 8 ? `${text.slice(0, 8)}...` : text;\n    return span.offsetWidth;\n};\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/Y_label_overflow.png)\n\n#### `legend` 文本过长换行显示\n- `legend` 配置项设置\n```yaml\nlegend: {\n          top:'20%',\n          width:222,\n          right:30,\n          orient: 'vertical',\n          type: 'scroll',\n          data: this.props.userList,\n          formatter: function (params) {\n            return formatterLegendText(params);\n          }\n}\n```\n- 工具方法\n```javascript\n/**\n * 格式化legend 文本过长换行显示\n * @params:\n *  params: 文本\n *  provideNumber: 每一行要显示的文本字数\n *  rows: 指定最多显示多少行\n * */\nexport const formatterLegendText = (params, provideNumber = 17, rows) => {\n    //超过十个字符就换行展示\n    let newParamsName = \"\";// 最终拼接成的字符串\n    const paramsNameNumber = params.length;// 实际标签的个数\n    // const provideNumber = 17;// 每行能显示的字的个数\n    const maxRows = Math.ceil(paramsNameNumber / provideNumber);// 换行的话，需要显示几行，向上取整;\n    let rowNumber = rows || maxRows;\n\n    // 条件等同于rowNumber>1\n    if (paramsNameNumber > provideNumber) {\n        for (let p = 0; p < rowNumber; p += 1) {\n            let tempStr = \"\";// 表示每一次截取的字符串\n            let start = p * provideNumber;// 开始截取的位置\n            let end = start + provideNumber;// 结束截取的位置\n            // 此处特殊处理最后一行的索引值\n            if (p == rowNumber - 1) {\n                // 最后一次不换行\n                tempStr = params.substring(start, paramsNameNumber);\n            } else {\n                // 每一次拼接字符串并换行\n                tempStr = params.substring(start, end) + \"\\n\";\n            }\n            newParamsName += tempStr;// 最终拼成的字符串\n        }\n    } else {\n        // 将旧标签的值赋给新标签\n        newParamsName = params;\n    }\n    if (rows && rows < maxRows) {\n        newParamsName += '...';\n    }\n    //将最终的字符串返回\n    return newParamsName\n}\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/legend_wrap.png)\n\n#### 将某个省份地区，切割成两部分显示\n- 引入完整天津地图\n```javascript\nimport chinaCity from 'echarts/map/json/province/tianjin.json';\n```\n- 通过地区代码定义需要分割的副地图区域数据\n```javascript\nsubMapArea = ['120101','120102','120103','120104','120105','120106'];\n```\n- 通过区域数据，将完整地图json数据划分为两份地图数据，并注册地图名称\n```javascript\ncomponentWillMount() {\n    const mainMap = _.cloneDeep(chinaCity);\n    const subMap = _.cloneDeep(chinaCity);\n    const mainFeatures = [], subFeatures = [];\n    chinaCity.features.map(item => {\n        if (this.subMapArea.indexOf(item.id) < 0) {\n            mainFeatures.push(_.cloneDeep(item));\n        } else {\n            subFeatures.push(_.cloneDeep(item));\n        }\n    });\n    mainMap.features = _.cloneDeep(mainFeatures);\n    subMap.features = _.cloneDeep(subFeatures);\n    echarts.registerMap('mainMap', mainMap);\n    echarts.registerMap('subMap', subMap);\n    mainMap.features.map(({properties: {cp = [], name = ''}, id}) => {\n        this.geoCoordMap[name] = cp.slice();\n        return;\n    });\n    subMap.features.map(({properties: {cp = [], name = ''}, id}) => {\n        this.subGeoCoordMap[name] = cp.slice();\n        return;\n    });\n}\n```\n- 在各自的option中geo的定义中，使用不同的地图名称显示地图轮廓\n```yaml\ngeo: [\n  {\n    map:'mainMap',\n    ...\n  },\n]\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/subMap.png)","slug":"Echarts-开发笔记","published":1,"updated":"2022-01-18T09:28:09.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbf0003okpc85q6g1fs","content":"<h4 id=\"更新渲染会残留之前的数据\"><a href=\"#更新渲染会残留之前的数据\" class=\"headerlink\" title=\"更新渲染会残留之前的数据\"></a>更新渲染会残留之前的数据</h4><ul>\n<li>在 <code>setOption</code> 时添加一个额外的参数 <code>true</code><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">this</span>.chart.setOption(<span class=\"built_in\">this</span>.option, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>setOption</code> 参数说明请参考 <a href=\"https://echarts.apache.org/zh/api.html#echartsInstance.setOption\">文档</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"全屏显示图表\"><a href=\"#全屏显示图表\" class=\"headerlink\" title=\"全屏显示图表\"></a>全屏显示图表</h4><ul>\n<li>全屏、退出全屏<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全屏显示</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fullScreen</span>(<span class=\"params\">ele</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> element = ele || <span class=\"built_in\">document</span>.documentElement;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (element.requestFullscreen) &#123;</span><br><span class=\"line\">        element.requestFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.msRequestFullscreen) &#123;</span><br><span class=\"line\">        element.msRequestFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.mozRequestFullScreen) &#123;</span><br><span class=\"line\">        element.mozRequestFullScreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.webkitRequestFullscreen) &#123;</span><br><span class=\"line\">        element.webkitRequestFullscreen();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//退出全屏</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exitFullscreen</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.exitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.exitFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.msExitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.msExitFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.mozCancelFullScreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.mozCancelFullScreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.webkitExitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.webkitExitFullscreen();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>触发<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">handle = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.chart) &#123;</span><br><span class=\"line\">        fullScreen(<span class=\"built_in\">this</span>.chart._dom.parentElement);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>全屏状态下，背景色设置<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//各个浏览器下 全屏状态下背景色设置</span></span><br><span class=\"line\">:<span class=\"selector-tag\">-webkit-full-screen</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: $content-bg <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">:<span class=\"selector-tag\">-moz-full-screen</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: $content-bg <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"selector-tag\">-ms-fullscreen</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: $content-bg <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-pseudo\">:fullscreen</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: $content-bg <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"折线图需求：同一天内可能存在一条、两条或者三条数据\"><a href=\"#折线图需求：同一天内可能存在一条、两条或者三条数据\" class=\"headerlink\" title=\"折线图需求：同一天内可能存在一条、两条或者三条数据\"></a>折线图需求：同一天内可能存在一条、两条或者三条数据</h4><ul>\n<li>构造X轴数据、配置axisLabel及axisTick及formatter<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">option</span> <span class=\"string\">=</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">...</span></span><br><span class=\"line\">    <span class=\"attr\">xAxis:</span> [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">...</span></span><br><span class=\"line\">            <span class=\"attr\">axisTick:</span> &#123;</span><br><span class=\"line\">              <span class=\"attr\">interval:</span> <span class=\"string\">(index</span>, <span class=\"string\">indexName)</span> <span class=\"string\">=&gt;</span> <span class=\"string\">indexName.length</span> <span class=\"string\">&lt;</span> <span class=\"number\">11</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">axisLabel:</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">interval:</span> <span class=\"string\">(index</span>, <span class=\"string\">indexName)</span> <span class=\"string\">=&gt;</span> <span class=\"string\">indexName.length</span> <span class=\"string\">&lt;</span> <span class=\"number\">11</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">data:</span> [</span><br><span class=\"line\">                <span class=\"string\">&#x27;2009/6/12&#x27;</span>, <span class=\"string\">&#x27;2009/6/12 12&#x27;</span>, <span class=\"string\">&#x27;2009/6/12 12&#x27;</span>, </span><br><span class=\"line\">                <span class=\"string\">&#x27;2009/6/13&#x27;</span>, <span class=\"string\">&#x27;2009/6/13 12&#x27;</span>, <span class=\"string\">&#x27;2009/6/14&#x27;</span>],</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">series:</span> [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">                <span class=\"string\">...</span></span><br><span class=\"line\">                <span class=\"attr\">data:</span> [</span><br><span class=\"line\">                  <span class=\"number\">3.75</span>,<span class=\"number\">3.75</span>,<span class=\"number\">5.66</span>,<span class=\"number\">6.95</span>,<span class=\"number\">0.95</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,</span><br><span class=\"line\">                  <span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,</span><br><span class=\"line\">                  <span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,</span><br><span class=\"line\">                  <span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;<span class=\"string\">;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"自定义触发行为\"><a href=\"#自定义触发行为\" class=\"headerlink\" title=\"自定义触发行为\"></a>自定义触发行为</h4><ul>\n<li>手动缩放 <code>dataZoom</code><ul>\n<li>单个缩放<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.dispatchAction(&#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;dataZoom&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">start</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"attr\">end</span>: <span class=\"number\">30</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li>批量缩放<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.dispatchAction(&#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;dataZoom&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">batch</span>: [&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 第一个 dataZoom 组件</span></span><br><span class=\"line\">        <span class=\"attr\">start</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">        <span class=\"attr\">end</span>: <span class=\"number\">30</span></span><br><span class=\"line\">    &#125;, &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 第二个 dataZoom 组件</span></span><br><span class=\"line\">        <span class=\"attr\">dataZoomIndex</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">start</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">        <span class=\"attr\">end</span>: <span class=\"number\">20</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>轮播高亮显示<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getEchart = <span class=\"function\">(<span class=\"params\">chart</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (chart &amp;&amp; _.isFunction(chart) &amp;&amp; !<span class=\"built_in\">this</span>.timer) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> instance = chart();</span><br><span class=\"line\">        <span class=\"comment\">// 记录当前轮播的数据索引</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.timer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 用户鼠标 hover 时，停止轮播</span></span><br><span class=\"line\">            !<span class=\"built_in\">this</span>.state.hovered &amp;&amp; instance &amp;&amp;instance.dispatchAction(&#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">&#x27;showTip&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">seriesIndex</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">dataIndex</span>: index</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"comment\">// 用户鼠标 hover 时，停止轮播数据项计数，hover交互移除后，继续当前索引进行轮播</span></span><br><span class=\"line\">            !<span class=\"built_in\">this</span>.state.hovered &amp;&amp; index++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index &gt; <span class=\"built_in\">this</span>.state.list.length - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/dispaction_highlight.gif\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"饼图内标题文字自适应显示\"><a href=\"#饼图内标题文字自适应显示\" class=\"headerlink\" title=\"饼图内标题文字自适应显示\"></a>饼图内标题文字自适应显示</h4><ul>\n<li><code>options</code> 配置，动态设置字体大小<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">text</span>: _.get(<span class=\"built_in\">this</span>.state, <span class=\"string\">`chartData.<span class=\"subst\">$&#123;day&#125;</span>`</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">        <span class=\"attr\">top</span>: <span class=\"string\">&#x27;32%&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">left</span>: <span class=\"string\">&quot;center&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">textStyle</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#FF0014&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">fontSize</span>: <span class=\"built_in\">this</span>.getFontSize(_.get(<span class=\"built_in\">this</span>.state, <span class=\"string\">`chartData.<span class=\"subst\">$&#123;day&#125;</span>`</span>, <span class=\"number\">0</span>)),</span><br><span class=\"line\">            <span class=\"attr\">fontWeight</span>: <span class=\"number\">600</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></li>\n<li>获取自适应后的字体大小<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getFontSize = <span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> screenWidth = <span class=\"built_in\">document</span>.body.clientWidth;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> fontSize = <span class=\"number\">12</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> valueLength = _.isNumber(value) &amp;&amp; value.toString().length;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (screenWidth &gt;= <span class=\"number\">1900</span>) &#123;</span><br><span class=\"line\">        fontSize = <span class=\"built_in\">this</span>.generateSize(<span class=\"number\">120</span>, valueLength);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (screenWidth &lt; <span class=\"number\">1920</span> &amp;&amp; screenWidth &gt;= <span class=\"number\">1660</span>) &#123;</span><br><span class=\"line\">        fontSize = <span class=\"built_in\">this</span>.generateSize(<span class=\"number\">100</span>, valueLength);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (screenWidth &lt; <span class=\"number\">1680</span> &amp;&amp; screenWidth &gt;= <span class=\"number\">1400</span>) &#123;</span><br><span class=\"line\">        fontSize = <span class=\"built_in\">this</span>.generateSize(<span class=\"number\">80</span>, valueLength);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fontSize;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>限定字体大小范围<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">generateSize = <span class=\"function\">(<span class=\"params\">size, length</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> fontSize = <span class=\"built_in\">Math</span>.ceil(size / length);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fontSize &gt; <span class=\"number\">26</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">26</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (fontSize &lt; <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">8</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fontSize;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/pie_title_autoSize.png\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"根据y轴刻度标签文本动态设置边距\"><a href=\"#根据y轴刻度标签文本动态设置边距\" class=\"headerlink\" title=\"根据y轴刻度标签文本动态设置边距\"></a>根据y轴刻度标签文本动态设置边距</h4><ul>\n<li>获取Y轴文本长度最长的一项<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> maxLabel = _.get(yData.slice().sort(<span class=\"function\">(<span class=\"params\">pre, next</span>) =&gt;</span> computedTextWidth(next) - computedTextWidth(pre)), <span class=\"string\">&#x27;[0]&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure></li>\n<li><code>options</code> 配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">grid:</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">borderWidth:</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">top:</span> <span class=\"number\">15</span>,</span><br><span class=\"line\">    <span class=\"attr\">bottom:</span> <span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"attr\">right:</span> <span class=\"string\">computedTextWidth(maxValue)</span> <span class=\"string\">+</span> <span class=\"number\">18</span>,</span><br><span class=\"line\">    <span class=\"attr\">left:</span> <span class=\"string\">computedTextWidth(maxLabel</span>, <span class=\"number\">12</span>, <span class=\"literal\">true</span><span class=\"string\">)</span> <span class=\"string\">+</span> <span class=\"number\">18</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>计算文本长度工具方法<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description </span>计算字符串在浏览器中显示的宽度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>text &#123;string|number&#125; 需要计算的文本</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>fontSize &#123;number&#125; 文本字体大小</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>overflowFlag &#123;boolean&#125; 是否超长省略显示</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> computedTextWidth = <span class=\"function\">(<span class=\"params\">text, fontSize = <span class=\"number\">12</span>, overflowFlag</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> span = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;computedTextWidth&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!span) &#123;</span><br><span class=\"line\">        span = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;span&#x27;</span>);</span><br><span class=\"line\">        span.id = <span class=\"string\">&#x27;computedTextWidth&#x27;</span>;</span><br><span class=\"line\">        span.style.cssText = <span class=\"string\">&#x27;visibility:hidden;position: absolute;left: -999em;top:-999em;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(span);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    span.style.fontSize = <span class=\"string\">`<span class=\"subst\">$&#123;fontSize&#125;</span>px`</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 如果设置超长省略显示，则超出8个字符串后，接省略号显示</span></span><br><span class=\"line\">    span.innerHTML = overflowFlag &amp;&amp; _.isString(text) &amp;&amp; text.length &gt; <span class=\"number\">8</span> ? <span class=\"string\">`<span class=\"subst\">$&#123;text.slice(<span class=\"number\">0</span>, <span class=\"number\">8</span>)&#125;</span>...`</span> : text;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> span.offsetWidth;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/Y_label_overflow.png\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"legend-文本过长换行显示\"><a href=\"#legend-文本过长换行显示\" class=\"headerlink\" title=\"legend 文本过长换行显示\"></a><code>legend</code> 文本过长换行显示</h4><ul>\n<li><code>legend</code> 配置项设置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">legend:</span> &#123;</span><br><span class=\"line\">          <span class=\"string\">top:&#x27;20%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">width:222</span>,</span><br><span class=\"line\">          <span class=\"string\">right:30</span>,</span><br><span class=\"line\">          <span class=\"attr\">orient:</span> <span class=\"string\">&#x27;vertical&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">type:</span> <span class=\"string\">&#x27;scroll&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">data:</span> <span class=\"string\">this.props.userList</span>,</span><br><span class=\"line\">          <span class=\"attr\">formatter:</span> <span class=\"string\">function</span> <span class=\"string\">(params)</span> &#123;</span><br><span class=\"line\">            <span class=\"string\">return</span> <span class=\"string\">formatterLegendText(params);</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>工具方法<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 格式化legend 文本过长换行显示</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span>:</span></span><br><span class=\"line\"><span class=\"comment\"> *  params: 文本</span></span><br><span class=\"line\"><span class=\"comment\"> *  provideNumber: 每一行要显示的文本字数</span></span><br><span class=\"line\"><span class=\"comment\"> *  rows: 指定最多显示多少行</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> formatterLegendText = <span class=\"function\">(<span class=\"params\">params, provideNumber = <span class=\"number\">17</span>, rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//超过十个字符就换行展示</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> newParamsName = <span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">// 最终拼接成的字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> paramsNameNumber = params.length;<span class=\"comment\">// 实际标签的个数</span></span><br><span class=\"line\">    <span class=\"comment\">// const provideNumber = 17;// 每行能显示的字的个数</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> maxRows = <span class=\"built_in\">Math</span>.ceil(paramsNameNumber / provideNumber);<span class=\"comment\">// 换行的话，需要显示几行，向上取整;</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> rowNumber = rows || maxRows;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 条件等同于rowNumber&gt;1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (paramsNameNumber &gt; provideNumber) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> p = <span class=\"number\">0</span>; p &lt; rowNumber; p += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> tempStr = <span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">// 表示每一次截取的字符串</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> start = p * provideNumber;<span class=\"comment\">// 开始截取的位置</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> end = start + provideNumber;<span class=\"comment\">// 结束截取的位置</span></span><br><span class=\"line\">            <span class=\"comment\">// 此处特殊处理最后一行的索引值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p == rowNumber - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 最后一次不换行</span></span><br><span class=\"line\">                tempStr = params.substring(start, paramsNameNumber);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 每一次拼接字符串并换行</span></span><br><span class=\"line\">                tempStr = params.substring(start, end) + <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            newParamsName += tempStr;<span class=\"comment\">// 最终拼成的字符串</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 将旧标签的值赋给新标签</span></span><br><span class=\"line\">        newParamsName = params;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rows &amp;&amp; rows &lt; maxRows) &#123;</span><br><span class=\"line\">        newParamsName += <span class=\"string\">&#x27;...&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//将最终的字符串返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> newParamsName</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/legend_wrap.png\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"将某个省份地区，切割成两部分显示\"><a href=\"#将某个省份地区，切割成两部分显示\" class=\"headerlink\" title=\"将某个省份地区，切割成两部分显示\"></a>将某个省份地区，切割成两部分显示</h4><ul>\n<li>引入完整天津地图<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> chinaCity <span class=\"keyword\">from</span> <span class=\"string\">&#x27;echarts/map/json/province/tianjin.json&#x27;</span>;</span><br></pre></td></tr></table></figure></li>\n<li>通过地区代码定义需要分割的副地图区域数据<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subMapArea = [<span class=\"string\">&#x27;120101&#x27;</span>,<span class=\"string\">&#x27;120102&#x27;</span>,<span class=\"string\">&#x27;120103&#x27;</span>,<span class=\"string\">&#x27;120104&#x27;</span>,<span class=\"string\">&#x27;120105&#x27;</span>,<span class=\"string\">&#x27;120106&#x27;</span>];</span><br></pre></td></tr></table></figure></li>\n<li>通过区域数据，将完整地图json数据划分为两份地图数据，并注册地图名称<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">componentWillMount</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> mainMap = _.cloneDeep(chinaCity);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> subMap = _.cloneDeep(chinaCity);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> mainFeatures = [], subFeatures = [];</span><br><span class=\"line\">    chinaCity.features.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.subMapArea.indexOf(item.id) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            mainFeatures.push(_.cloneDeep(item));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            subFeatures.push(_.cloneDeep(item));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    mainMap.features = _.cloneDeep(mainFeatures);</span><br><span class=\"line\">    subMap.features = _.cloneDeep(subFeatures);</span><br><span class=\"line\">    echarts.registerMap(<span class=\"string\">&#x27;mainMap&#x27;</span>, mainMap);</span><br><span class=\"line\">    echarts.registerMap(<span class=\"string\">&#x27;subMap&#x27;</span>, subMap);</span><br><span class=\"line\">    mainMap.features.map(<span class=\"function\">(<span class=\"params\">&#123;properties: &#123;cp = [], name = <span class=\"string\">&#x27;&#x27;</span>&#125;, id&#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.geoCoordMap[name] = cp.slice();</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    subMap.features.map(<span class=\"function\">(<span class=\"params\">&#123;properties: &#123;cp = [], name = <span class=\"string\">&#x27;&#x27;</span>&#125;, id&#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.subGeoCoordMap[name] = cp.slice();</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>在各自的option中geo的定义中，使用不同的地图名称显示地图轮廓<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">geo:</span> [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"string\">map:&#x27;mainMap&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">...</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/subMap.png\" alt=\"预览\"></li>\n</ul>\n","site":{"data":{}},"length":414,"excerpt":"","more":"<h4 id=\"更新渲染会残留之前的数据\"><a href=\"#更新渲染会残留之前的数据\" class=\"headerlink\" title=\"更新渲染会残留之前的数据\"></a>更新渲染会残留之前的数据</h4><ul>\n<li>在 <code>setOption</code> 时添加一个额外的参数 <code>true</code><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">this</span>.chart.setOption(<span class=\"built_in\">this</span>.option, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>setOption</code> 参数说明请参考 <a href=\"https://echarts.apache.org/zh/api.html#echartsInstance.setOption\">文档</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"全屏显示图表\"><a href=\"#全屏显示图表\" class=\"headerlink\" title=\"全屏显示图表\"></a>全屏显示图表</h4><ul>\n<li>全屏、退出全屏<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全屏显示</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fullScreen</span>(<span class=\"params\">ele</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> element = ele || <span class=\"built_in\">document</span>.documentElement;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (element.requestFullscreen) &#123;</span><br><span class=\"line\">        element.requestFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.msRequestFullscreen) &#123;</span><br><span class=\"line\">        element.msRequestFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.mozRequestFullScreen) &#123;</span><br><span class=\"line\">        element.mozRequestFullScreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.webkitRequestFullscreen) &#123;</span><br><span class=\"line\">        element.webkitRequestFullscreen();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//退出全屏</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exitFullscreen</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.exitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.exitFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.msExitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.msExitFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.mozCancelFullScreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.mozCancelFullScreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.webkitExitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.webkitExitFullscreen();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>触发<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">handle = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.chart) &#123;</span><br><span class=\"line\">        fullScreen(<span class=\"built_in\">this</span>.chart._dom.parentElement);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>全屏状态下，背景色设置<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//各个浏览器下 全屏状态下背景色设置</span></span><br><span class=\"line\">:<span class=\"selector-tag\">-webkit-full-screen</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: $content-bg <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">:<span class=\"selector-tag\">-moz-full-screen</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: $content-bg <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"selector-tag\">-ms-fullscreen</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: $content-bg <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-pseudo\">:fullscreen</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: $content-bg <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"折线图需求：同一天内可能存在一条、两条或者三条数据\"><a href=\"#折线图需求：同一天内可能存在一条、两条或者三条数据\" class=\"headerlink\" title=\"折线图需求：同一天内可能存在一条、两条或者三条数据\"></a>折线图需求：同一天内可能存在一条、两条或者三条数据</h4><ul>\n<li>构造X轴数据、配置axisLabel及axisTick及formatter<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">option</span> <span class=\"string\">=</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">...</span></span><br><span class=\"line\">    <span class=\"attr\">xAxis:</span> [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">...</span></span><br><span class=\"line\">            <span class=\"attr\">axisTick:</span> &#123;</span><br><span class=\"line\">              <span class=\"attr\">interval:</span> <span class=\"string\">(index</span>, <span class=\"string\">indexName)</span> <span class=\"string\">=&gt;</span> <span class=\"string\">indexName.length</span> <span class=\"string\">&lt;</span> <span class=\"number\">11</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">axisLabel:</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">interval:</span> <span class=\"string\">(index</span>, <span class=\"string\">indexName)</span> <span class=\"string\">=&gt;</span> <span class=\"string\">indexName.length</span> <span class=\"string\">&lt;</span> <span class=\"number\">11</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">data:</span> [</span><br><span class=\"line\">                <span class=\"string\">&#x27;2009/6/12&#x27;</span>, <span class=\"string\">&#x27;2009/6/12 12&#x27;</span>, <span class=\"string\">&#x27;2009/6/12 12&#x27;</span>, </span><br><span class=\"line\">                <span class=\"string\">&#x27;2009/6/13&#x27;</span>, <span class=\"string\">&#x27;2009/6/13 12&#x27;</span>, <span class=\"string\">&#x27;2009/6/14&#x27;</span>],</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">series:</span> [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">                <span class=\"string\">...</span></span><br><span class=\"line\">                <span class=\"attr\">data:</span> [</span><br><span class=\"line\">                  <span class=\"number\">3.75</span>,<span class=\"number\">3.75</span>,<span class=\"number\">5.66</span>,<span class=\"number\">6.95</span>,<span class=\"number\">0.95</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,</span><br><span class=\"line\">                  <span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,</span><br><span class=\"line\">                  <span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,</span><br><span class=\"line\">                  <span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>,<span class=\"number\">0.94</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;<span class=\"string\">;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"自定义触发行为\"><a href=\"#自定义触发行为\" class=\"headerlink\" title=\"自定义触发行为\"></a>自定义触发行为</h4><ul>\n<li>手动缩放 <code>dataZoom</code><ul>\n<li>单个缩放<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.dispatchAction(&#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;dataZoom&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">start</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"attr\">end</span>: <span class=\"number\">30</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li>批量缩放<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.dispatchAction(&#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;dataZoom&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">batch</span>: [&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 第一个 dataZoom 组件</span></span><br><span class=\"line\">        <span class=\"attr\">start</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">        <span class=\"attr\">end</span>: <span class=\"number\">30</span></span><br><span class=\"line\">    &#125;, &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 第二个 dataZoom 组件</span></span><br><span class=\"line\">        <span class=\"attr\">dataZoomIndex</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">start</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">        <span class=\"attr\">end</span>: <span class=\"number\">20</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>轮播高亮显示<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getEchart = <span class=\"function\">(<span class=\"params\">chart</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (chart &amp;&amp; _.isFunction(chart) &amp;&amp; !<span class=\"built_in\">this</span>.timer) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> instance = chart();</span><br><span class=\"line\">        <span class=\"comment\">// 记录当前轮播的数据索引</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.timer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 用户鼠标 hover 时，停止轮播</span></span><br><span class=\"line\">            !<span class=\"built_in\">this</span>.state.hovered &amp;&amp; instance &amp;&amp;instance.dispatchAction(&#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">&#x27;showTip&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">seriesIndex</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">dataIndex</span>: index</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"comment\">// 用户鼠标 hover 时，停止轮播数据项计数，hover交互移除后，继续当前索引进行轮播</span></span><br><span class=\"line\">            !<span class=\"built_in\">this</span>.state.hovered &amp;&amp; index++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index &gt; <span class=\"built_in\">this</span>.state.list.length - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/dispaction_highlight.gif\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"饼图内标题文字自适应显示\"><a href=\"#饼图内标题文字自适应显示\" class=\"headerlink\" title=\"饼图内标题文字自适应显示\"></a>饼图内标题文字自适应显示</h4><ul>\n<li><code>options</code> 配置，动态设置字体大小<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">text</span>: _.get(<span class=\"built_in\">this</span>.state, <span class=\"string\">`chartData.<span class=\"subst\">$&#123;day&#125;</span>`</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">        <span class=\"attr\">top</span>: <span class=\"string\">&#x27;32%&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">left</span>: <span class=\"string\">&quot;center&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">textStyle</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#FF0014&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">fontSize</span>: <span class=\"built_in\">this</span>.getFontSize(_.get(<span class=\"built_in\">this</span>.state, <span class=\"string\">`chartData.<span class=\"subst\">$&#123;day&#125;</span>`</span>, <span class=\"number\">0</span>)),</span><br><span class=\"line\">            <span class=\"attr\">fontWeight</span>: <span class=\"number\">600</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></li>\n<li>获取自适应后的字体大小<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getFontSize = <span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> screenWidth = <span class=\"built_in\">document</span>.body.clientWidth;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> fontSize = <span class=\"number\">12</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> valueLength = _.isNumber(value) &amp;&amp; value.toString().length;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (screenWidth &gt;= <span class=\"number\">1900</span>) &#123;</span><br><span class=\"line\">        fontSize = <span class=\"built_in\">this</span>.generateSize(<span class=\"number\">120</span>, valueLength);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (screenWidth &lt; <span class=\"number\">1920</span> &amp;&amp; screenWidth &gt;= <span class=\"number\">1660</span>) &#123;</span><br><span class=\"line\">        fontSize = <span class=\"built_in\">this</span>.generateSize(<span class=\"number\">100</span>, valueLength);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (screenWidth &lt; <span class=\"number\">1680</span> &amp;&amp; screenWidth &gt;= <span class=\"number\">1400</span>) &#123;</span><br><span class=\"line\">        fontSize = <span class=\"built_in\">this</span>.generateSize(<span class=\"number\">80</span>, valueLength);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fontSize;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>限定字体大小范围<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">generateSize = <span class=\"function\">(<span class=\"params\">size, length</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> fontSize = <span class=\"built_in\">Math</span>.ceil(size / length);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fontSize &gt; <span class=\"number\">26</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">26</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (fontSize &lt; <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">8</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fontSize;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/pie_title_autoSize.png\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"根据y轴刻度标签文本动态设置边距\"><a href=\"#根据y轴刻度标签文本动态设置边距\" class=\"headerlink\" title=\"根据y轴刻度标签文本动态设置边距\"></a>根据y轴刻度标签文本动态设置边距</h4><ul>\n<li>获取Y轴文本长度最长的一项<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> maxLabel = _.get(yData.slice().sort(<span class=\"function\">(<span class=\"params\">pre, next</span>) =&gt;</span> computedTextWidth(next) - computedTextWidth(pre)), <span class=\"string\">&#x27;[0]&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure></li>\n<li><code>options</code> 配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">grid:</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">borderWidth:</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">top:</span> <span class=\"number\">15</span>,</span><br><span class=\"line\">    <span class=\"attr\">bottom:</span> <span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"attr\">right:</span> <span class=\"string\">computedTextWidth(maxValue)</span> <span class=\"string\">+</span> <span class=\"number\">18</span>,</span><br><span class=\"line\">    <span class=\"attr\">left:</span> <span class=\"string\">computedTextWidth(maxLabel</span>, <span class=\"number\">12</span>, <span class=\"literal\">true</span><span class=\"string\">)</span> <span class=\"string\">+</span> <span class=\"number\">18</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>计算文本长度工具方法<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description </span>计算字符串在浏览器中显示的宽度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>text &#123;string|number&#125; 需要计算的文本</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>fontSize &#123;number&#125; 文本字体大小</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>overflowFlag &#123;boolean&#125; 是否超长省略显示</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> computedTextWidth = <span class=\"function\">(<span class=\"params\">text, fontSize = <span class=\"number\">12</span>, overflowFlag</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> span = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;computedTextWidth&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!span) &#123;</span><br><span class=\"line\">        span = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;span&#x27;</span>);</span><br><span class=\"line\">        span.id = <span class=\"string\">&#x27;computedTextWidth&#x27;</span>;</span><br><span class=\"line\">        span.style.cssText = <span class=\"string\">&#x27;visibility:hidden;position: absolute;left: -999em;top:-999em;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(span);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    span.style.fontSize = <span class=\"string\">`<span class=\"subst\">$&#123;fontSize&#125;</span>px`</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 如果设置超长省略显示，则超出8个字符串后，接省略号显示</span></span><br><span class=\"line\">    span.innerHTML = overflowFlag &amp;&amp; _.isString(text) &amp;&amp; text.length &gt; <span class=\"number\">8</span> ? <span class=\"string\">`<span class=\"subst\">$&#123;text.slice(<span class=\"number\">0</span>, <span class=\"number\">8</span>)&#125;</span>...`</span> : text;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> span.offsetWidth;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/Y_label_overflow.png\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"legend-文本过长换行显示\"><a href=\"#legend-文本过长换行显示\" class=\"headerlink\" title=\"legend 文本过长换行显示\"></a><code>legend</code> 文本过长换行显示</h4><ul>\n<li><code>legend</code> 配置项设置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">legend:</span> &#123;</span><br><span class=\"line\">          <span class=\"string\">top:&#x27;20%&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">width:222</span>,</span><br><span class=\"line\">          <span class=\"string\">right:30</span>,</span><br><span class=\"line\">          <span class=\"attr\">orient:</span> <span class=\"string\">&#x27;vertical&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">type:</span> <span class=\"string\">&#x27;scroll&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">data:</span> <span class=\"string\">this.props.userList</span>,</span><br><span class=\"line\">          <span class=\"attr\">formatter:</span> <span class=\"string\">function</span> <span class=\"string\">(params)</span> &#123;</span><br><span class=\"line\">            <span class=\"string\">return</span> <span class=\"string\">formatterLegendText(params);</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>工具方法<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 格式化legend 文本过长换行显示</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span>:</span></span><br><span class=\"line\"><span class=\"comment\"> *  params: 文本</span></span><br><span class=\"line\"><span class=\"comment\"> *  provideNumber: 每一行要显示的文本字数</span></span><br><span class=\"line\"><span class=\"comment\"> *  rows: 指定最多显示多少行</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> formatterLegendText = <span class=\"function\">(<span class=\"params\">params, provideNumber = <span class=\"number\">17</span>, rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//超过十个字符就换行展示</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> newParamsName = <span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">// 最终拼接成的字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> paramsNameNumber = params.length;<span class=\"comment\">// 实际标签的个数</span></span><br><span class=\"line\">    <span class=\"comment\">// const provideNumber = 17;// 每行能显示的字的个数</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> maxRows = <span class=\"built_in\">Math</span>.ceil(paramsNameNumber / provideNumber);<span class=\"comment\">// 换行的话，需要显示几行，向上取整;</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> rowNumber = rows || maxRows;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 条件等同于rowNumber&gt;1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (paramsNameNumber &gt; provideNumber) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> p = <span class=\"number\">0</span>; p &lt; rowNumber; p += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> tempStr = <span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">// 表示每一次截取的字符串</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> start = p * provideNumber;<span class=\"comment\">// 开始截取的位置</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> end = start + provideNumber;<span class=\"comment\">// 结束截取的位置</span></span><br><span class=\"line\">            <span class=\"comment\">// 此处特殊处理最后一行的索引值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p == rowNumber - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 最后一次不换行</span></span><br><span class=\"line\">                tempStr = params.substring(start, paramsNameNumber);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 每一次拼接字符串并换行</span></span><br><span class=\"line\">                tempStr = params.substring(start, end) + <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            newParamsName += tempStr;<span class=\"comment\">// 最终拼成的字符串</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 将旧标签的值赋给新标签</span></span><br><span class=\"line\">        newParamsName = params;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rows &amp;&amp; rows &lt; maxRows) &#123;</span><br><span class=\"line\">        newParamsName += <span class=\"string\">&#x27;...&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//将最终的字符串返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> newParamsName</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/legend_wrap.png\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"将某个省份地区，切割成两部分显示\"><a href=\"#将某个省份地区，切割成两部分显示\" class=\"headerlink\" title=\"将某个省份地区，切割成两部分显示\"></a>将某个省份地区，切割成两部分显示</h4><ul>\n<li>引入完整天津地图<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> chinaCity <span class=\"keyword\">from</span> <span class=\"string\">&#x27;echarts/map/json/province/tianjin.json&#x27;</span>;</span><br></pre></td></tr></table></figure></li>\n<li>通过地区代码定义需要分割的副地图区域数据<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subMapArea = [<span class=\"string\">&#x27;120101&#x27;</span>,<span class=\"string\">&#x27;120102&#x27;</span>,<span class=\"string\">&#x27;120103&#x27;</span>,<span class=\"string\">&#x27;120104&#x27;</span>,<span class=\"string\">&#x27;120105&#x27;</span>,<span class=\"string\">&#x27;120106&#x27;</span>];</span><br></pre></td></tr></table></figure></li>\n<li>通过区域数据，将完整地图json数据划分为两份地图数据，并注册地图名称<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">componentWillMount</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> mainMap = _.cloneDeep(chinaCity);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> subMap = _.cloneDeep(chinaCity);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> mainFeatures = [], subFeatures = [];</span><br><span class=\"line\">    chinaCity.features.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.subMapArea.indexOf(item.id) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            mainFeatures.push(_.cloneDeep(item));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            subFeatures.push(_.cloneDeep(item));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    mainMap.features = _.cloneDeep(mainFeatures);</span><br><span class=\"line\">    subMap.features = _.cloneDeep(subFeatures);</span><br><span class=\"line\">    echarts.registerMap(<span class=\"string\">&#x27;mainMap&#x27;</span>, mainMap);</span><br><span class=\"line\">    echarts.registerMap(<span class=\"string\">&#x27;subMap&#x27;</span>, subMap);</span><br><span class=\"line\">    mainMap.features.map(<span class=\"function\">(<span class=\"params\">&#123;properties: &#123;cp = [], name = <span class=\"string\">&#x27;&#x27;</span>&#125;, id&#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.geoCoordMap[name] = cp.slice();</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    subMap.features.map(<span class=\"function\">(<span class=\"params\">&#123;properties: &#123;cp = [], name = <span class=\"string\">&#x27;&#x27;</span>&#125;, id&#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.subGeoCoordMap[name] = cp.slice();</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>在各自的option中geo的定义中，使用不同的地图名称显示地图轮廓<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">geo:</span> [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"string\">map:&#x27;mainMap&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">...</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/subMap.png\" alt=\"预览\"></li>\n</ul>\n"},{"title":"Hexo Note - 初始化及常用配置","date":"2022-01-09T06:07:29.000Z","_content":"### 什么是 Hexo ？\n> &ensp;&ensp;Hexo 是一个快速、简洁且高效的博客框架。[Hexo](https://hexo.bootcss.com/docs/index.html) 使用 Markdown（或其他渲染引擎）解析博文，在几秒内，即可利用靓丽的主题生成静态网页。\n\n- [Markdown站内手册](/2022/01/05/Markdown-using-document)\n- [Markdown官方手册](https://markdown.com.cn)\n\n### 安装\n#### 前提\n安装前，确认机器环境已经安装 [Git](http://git-scm.com/) 和 [Node](http://nodejs.org/) (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)：\n```bash\n$ git --version\ngit version 2.31.1.windows.1\n\n$ node -v\nv14.13.0\n```\n#### 安装 Hexo\n&ensp;&ensp;全局安装hexo cli工具\n```bash\n$ npm install -g hexo-cli\n```\n\n### 搭建网站\n#### 初始化博客项目目录，并安装依赖\n```bash\n$ hexo init projectName\n$ cd projectName && npm install\n```\n&ensp;&ensp;构建后可以看到目录的基本结构，其中_.config.yml为网站的配置文件；source为资源文件，比如后续需要新建的博文，就是在这个目录下生成的；themes是主题文件夹，Hexo将根据这个目录下的资源配置，来渲染网站，生成页面。\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### 配置\n#### 网站\n&ensp;&ensp;博客网站的网站标题、描述，以及网站的归属等信息设置\n\n| 参数 | 描述 |\n| :---: | --- |\n| `title` | 网站标题 |\n| `subtitle` | 网站副标题 |\n| `description` | 描述，主要用于SEO，建议准确描述网站内容，可使用关键字 |\n| `keywords` | 关键字 |\n| `author` | 网站作者 |\n| `language` | 网站所使用的语言，可根据使用的主题提供的语言选项来进行设置，如zh-CN |\n| `timezone` | 网站时区，中国大陆用户可以设置 `Asia/Shanghai`，具体可参见 [时区列表](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) |\n#### 网址\n&ensp;&ensp;通常用于设置网站网址即博文的永久链接格式\n\n| 参数 | 描述 | 默认值 |\n| :---: | --- | :---: |\n| `url` | 网址，协议需要指定，如 `http://` 或者 `https://` |\n| `permalink` | 博文的永久链接格式，具体格式可查看 [永久链接格式](https://hexo.bootcss.com/docs/permalinks.html) |\n| `pretty_urls` | 改写 `permalink` 的值来美化 URL |\n| `pretty_urls.trailing_index` | 是否在永久链接中保留尾部的 index.html，设置为 false 时去除 |\n| `pretty_urls.trailing_html` | 是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效) | true\n\n其他更详细的配置说明，可查看 [官网说明](https://hexo.bootcss.com/docs/configuration.html)","source":"_posts/Hexo-Note-初始化及常用配置.md","raw":"---\ntitle: Hexo Note - 初始化及常用配置\ndate: 2022-01-09 14:07:29\ntags: [Hexo]\ncategories: [Hexo]\n---\n### 什么是 Hexo ？\n> &ensp;&ensp;Hexo 是一个快速、简洁且高效的博客框架。[Hexo](https://hexo.bootcss.com/docs/index.html) 使用 Markdown（或其他渲染引擎）解析博文，在几秒内，即可利用靓丽的主题生成静态网页。\n\n- [Markdown站内手册](/2022/01/05/Markdown-using-document)\n- [Markdown官方手册](https://markdown.com.cn)\n\n### 安装\n#### 前提\n安装前，确认机器环境已经安装 [Git](http://git-scm.com/) 和 [Node](http://nodejs.org/) (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)：\n```bash\n$ git --version\ngit version 2.31.1.windows.1\n\n$ node -v\nv14.13.0\n```\n#### 安装 Hexo\n&ensp;&ensp;全局安装hexo cli工具\n```bash\n$ npm install -g hexo-cli\n```\n\n### 搭建网站\n#### 初始化博客项目目录，并安装依赖\n```bash\n$ hexo init projectName\n$ cd projectName && npm install\n```\n&ensp;&ensp;构建后可以看到目录的基本结构，其中_.config.yml为网站的配置文件；source为资源文件，比如后续需要新建的博文，就是在这个目录下生成的；themes是主题文件夹，Hexo将根据这个目录下的资源配置，来渲染网站，生成页面。\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### 配置\n#### 网站\n&ensp;&ensp;博客网站的网站标题、描述，以及网站的归属等信息设置\n\n| 参数 | 描述 |\n| :---: | --- |\n| `title` | 网站标题 |\n| `subtitle` | 网站副标题 |\n| `description` | 描述，主要用于SEO，建议准确描述网站内容，可使用关键字 |\n| `keywords` | 关键字 |\n| `author` | 网站作者 |\n| `language` | 网站所使用的语言，可根据使用的主题提供的语言选项来进行设置，如zh-CN |\n| `timezone` | 网站时区，中国大陆用户可以设置 `Asia/Shanghai`，具体可参见 [时区列表](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) |\n#### 网址\n&ensp;&ensp;通常用于设置网站网址即博文的永久链接格式\n\n| 参数 | 描述 | 默认值 |\n| :---: | --- | :---: |\n| `url` | 网址，协议需要指定，如 `http://` 或者 `https://` |\n| `permalink` | 博文的永久链接格式，具体格式可查看 [永久链接格式](https://hexo.bootcss.com/docs/permalinks.html) |\n| `pretty_urls` | 改写 `permalink` 的值来美化 URL |\n| `pretty_urls.trailing_index` | 是否在永久链接中保留尾部的 index.html，设置为 false 时去除 |\n| `pretty_urls.trailing_html` | 是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效) | true\n\n其他更详细的配置说明，可查看 [官网说明](https://hexo.bootcss.com/docs/configuration.html)","slug":"Hexo-Note-初始化及常用配置","published":1,"updated":"2022-01-10T06:25:39.390Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbi0007okpc7vqo1hzl","content":"<h3 id=\"什么是-Hexo-？\"><a href=\"#什么是-Hexo-？\" class=\"headerlink\" title=\"什么是 Hexo ？\"></a>什么是 Hexo ？</h3><blockquote>\n<p>&ensp;&ensp;Hexo 是一个快速、简洁且高效的博客框架。<a href=\"https://hexo.bootcss.com/docs/index.html\">Hexo</a> 使用 Markdown（或其他渲染引擎）解析博文，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n</blockquote>\n<ul>\n<li><a href=\"/2022/01/05/Markdown-using-document\">Markdown站内手册</a></li>\n<li><a href=\"https://markdown.com.cn/\">Markdown官方手册</a></li>\n</ul>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h4><p>安装前，确认机器环境已经安装 <a href=\"http://git-scm.com/\">Git</a> 和 <a href=\"http://nodejs.org/\">Node</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git --version</span><br><span class=\"line\">git version 2.31.1.windows.1</span><br><span class=\"line\"></span><br><span class=\"line\">$ node -v</span><br><span class=\"line\">v14.13.0</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h4><p>&ensp;&ensp;全局安装hexo cli工具</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搭建网站\"><a href=\"#搭建网站\" class=\"headerlink\" title=\"搭建网站\"></a>搭建网站</h3><h4 id=\"初始化博客项目目录，并安装依赖\"><a href=\"#初始化博客项目目录，并安装依赖\" class=\"headerlink\" title=\"初始化博客项目目录，并安装依赖\"></a>初始化博客项目目录，并安装依赖</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init projectName</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> projectName &amp;&amp; npm install</span><br></pre></td></tr></table></figure>\n<p>&ensp;&ensp;构建后可以看到目录的基本结构，其中_.config.yml为网站的配置文件；source为资源文件，比如后续需要新建的博文，就是在这个目录下生成的；themes是主题文件夹，Hexo将根据这个目录下的资源配置，来渲染网站，生成页面。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><h4 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h4><p>&ensp;&ensp;博客网站的网站标题、描述，以及网站的归属等信息设置</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>title</code></td>\n<td>网站标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>subtitle</code></td>\n<td>网站副标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>description</code></td>\n<td>描述，主要用于SEO，建议准确描述网站内容，可使用关键字</td>\n</tr>\n<tr>\n<td align=\"center\"><code>keywords</code></td>\n<td>关键字</td>\n</tr>\n<tr>\n<td align=\"center\"><code>author</code></td>\n<td>网站作者</td>\n</tr>\n<tr>\n<td align=\"center\"><code>language</code></td>\n<td>网站所使用的语言，可根据使用的主题提供的语言选项来进行设置，如zh-CN</td>\n</tr>\n<tr>\n<td align=\"center\"><code>timezone</code></td>\n<td>网站时区，中国大陆用户可以设置 <code>Asia/Shanghai</code>，具体可参见 <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">时区列表</a></td>\n</tr>\n</tbody></table>\n<h4 id=\"网址\"><a href=\"#网址\" class=\"headerlink\" title=\"网址\"></a>网址</h4><p>&ensp;&ensp;通常用于设置网站网址即博文的永久链接格式</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th>描述</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>url</code></td>\n<td>网址，协议需要指定，如 <code>http://</code> 或者 <code>https://</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code>permalink</code></td>\n<td>博文的永久链接格式，具体格式可查看 <a href=\"https://hexo.bootcss.com/docs/permalinks.html\">永久链接格式</a></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code>pretty_urls</code></td>\n<td>改写 <code>permalink</code> 的值来美化 URL</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code>pretty_urls.trailing_index</code></td>\n<td>是否在永久链接中保留尾部的 index.html，设置为 false 时去除</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code>pretty_urls.trailing_html</code></td>\n<td>是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效)</td>\n<td align=\"center\">true</td>\n</tr>\n</tbody></table>\n<p>其他更详细的配置说明，可查看 <a href=\"https://hexo.bootcss.com/docs/configuration.html\">官网说明</a></p>\n","site":{"data":{}},"length":867,"excerpt":"","more":"<h3 id=\"什么是-Hexo-？\"><a href=\"#什么是-Hexo-？\" class=\"headerlink\" title=\"什么是 Hexo ？\"></a>什么是 Hexo ？</h3><blockquote>\n<p>&ensp;&ensp;Hexo 是一个快速、简洁且高效的博客框架。<a href=\"https://hexo.bootcss.com/docs/index.html\">Hexo</a> 使用 Markdown（或其他渲染引擎）解析博文，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n</blockquote>\n<ul>\n<li><a href=\"/2022/01/05/Markdown-using-document\">Markdown站内手册</a></li>\n<li><a href=\"https://markdown.com.cn/\">Markdown官方手册</a></li>\n</ul>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h4><p>安装前，确认机器环境已经安装 <a href=\"http://git-scm.com/\">Git</a> 和 <a href=\"http://nodejs.org/\">Node</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git --version</span><br><span class=\"line\">git version 2.31.1.windows.1</span><br><span class=\"line\"></span><br><span class=\"line\">$ node -v</span><br><span class=\"line\">v14.13.0</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h4><p>&ensp;&ensp;全局安装hexo cli工具</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搭建网站\"><a href=\"#搭建网站\" class=\"headerlink\" title=\"搭建网站\"></a>搭建网站</h3><h4 id=\"初始化博客项目目录，并安装依赖\"><a href=\"#初始化博客项目目录，并安装依赖\" class=\"headerlink\" title=\"初始化博客项目目录，并安装依赖\"></a>初始化博客项目目录，并安装依赖</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init projectName</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> projectName &amp;&amp; npm install</span><br></pre></td></tr></table></figure>\n<p>&ensp;&ensp;构建后可以看到目录的基本结构，其中_.config.yml为网站的配置文件；source为资源文件，比如后续需要新建的博文，就是在这个目录下生成的；themes是主题文件夹，Hexo将根据这个目录下的资源配置，来渲染网站，生成页面。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><h4 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h4><p>&ensp;&ensp;博客网站的网站标题、描述，以及网站的归属等信息设置</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>title</code></td>\n<td>网站标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>subtitle</code></td>\n<td>网站副标题</td>\n</tr>\n<tr>\n<td align=\"center\"><code>description</code></td>\n<td>描述，主要用于SEO，建议准确描述网站内容，可使用关键字</td>\n</tr>\n<tr>\n<td align=\"center\"><code>keywords</code></td>\n<td>关键字</td>\n</tr>\n<tr>\n<td align=\"center\"><code>author</code></td>\n<td>网站作者</td>\n</tr>\n<tr>\n<td align=\"center\"><code>language</code></td>\n<td>网站所使用的语言，可根据使用的主题提供的语言选项来进行设置，如zh-CN</td>\n</tr>\n<tr>\n<td align=\"center\"><code>timezone</code></td>\n<td>网站时区，中国大陆用户可以设置 <code>Asia/Shanghai</code>，具体可参见 <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">时区列表</a></td>\n</tr>\n</tbody></table>\n<h4 id=\"网址\"><a href=\"#网址\" class=\"headerlink\" title=\"网址\"></a>网址</h4><p>&ensp;&ensp;通常用于设置网站网址即博文的永久链接格式</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th>描述</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>url</code></td>\n<td>网址，协议需要指定，如 <code>http://</code> 或者 <code>https://</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code>permalink</code></td>\n<td>博文的永久链接格式，具体格式可查看 <a href=\"https://hexo.bootcss.com/docs/permalinks.html\">永久链接格式</a></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code>pretty_urls</code></td>\n<td>改写 <code>permalink</code> 的值来美化 URL</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code>pretty_urls.trailing_index</code></td>\n<td>是否在永久链接中保留尾部的 index.html，设置为 false 时去除</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code>pretty_urls.trailing_html</code></td>\n<td>是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效)</td>\n<td align=\"center\">true</td>\n</tr>\n</tbody></table>\n<p>其他更详细的配置说明，可查看 <a href=\"https://hexo.bootcss.com/docs/configuration.html\">官网说明</a></p>\n"},{"title":"Hexo Note - 命令","date":"2022-01-09T07:17:57.000Z","_content":"### init\n```bash\n$ hexo init projectName\n```\n初始化 Hexo 网址项目，在上一节中已经提到过。[Hexo Note - 初始化及常用配置](/2022/01/05/Hexo-Note-初始化及常用配置)\n\n### new\n```bash\n$ hexo new [layout] <title>\n```\n- `layout`: 创建的页面类型。通常有`post`和`page`，默认是`post`，因此在使用时，省略此参数表明创建的是post类型的页面，\n  - `post`：普通的博文，会在首页和归档中列出。\n  - `page`：独立的页面，不会展示在首页和归档页，如标签页、自定义的404页面等。\n\n其他可选参数：\n\n| 参数 | 描述 |\n| :---: | --- |\n| `-p， --path` | 自定义新博文的路径 |\n| `-r, --replace` | 如果存在同名博文，将其替换 |\n| `-s, --slug` | 博文的 Slug，作为新博文的文件名和发布后的 URL |\n&ensp;&ensp;默认情况下，Hexo 或根据`permalink`配置，及文件名称来决定博文生成的路径。如果创建的是独立页面，则使用文件名来在`sources`目录下生成相应的目录，并在目录下生成`index.md`文件。\n### generate\n```bash\n$ hexo generate\n```\n生成可直接访问的网站静态文件。<br />\n其他可选参数：\n\n| 参数 | 描述 |\n| :---: | --- |\n| `-d, --deploy` | 文件生成后立即部署网站 |\n| `-w, --watch` | 监视文件变动 |\n| `-b, --bail` | 生成过程中如果发生任何未处理的异常则抛出异常 |\n| `-f, --force` | 强制重新生成文件，Hexo 引入了差分机制，如果 `public` 目录存在，那么 `hexo g` 只会重新生成改动的文件。使用该参数的效果接近 `hexo clean && hexo generate` |\n| `-c, --concurrency` | 最大同时生成文件的数量，默认无限制 |\n### server\n```bash\n$ hexo server\n```\n本地启动服务器。默认情况下，访问网址为：`http://localhost:4000/` <br />\n其他可选参数：\n\n| 参数 | 描述 |\n| :---: | --- |\n| `-p, --port` | 重新指定端口 |\n| `-s, --static` | 只使用静态文件 |\n| `-l, --log` | 启动日记记录，使用覆盖记录格式 |\n### clean\n```bash\n$ hexo clean\n```\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br />\n在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。","source":"_posts/Hexo-Note-命令.md","raw":"---\ntitle: Hexo Note - 命令\ndate: 2022-01-09 15:17:57\ntags: [Hexo]\ncategories: [Hexo]\n---\n### init\n```bash\n$ hexo init projectName\n```\n初始化 Hexo 网址项目，在上一节中已经提到过。[Hexo Note - 初始化及常用配置](/2022/01/05/Hexo-Note-初始化及常用配置)\n\n### new\n```bash\n$ hexo new [layout] <title>\n```\n- `layout`: 创建的页面类型。通常有`post`和`page`，默认是`post`，因此在使用时，省略此参数表明创建的是post类型的页面，\n  - `post`：普通的博文，会在首页和归档中列出。\n  - `page`：独立的页面，不会展示在首页和归档页，如标签页、自定义的404页面等。\n\n其他可选参数：\n\n| 参数 | 描述 |\n| :---: | --- |\n| `-p， --path` | 自定义新博文的路径 |\n| `-r, --replace` | 如果存在同名博文，将其替换 |\n| `-s, --slug` | 博文的 Slug，作为新博文的文件名和发布后的 URL |\n&ensp;&ensp;默认情况下，Hexo 或根据`permalink`配置，及文件名称来决定博文生成的路径。如果创建的是独立页面，则使用文件名来在`sources`目录下生成相应的目录，并在目录下生成`index.md`文件。\n### generate\n```bash\n$ hexo generate\n```\n生成可直接访问的网站静态文件。<br />\n其他可选参数：\n\n| 参数 | 描述 |\n| :---: | --- |\n| `-d, --deploy` | 文件生成后立即部署网站 |\n| `-w, --watch` | 监视文件变动 |\n| `-b, --bail` | 生成过程中如果发生任何未处理的异常则抛出异常 |\n| `-f, --force` | 强制重新生成文件，Hexo 引入了差分机制，如果 `public` 目录存在，那么 `hexo g` 只会重新生成改动的文件。使用该参数的效果接近 `hexo clean && hexo generate` |\n| `-c, --concurrency` | 最大同时生成文件的数量，默认无限制 |\n### server\n```bash\n$ hexo server\n```\n本地启动服务器。默认情况下，访问网址为：`http://localhost:4000/` <br />\n其他可选参数：\n\n| 参数 | 描述 |\n| :---: | --- |\n| `-p, --port` | 重新指定端口 |\n| `-s, --static` | 只使用静态文件 |\n| `-l, --log` | 启动日记记录，使用覆盖记录格式 |\n### clean\n```bash\n$ hexo clean\n```\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br />\n在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。","slug":"Hexo-Note-命令","published":1,"updated":"2022-01-10T06:25:39.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbj0009okpce60p8mya","content":"<h3 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init projectName</span><br></pre></td></tr></table></figure>\n<p>初始化 Hexo 网址项目，在上一节中已经提到过。<a href=\"/2022/01/05/Hexo-Note-%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%8A%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE\">Hexo Note - 初始化及常用配置</a></p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>layout</code>: 创建的页面类型。通常有<code>post</code>和<code>page</code>，默认是<code>post</code>，因此在使用时，省略此参数表明创建的是post类型的页面，<ul>\n<li><code>post</code>：普通的博文，会在首页和归档中列出。</li>\n<li><code>page</code>：独立的页面，不会展示在首页和归档页，如标签页、自定义的404页面等。</li>\n</ul>\n</li>\n</ul>\n<p>其他可选参数：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>-p， --path</code></td>\n<td>自定义新博文的路径</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-r, --replace</code></td>\n<td>如果存在同名博文，将其替换</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-s, --slug</code></td>\n<td>博文的 Slug，作为新博文的文件名和发布后的 URL</td>\n</tr>\n<tr>\n<td align=\"center\">&ensp;&ensp;默认情况下，Hexo 或根据<code>permalink</code>配置，及文件名称来决定博文生成的路径。如果创建的是独立页面，则使用文件名来在<code>sources</code>目录下生成相应的目录，并在目录下生成<code>index.md</code>文件。</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>生成可直接访问的网站静态文件。<br /><br>其他可选参数：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>-d, --deploy</code></td>\n<td>文件生成后立即部署网站</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-w, --watch</code></td>\n<td>监视文件变动</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-b, --bail</code></td>\n<td>生成过程中如果发生任何未处理的异常则抛出异常</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-f, --force</code></td>\n<td>强制重新生成文件，Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>-c, --concurrency</code></td>\n<td>最大同时生成文件的数量，默认无限制</td>\n</tr>\n</tbody></table>\n<h3 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>本地启动服务器。默认情况下，访问网址为：<code>http://localhost:4000/</code> <br /><br>其他可选参数：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>-p, --port</code></td>\n<td>重新指定端口</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-s, --static</code></td>\n<td>只使用静态文件</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-l, --log</code></td>\n<td>启动日记记录，使用覆盖记录格式</td>\n</tr>\n</tbody></table>\n<h3 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br /><br>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n","site":{"data":{}},"length":808,"excerpt":"","more":"<h3 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init projectName</span><br></pre></td></tr></table></figure>\n<p>初始化 Hexo 网址项目，在上一节中已经提到过。<a href=\"/2022/01/05/Hexo-Note-%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%8A%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE\">Hexo Note - 初始化及常用配置</a></p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>layout</code>: 创建的页面类型。通常有<code>post</code>和<code>page</code>，默认是<code>post</code>，因此在使用时，省略此参数表明创建的是post类型的页面，<ul>\n<li><code>post</code>：普通的博文，会在首页和归档中列出。</li>\n<li><code>page</code>：独立的页面，不会展示在首页和归档页，如标签页、自定义的404页面等。</li>\n</ul>\n</li>\n</ul>\n<p>其他可选参数：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>-p， --path</code></td>\n<td>自定义新博文的路径</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-r, --replace</code></td>\n<td>如果存在同名博文，将其替换</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-s, --slug</code></td>\n<td>博文的 Slug，作为新博文的文件名和发布后的 URL</td>\n</tr>\n<tr>\n<td align=\"center\">&ensp;&ensp;默认情况下，Hexo 或根据<code>permalink</code>配置，及文件名称来决定博文生成的路径。如果创建的是独立页面，则使用文件名来在<code>sources</code>目录下生成相应的目录，并在目录下生成<code>index.md</code>文件。</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>生成可直接访问的网站静态文件。<br /><br>其他可选参数：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>-d, --deploy</code></td>\n<td>文件生成后立即部署网站</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-w, --watch</code></td>\n<td>监视文件变动</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-b, --bail</code></td>\n<td>生成过程中如果发生任何未处理的异常则抛出异常</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-f, --force</code></td>\n<td>强制重新生成文件，Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>-c, --concurrency</code></td>\n<td>最大同时生成文件的数量，默认无限制</td>\n</tr>\n</tbody></table>\n<h3 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>本地启动服务器。默认情况下，访问网址为：<code>http://localhost:4000/</code> <br /><br>其他可选参数：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>-p, --port</code></td>\n<td>重新指定端口</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-s, --static</code></td>\n<td>只使用静态文件</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-l, --log</code></td>\n<td>启动日记记录，使用覆盖记录格式</td>\n</tr>\n</tbody></table>\n<h3 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br /><br>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n"},{"title":"Hexo - 持续改进","date":"2022-01-24T08:04:40.000Z","_content":"#### 表格样式改进\n- 在 `themes/next/source/css` 目录下新建目录 `_custom`，并新建表格样式文件 `table.css`，样式内容如下：\n\n<details>\n<summary>CSS</summary>\n\n```css\ntable {\n  width: 100%; /*表格宽度*/\n  max-width: 65em; /*表格最大宽度，避免表格过宽*/\n  border: 1px solid #dedede; /*表格外边框设置*/\n  margin: 15px auto; /*外边距*/\n  border-collapse: collapse; /*使用单一线条的边框*/\n  empty-cells: show; /*单元格无内容依旧绘制边框*/\n  border-radius: 4px;\n}\n\ntable th,table td {\n  height: 35px; /*统一每一行的默认高度*/\n  border: 1px solid #dedede; /*内部边框样式*/\n  padding: 0 10px; /*内边距*/\n}\ntable th {\n  font-weight: bold; /*加粗*/\n  text-align: center !important; /*内容居中，加上 !important 避免被 Markdown 样式覆盖*/\n  background: rgba(158,188,226,0.2); /*背景色*/\n}\ntable th {\n  white-space: nowrap; /*表头内容强制在一行显示*/\n}\ntable td:nth-child(1) {\n  /*首列不换行*/\n  white-space: nowrap;\n}\ntable tbody tr:nth-child(2n) {\n  /*隔行变色*/\n  background: rgba(102, 128, 153, 0.05);\n}\ntable tr:hover {\n  background: rgba(245, 166, 5, 0.77);\n}\n```\n</details>\n\n- 在 `themes/next/source/css/main.styl` 文件的最底部，引入表格样式文件\n> 注意：引用的文件路径为相对该 `main.styl` 的路径\n```css\n@import \"_custom/table.css\";\n```\n- 样式更改前后对比\n  - 更改前\n    ![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo%20-%20%E6%8C%81%E7%BB%AD%E6%94%B9%E8%BF%9B/table_css_unchange.png)\n  - 更改后\n    ![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo%20-%20%E6%8C%81%E7%BB%AD%E6%94%B9%E8%BF%9B/table_css_changed.png)","source":"_posts/Hexo-持续改进.md","raw":"---\ntitle: Hexo - 持续改进\ndate: 2022-01-24 16:04:40\ntags: [Hexo]\ncategories: [Hexo]\n---\n#### 表格样式改进\n- 在 `themes/next/source/css` 目录下新建目录 `_custom`，并新建表格样式文件 `table.css`，样式内容如下：\n\n<details>\n<summary>CSS</summary>\n\n```css\ntable {\n  width: 100%; /*表格宽度*/\n  max-width: 65em; /*表格最大宽度，避免表格过宽*/\n  border: 1px solid #dedede; /*表格外边框设置*/\n  margin: 15px auto; /*外边距*/\n  border-collapse: collapse; /*使用单一线条的边框*/\n  empty-cells: show; /*单元格无内容依旧绘制边框*/\n  border-radius: 4px;\n}\n\ntable th,table td {\n  height: 35px; /*统一每一行的默认高度*/\n  border: 1px solid #dedede; /*内部边框样式*/\n  padding: 0 10px; /*内边距*/\n}\ntable th {\n  font-weight: bold; /*加粗*/\n  text-align: center !important; /*内容居中，加上 !important 避免被 Markdown 样式覆盖*/\n  background: rgba(158,188,226,0.2); /*背景色*/\n}\ntable th {\n  white-space: nowrap; /*表头内容强制在一行显示*/\n}\ntable td:nth-child(1) {\n  /*首列不换行*/\n  white-space: nowrap;\n}\ntable tbody tr:nth-child(2n) {\n  /*隔行变色*/\n  background: rgba(102, 128, 153, 0.05);\n}\ntable tr:hover {\n  background: rgba(245, 166, 5, 0.77);\n}\n```\n</details>\n\n- 在 `themes/next/source/css/main.styl` 文件的最底部，引入表格样式文件\n> 注意：引用的文件路径为相对该 `main.styl` 的路径\n```css\n@import \"_custom/table.css\";\n```\n- 样式更改前后对比\n  - 更改前\n    ![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo%20-%20%E6%8C%81%E7%BB%AD%E6%94%B9%E8%BF%9B/table_css_unchange.png)\n  - 更改后\n    ![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo%20-%20%E6%8C%81%E7%BB%AD%E6%94%B9%E8%BF%9B/table_css_changed.png)","slug":"Hexo-持续改进","published":1,"updated":"2022-01-26T09:17:19.745Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbj000aokpcaio4b0z4","content":"<h4 id=\"表格样式改进\"><a href=\"#表格样式改进\" class=\"headerlink\" title=\"表格样式改进\"></a>表格样式改进</h4><ul>\n<li>在 <code>themes/next/source/css</code> 目录下新建目录 <code>_custom</code>，并新建表格样式文件 <code>table.css</code>，样式内容如下：</li>\n</ul>\n<details>\n<summary>CSS</summary>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; <span class=\"comment\">/*表格宽度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">65em</span>; <span class=\"comment\">/*表格最大宽度，避免表格过宽*/</span></span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#dedede</span>; <span class=\"comment\">/*表格外边框设置*/</span></span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">15px</span> auto; <span class=\"comment\">/*外边距*/</span></span><br><span class=\"line\">  <span class=\"attribute\">border-collapse</span>: collapse; <span class=\"comment\">/*使用单一线条的边框*/</span></span><br><span class=\"line\">  <span class=\"attribute\">empty-cells</span>: show; <span class=\"comment\">/*单元格无内容依旧绘制边框*/</span></span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span>,<span class=\"selector-tag\">table</span> <span class=\"selector-tag\">td</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">35px</span>; <span class=\"comment\">/*统一每一行的默认高度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#dedede</span>; <span class=\"comment\">/*内部边框样式*/</span></span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span>; <span class=\"comment\">/*内边距*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold; <span class=\"comment\">/*加粗*/</span></span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center <span class=\"meta\">!important</span>; <span class=\"comment\">/*内容居中，加上 !important 避免被 Markdown 样式覆盖*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">158</span>,<span class=\"number\">188</span>,<span class=\"number\">226</span>,<span class=\"number\">0.2</span>); <span class=\"comment\">/*背景色*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap; <span class=\"comment\">/*表头内容强制在一行显示*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">td</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*首列不换行*/</span></span><br><span class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">tbody</span> <span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">2</span>n) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*隔行变色*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">102</span>, <span class=\"number\">128</span>, <span class=\"number\">153</span>, <span class=\"number\">0.05</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">245</span>, <span class=\"number\">166</span>, <span class=\"number\">5</span>, <span class=\"number\">0.77</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</details>\n\n<ul>\n<li>在 <code>themes/next/source/css/main.styl</code> 文件的最底部，引入表格样式文件<blockquote>\n<p>注意：引用的文件路径为相对该 <code>main.styl</code> 的路径</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">&quot;_custom/table.css&quot;</span>;</span><br></pre></td></tr></table></figure></li>\n<li>样式更改前后对比<ul>\n<li>更改前<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo%20-%20%E6%8C%81%E7%BB%AD%E6%94%B9%E8%BF%9B/table_css_unchange.png\" alt=\"预览\"></li>\n<li>更改后<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo%20-%20%E6%8C%81%E7%BB%AD%E6%94%B9%E8%BF%9B/table_css_changed.png\" alt=\"预览\"></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":161,"excerpt":"","more":"<h4 id=\"表格样式改进\"><a href=\"#表格样式改进\" class=\"headerlink\" title=\"表格样式改进\"></a>表格样式改进</h4><ul>\n<li>在 <code>themes/next/source/css</code> 目录下新建目录 <code>_custom</code>，并新建表格样式文件 <code>table.css</code>，样式内容如下：</li>\n</ul>\n<details>\n<summary>CSS</summary>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; <span class=\"comment\">/*表格宽度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">65em</span>; <span class=\"comment\">/*表格最大宽度，避免表格过宽*/</span></span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#dedede</span>; <span class=\"comment\">/*表格外边框设置*/</span></span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">15px</span> auto; <span class=\"comment\">/*外边距*/</span></span><br><span class=\"line\">  <span class=\"attribute\">border-collapse</span>: collapse; <span class=\"comment\">/*使用单一线条的边框*/</span></span><br><span class=\"line\">  <span class=\"attribute\">empty-cells</span>: show; <span class=\"comment\">/*单元格无内容依旧绘制边框*/</span></span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span>,<span class=\"selector-tag\">table</span> <span class=\"selector-tag\">td</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">35px</span>; <span class=\"comment\">/*统一每一行的默认高度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#dedede</span>; <span class=\"comment\">/*内部边框样式*/</span></span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span>; <span class=\"comment\">/*内边距*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold; <span class=\"comment\">/*加粗*/</span></span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center <span class=\"meta\">!important</span>; <span class=\"comment\">/*内容居中，加上 !important 避免被 Markdown 样式覆盖*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">158</span>,<span class=\"number\">188</span>,<span class=\"number\">226</span>,<span class=\"number\">0.2</span>); <span class=\"comment\">/*背景色*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap; <span class=\"comment\">/*表头内容强制在一行显示*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">td</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*首列不换行*/</span></span><br><span class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">tbody</span> <span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">2</span>n) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*隔行变色*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">102</span>, <span class=\"number\">128</span>, <span class=\"number\">153</span>, <span class=\"number\">0.05</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">245</span>, <span class=\"number\">166</span>, <span class=\"number\">5</span>, <span class=\"number\">0.77</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</details>\n\n<ul>\n<li>在 <code>themes/next/source/css/main.styl</code> 文件的最底部，引入表格样式文件<blockquote>\n<p>注意：引用的文件路径为相对该 <code>main.styl</code> 的路径</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">&quot;_custom/table.css&quot;</span>;</span><br></pre></td></tr></table></figure></li>\n<li>样式更改前后对比<ul>\n<li>更改前<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo%20-%20%E6%8C%81%E7%BB%AD%E6%94%B9%E8%BF%9B/table_css_unchange.png\" alt=\"预览\"></li>\n<li>更改后<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo%20-%20%E6%8C%81%E7%BB%AD%E6%94%B9%E8%BF%9B/table_css_changed.png\" alt=\"预览\"></li>\n</ul>\n</li>\n</ul>\n"},{"title":"JavaScript - 开发技巧","date":"2022-01-26T02:50:22.000Z","_content":"#### 将 `Json` 数据导出为文件\n```javascript\nimport FileSaver from 'file-saver';\n\n/**\n * @param data {string} 需要导出的json数据\n * @param fileName {string} 导出的文件名称\n * */\nexport function exportJSON(data, fileName) {\n    const blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});\n    FileSaver.saveAs(blob, fileName);\n}\n```\n\n#### 数据解压缩\n- 如果需要传递给后端接口的数据量过大，可能影响带宽及存储时，可考虑对数据进行压缩后传递\n- 压缩工具库：[pako](http://www.qiutianaimeili.com/html/page/2019/12/bncs8g07hcg.html)\n```javascript\n/**\n * @params:\n *  str: 需要压缩的内容\n * */\nexport function zipJson(str){\n    const data = deflate(str, { to: 'string', level: 8 });\n    return data && Uint8ArrayToString(data);\n}\n/**\n * 数据解压缩\n * @parasm：\n *  str：通过zipJson方法压缩后的数据\n * */\nexport function unZipJson(str) {\n    const strArr = stringToUint8Array(str);\n    const data = inflate(strArr, {\n        to: 'string',\n    });\n    return data;\n}\n/**\n * 将字符串转换为Uint8Array\n * */\nexport function stringToUint8Array(str){\n    const arr = [];\n    for (let i = 0, j = str.length; i < j; i += 1) {\n        arr.push(str.charCodeAt(i));\n    };\n    const tmpUint8Array = new Uint8Array(arr);\n    return tmpUint8Array;\n}\n/**\n * 将Uint8Array转换为字符串：使用pako压缩后的数据通常为Uint8Array，需要将此类型转换为字符串，传递给后端接口\n * */\nexport function Uint8ArrayToString(fileData){\n    let dataString = \"\";\n    for (let i = 0; i < fileData.length; i += 1) {\n        dataString += String.fromCharCode(fileData[i]);\n    };\n    return dataString;\n}\n```\n\n#### `Antd` 自定义异步读取文件内容\n- 配合 `Upload` 组件异步读取文件内容\n```javascript\n<Upload\n    showUploadList={false}\n    maxCount={1}\n    accept='.svg,.png,jpg,.PNG,.JPG,.JPEG'\n    beforeUpload={(file) => {\n        readFileAsDataURL(file).then(res => {\n            addBgImg(this.props.getGraph(), res)\n        })\n    }}\n>\n    <Button title='导入背景图' role='none' type='link' icon='bg-colors' />\n</Upload>\n\n/**\n * file：文件\n * return：promise\n * */\nexport function readFileAsDataURL(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function(event) {\n            resolve(event.target.result);\n        };\n        reader.onerror = function() {\n            reject(false);\n        };\n    })\n}\n```\n\n#### 计算字符串在浏览器中显示的宽度\n```javascript\n/**\n * @description 计算字符串在浏览器中显示的宽度\n * @param text {string} 需要计算的文本\n * @param fontSize {number} 文本字体大小\n * @param overflowFlag {boolean} 是否超长省略显示\n * @param overflowLength {number} 超长省略的文本长度\n * @return {number}\n */\nexport const computedTextWidth = (text, fontSize = 12, overflowFlag, overflowLength = 8) => {\n    let span = document.getElementById('computedTextWidth');\n    if (!span) {\n        span = document.createElement('span');\n        span.id = 'computedTextWidth';\n        span.style.cssText = 'visibility:hidden;position: absolute;left: -999em;top:-999em;';\n        document.body.appendChild(span);\n    }\n    span.style.fontSize = `${fontSize}px`;\n    span.innerHTML = overflowFlag && _.isString(text) && text.length > overflowLength ? `${text.slice(0, overflowLength)}...` : text;\n    return span.offsetWidth;\n};\n```\n\n#### 文本过长换行显示\n```javascript\n/**\n * 格式化legend 文本过长换行显示\n * @params:\n *  params: 文本\n *  provideNumber: 每一行要显示的文本字数\n *  rows: 指定最多显示多少行\n * */\nexport const formatterLegendText = (params, provideNumber = 17, rows) => {\n    let newParamsName = \"\";// 最终拼接成的字符串\n    const paramsNameNumber = params.length;// 实际文本字符的个数\n    const maxRows = Math.ceil(paramsNameNumber / provideNumber);// 换行的话，需要显示几行，向上取整;\n    let rowNumber = rows || maxRows;\n\n    // 条件等同于rowNumber>1\n    if (paramsNameNumber > provideNumber) {\n        for (let p = 0; p < rowNumber; p += 1) {\n            let tempStr = \"\";// 表示每一次截取的字符串\n            let start = p * provideNumber;// 开始截取的位置\n            let end = start + provideNumber;// 结束截取的位置\n            // 此处特殊处理最后一行的索引值\n            if (p == rowNumber - 1) {\n                // 最后一次不换行\n                tempStr = params.substring(start, paramsNameNumber);\n            } else {\n                // 每一次拼接字符串并换行\n                tempStr = params.substring(start, end) + \"\\n\";\n            }\n            newParamsName += tempStr;// 最终拼成的字符串\n        }\n    } else {\n        // 将旧标签的值赋给新标签\n        newParamsName = params;\n    }\n    // 如果指定了最大显示行数，并别比实际计算的最大行数小，则后续文本内容省略显示\n    if (rows && rows < maxRows) {\n        newParamsName += '...';\n    }\n    //将最终的字符串返回\n    return newParamsName;\n}\n```\n\n#### 生成 `uuid`\n```javascript\n/**\n * 生成uuid\n * */\nexport const generateUUID = () => {\n    const temp_url = URL.createObjectURL(new Blob());\n    const uuid = temp_url.toString();\n    URL.revokeObjectURL(temp_url);\n    return uuid.substr(uuid.lastIndexOf(\"/\") + 1);\n}\n```\n\n#### 格式化统计数值\n```javascript\n/**\n * 格式化统计数值\n * @param {Number} count 统计数值\n * @param {Number} toFixed 小数点保留位数\n * @param {String[]} units 要格式化的单位\n */\nexport const formatCount = ({\n                                count = 0,\n                                toFixed = 1,\n                                units = ['万', '亿'],\n                            }={}) => {\n    if (isNaN(Number(count))) {return 0;}\n    // 1.　计算单位\n    const symbols = ['个', '十', '百', '千', '万', '十万', '百万', '千万', '亿'];\n    const len = count.toString().length;\n    const unit = symbols\n        .slice(0, len)\n        .filter(v => units.includes(v))\n        .reverse()[0] || '';\n\n    //　２．计算数值\n    const index = symbols.indexOf(unit);\n    let value = count / Math.pow(10, index !== -1 ? index : 0);\n\n    // ３．格式化\n    if (value.toString().length > value.toFixed(toFixed).toString().length) {\n        value = value.toFixed(toFixed);\n    }\n    return {　value , unit,  format: `${value} ${unit}` };\n};\n```\n\n#### Byte 数值装换\n```javascript\n/**\n * Byte 数值装换\n * @param {Number} bytes 当前 bytes 大小\n */\nexport const byteFormat = (bytes) => {\n    if (isNaN(bytes)) {return '0 B';}\n    const symbols = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let exp = Math.floor(Math.log(bytes)/Math.log(2));\n    if (exp < 1) {exp = 0;}\n    const i = Math.floor(exp / 10);\n    bytes = bytes / Math.pow(2, 10 * i);\n    if (bytes.toString().length > bytes.toFixed(2).toString().length) {\n        bytes = bytes.toFixed(2);\n    }\n    return {\n        symbols,                          // 单位列表\n        index: i,                         // 转换后单位所在列表中的索引\n        value: bytes,                     // 转换后的值\n        unit: symbols[i],                 // 转换后单位\n        format: `${bytes} ${symbols[i]}`, // 格式后的字符串\n    };\n};\n```\n\n#### 全屏显示\n```javascript\n//全屏显示\n/**\n * @param：ele {Element} 指定需要全屏的元素\n * */\nexport function fullScreen(ele) {\n    let element = ele || document.documentElement;\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n}\n\n//退出全屏\nexport function exitFullscreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    }\n}\n```\n\n#### 手动取消请求\n- 在 `SPA` 应用中，当用户切换菜单时，取消前置菜单的所有接口请求\n```javascript\n/**\n * fetch手动取消请求\n * */\nlet abortController = window.AbortController && new AbortController();\n// 由于控制器取消请求时,将取消相同信号的所有请求,因此为避免取消请求后的后续请求正常发送,需要重新构建控制器,生成新的信号\nexports.renewAbortController = () => {\n    abortController = window.AbortController && new AbortController();\n}\n// 获取当前控制器实例\nexports.getAbortController = () => {\n    return abortController;\n}\n\n// 切换菜单时取消前置请求并重新生成控制器\nchildMenuClick = (e) => {\n    getAbortController().abort();\n    renewAbortController();\n}\n\n// 发送请求时,配置控制器信号\nexport function request(url, options) {\n    return fetch(url, {...options, credentials: 'include', signal: getAbortController() && getAbortController().signal})\n}\n```","source":"_posts/JavaScript-开发技巧.md","raw":"---\ntitle: JavaScript - 开发技巧\ndate: 2022-01-26 10:50:22\ntags: [JavaScript]\ncategories: [JavaScript]\n---\n#### 将 `Json` 数据导出为文件\n```javascript\nimport FileSaver from 'file-saver';\n\n/**\n * @param data {string} 需要导出的json数据\n * @param fileName {string} 导出的文件名称\n * */\nexport function exportJSON(data, fileName) {\n    const blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});\n    FileSaver.saveAs(blob, fileName);\n}\n```\n\n#### 数据解压缩\n- 如果需要传递给后端接口的数据量过大，可能影响带宽及存储时，可考虑对数据进行压缩后传递\n- 压缩工具库：[pako](http://www.qiutianaimeili.com/html/page/2019/12/bncs8g07hcg.html)\n```javascript\n/**\n * @params:\n *  str: 需要压缩的内容\n * */\nexport function zipJson(str){\n    const data = deflate(str, { to: 'string', level: 8 });\n    return data && Uint8ArrayToString(data);\n}\n/**\n * 数据解压缩\n * @parasm：\n *  str：通过zipJson方法压缩后的数据\n * */\nexport function unZipJson(str) {\n    const strArr = stringToUint8Array(str);\n    const data = inflate(strArr, {\n        to: 'string',\n    });\n    return data;\n}\n/**\n * 将字符串转换为Uint8Array\n * */\nexport function stringToUint8Array(str){\n    const arr = [];\n    for (let i = 0, j = str.length; i < j; i += 1) {\n        arr.push(str.charCodeAt(i));\n    };\n    const tmpUint8Array = new Uint8Array(arr);\n    return tmpUint8Array;\n}\n/**\n * 将Uint8Array转换为字符串：使用pako压缩后的数据通常为Uint8Array，需要将此类型转换为字符串，传递给后端接口\n * */\nexport function Uint8ArrayToString(fileData){\n    let dataString = \"\";\n    for (let i = 0; i < fileData.length; i += 1) {\n        dataString += String.fromCharCode(fileData[i]);\n    };\n    return dataString;\n}\n```\n\n#### `Antd` 自定义异步读取文件内容\n- 配合 `Upload` 组件异步读取文件内容\n```javascript\n<Upload\n    showUploadList={false}\n    maxCount={1}\n    accept='.svg,.png,jpg,.PNG,.JPG,.JPEG'\n    beforeUpload={(file) => {\n        readFileAsDataURL(file).then(res => {\n            addBgImg(this.props.getGraph(), res)\n        })\n    }}\n>\n    <Button title='导入背景图' role='none' type='link' icon='bg-colors' />\n</Upload>\n\n/**\n * file：文件\n * return：promise\n * */\nexport function readFileAsDataURL(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function(event) {\n            resolve(event.target.result);\n        };\n        reader.onerror = function() {\n            reject(false);\n        };\n    })\n}\n```\n\n#### 计算字符串在浏览器中显示的宽度\n```javascript\n/**\n * @description 计算字符串在浏览器中显示的宽度\n * @param text {string} 需要计算的文本\n * @param fontSize {number} 文本字体大小\n * @param overflowFlag {boolean} 是否超长省略显示\n * @param overflowLength {number} 超长省略的文本长度\n * @return {number}\n */\nexport const computedTextWidth = (text, fontSize = 12, overflowFlag, overflowLength = 8) => {\n    let span = document.getElementById('computedTextWidth');\n    if (!span) {\n        span = document.createElement('span');\n        span.id = 'computedTextWidth';\n        span.style.cssText = 'visibility:hidden;position: absolute;left: -999em;top:-999em;';\n        document.body.appendChild(span);\n    }\n    span.style.fontSize = `${fontSize}px`;\n    span.innerHTML = overflowFlag && _.isString(text) && text.length > overflowLength ? `${text.slice(0, overflowLength)}...` : text;\n    return span.offsetWidth;\n};\n```\n\n#### 文本过长换行显示\n```javascript\n/**\n * 格式化legend 文本过长换行显示\n * @params:\n *  params: 文本\n *  provideNumber: 每一行要显示的文本字数\n *  rows: 指定最多显示多少行\n * */\nexport const formatterLegendText = (params, provideNumber = 17, rows) => {\n    let newParamsName = \"\";// 最终拼接成的字符串\n    const paramsNameNumber = params.length;// 实际文本字符的个数\n    const maxRows = Math.ceil(paramsNameNumber / provideNumber);// 换行的话，需要显示几行，向上取整;\n    let rowNumber = rows || maxRows;\n\n    // 条件等同于rowNumber>1\n    if (paramsNameNumber > provideNumber) {\n        for (let p = 0; p < rowNumber; p += 1) {\n            let tempStr = \"\";// 表示每一次截取的字符串\n            let start = p * provideNumber;// 开始截取的位置\n            let end = start + provideNumber;// 结束截取的位置\n            // 此处特殊处理最后一行的索引值\n            if (p == rowNumber - 1) {\n                // 最后一次不换行\n                tempStr = params.substring(start, paramsNameNumber);\n            } else {\n                // 每一次拼接字符串并换行\n                tempStr = params.substring(start, end) + \"\\n\";\n            }\n            newParamsName += tempStr;// 最终拼成的字符串\n        }\n    } else {\n        // 将旧标签的值赋给新标签\n        newParamsName = params;\n    }\n    // 如果指定了最大显示行数，并别比实际计算的最大行数小，则后续文本内容省略显示\n    if (rows && rows < maxRows) {\n        newParamsName += '...';\n    }\n    //将最终的字符串返回\n    return newParamsName;\n}\n```\n\n#### 生成 `uuid`\n```javascript\n/**\n * 生成uuid\n * */\nexport const generateUUID = () => {\n    const temp_url = URL.createObjectURL(new Blob());\n    const uuid = temp_url.toString();\n    URL.revokeObjectURL(temp_url);\n    return uuid.substr(uuid.lastIndexOf(\"/\") + 1);\n}\n```\n\n#### 格式化统计数值\n```javascript\n/**\n * 格式化统计数值\n * @param {Number} count 统计数值\n * @param {Number} toFixed 小数点保留位数\n * @param {String[]} units 要格式化的单位\n */\nexport const formatCount = ({\n                                count = 0,\n                                toFixed = 1,\n                                units = ['万', '亿'],\n                            }={}) => {\n    if (isNaN(Number(count))) {return 0;}\n    // 1.　计算单位\n    const symbols = ['个', '十', '百', '千', '万', '十万', '百万', '千万', '亿'];\n    const len = count.toString().length;\n    const unit = symbols\n        .slice(0, len)\n        .filter(v => units.includes(v))\n        .reverse()[0] || '';\n\n    //　２．计算数值\n    const index = symbols.indexOf(unit);\n    let value = count / Math.pow(10, index !== -1 ? index : 0);\n\n    // ３．格式化\n    if (value.toString().length > value.toFixed(toFixed).toString().length) {\n        value = value.toFixed(toFixed);\n    }\n    return {　value , unit,  format: `${value} ${unit}` };\n};\n```\n\n#### Byte 数值装换\n```javascript\n/**\n * Byte 数值装换\n * @param {Number} bytes 当前 bytes 大小\n */\nexport const byteFormat = (bytes) => {\n    if (isNaN(bytes)) {return '0 B';}\n    const symbols = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let exp = Math.floor(Math.log(bytes)/Math.log(2));\n    if (exp < 1) {exp = 0;}\n    const i = Math.floor(exp / 10);\n    bytes = bytes / Math.pow(2, 10 * i);\n    if (bytes.toString().length > bytes.toFixed(2).toString().length) {\n        bytes = bytes.toFixed(2);\n    }\n    return {\n        symbols,                          // 单位列表\n        index: i,                         // 转换后单位所在列表中的索引\n        value: bytes,                     // 转换后的值\n        unit: symbols[i],                 // 转换后单位\n        format: `${bytes} ${symbols[i]}`, // 格式后的字符串\n    };\n};\n```\n\n#### 全屏显示\n```javascript\n//全屏显示\n/**\n * @param：ele {Element} 指定需要全屏的元素\n * */\nexport function fullScreen(ele) {\n    let element = ele || document.documentElement;\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n}\n\n//退出全屏\nexport function exitFullscreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    }\n}\n```\n\n#### 手动取消请求\n- 在 `SPA` 应用中，当用户切换菜单时，取消前置菜单的所有接口请求\n```javascript\n/**\n * fetch手动取消请求\n * */\nlet abortController = window.AbortController && new AbortController();\n// 由于控制器取消请求时,将取消相同信号的所有请求,因此为避免取消请求后的后续请求正常发送,需要重新构建控制器,生成新的信号\nexports.renewAbortController = () => {\n    abortController = window.AbortController && new AbortController();\n}\n// 获取当前控制器实例\nexports.getAbortController = () => {\n    return abortController;\n}\n\n// 切换菜单时取消前置请求并重新生成控制器\nchildMenuClick = (e) => {\n    getAbortController().abort();\n    renewAbortController();\n}\n\n// 发送请求时,配置控制器信号\nexport function request(url, options) {\n    return fetch(url, {...options, credentials: 'include', signal: getAbortController() && getAbortController().signal})\n}\n```","slug":"JavaScript-开发技巧","published":1,"updated":"2022-02-13T02:55:42.885Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbk000dokpc3cti0opj","content":"<h4 id=\"将-Json-数据导出为文件\"><a href=\"#将-Json-数据导出为文件\" class=\"headerlink\" title=\"将 Json 数据导出为文件\"></a>将 <code>Json</code> 数据导出为文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> FileSaver <span class=\"keyword\">from</span> <span class=\"string\">&#x27;file-saver&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>data &#123;string&#125; 需要导出的json数据</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>fileName &#123;string&#125; 导出的文件名称</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exportJSON</span>(<span class=\"params\">data, fileName</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> blob = <span class=\"keyword\">new</span> Blob([data], &#123;<span class=\"attr\">type</span>: <span class=\"string\">&quot;text/plain;charset=utf-8&quot;</span>&#125;);</span><br><span class=\"line\">    FileSaver.saveAs(blob, fileName);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数据解压缩\"><a href=\"#数据解压缩\" class=\"headerlink\" title=\"数据解压缩\"></a>数据解压缩</h4><ul>\n<li>如果需要传递给后端接口的数据量过大，可能影响带宽及存储时，可考虑对数据进行压缩后传递</li>\n<li>压缩工具库：<a href=\"http://www.qiutianaimeili.com/html/page/2019/12/bncs8g07hcg.html\">pako</a><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span>:</span></span><br><span class=\"line\"><span class=\"comment\"> *  str: 需要压缩的内容</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zipJson</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = deflate(str, &#123; <span class=\"attr\">to</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">level</span>: <span class=\"number\">8</span> &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data &amp;&amp; Uint8ArrayToString(data);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数据解压缩</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@parasm</span>：</span></span><br><span class=\"line\"><span class=\"comment\"> *  str：通过zipJson方法压缩后的数据</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unZipJson</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> strArr = stringToUint8Array(str);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = inflate(strArr, &#123;</span><br><span class=\"line\">        <span class=\"attr\">to</span>: <span class=\"string\">&#x27;string&#x27;</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 将字符串转换为Uint8Array</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stringToUint8Array</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = str.length; i &lt; j; i += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        arr.push(str.charCodeAt(i));</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> tmpUint8Array = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(arr);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tmpUint8Array;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 将Uint8Array转换为字符串：使用pako压缩后的数据通常为Uint8Array，需要将此类型转换为字符串，传递给后端接口</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Uint8ArrayToString</span>(<span class=\"params\">fileData</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dataString = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; fileData.length; i += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        dataString += <span class=\"built_in\">String</span>.fromCharCode(fileData[i]);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dataString;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"Antd-自定义异步读取文件内容\"><a href=\"#Antd-自定义异步读取文件内容\" class=\"headerlink\" title=\"Antd 自定义异步读取文件内容\"></a><code>Antd</code> 自定义异步读取文件内容</h4><ul>\n<li>配合 <code>Upload</code> 组件异步读取文件内容<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Upload</span><br><span class=\"line\">    showUploadList=&#123;<span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">    maxCount=&#123;<span class=\"number\">1</span>&#125;</span><br><span class=\"line\">    accept=<span class=\"string\">&#x27;.svg,.png,jpg,.PNG,.JPG,.JPEG&#x27;</span></span><br><span class=\"line\">    beforeUpload=&#123;<span class=\"function\">(<span class=\"params\">file</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        readFileAsDataURL(file).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">            addBgImg(<span class=\"built_in\">this</span>.props.getGraph(), res)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;&#125;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">title</span>=<span class=\"string\">&#x27;导入背景图&#x27;</span> <span class=\"attr\">role</span>=<span class=\"string\">&#x27;none&#x27;</span> <span class=\"attr\">type</span>=<span class=\"string\">&#x27;link&#x27;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&#x27;bg-colors&#x27;</span> /&gt;</span></span></span><br><span class=\"line\">&lt;/Upload&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * file：文件</span></span><br><span class=\"line\"><span class=\"comment\"> * return：promise</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readFileAsDataURL</span>(<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> FileReader();</span><br><span class=\"line\">        reader.readAsDataURL(file);</span><br><span class=\"line\">        reader.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">            resolve(event.target.result);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        reader.onerror = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            reject(<span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"计算字符串在浏览器中显示的宽度\"><a href=\"#计算字符串在浏览器中显示的宽度\" class=\"headerlink\" title=\"计算字符串在浏览器中显示的宽度\"></a>计算字符串在浏览器中显示的宽度</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description </span>计算字符串在浏览器中显示的宽度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>text &#123;string&#125; 需要计算的文本</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>fontSize &#123;number&#125; 文本字体大小</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>overflowFlag &#123;boolean&#125; 是否超长省略显示</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>overflowLength &#123;number&#125; 超长省略的文本长度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> computedTextWidth = <span class=\"function\">(<span class=\"params\">text, fontSize = <span class=\"number\">12</span>, overflowFlag, overflowLength = <span class=\"number\">8</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> span = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;computedTextWidth&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!span) &#123;</span><br><span class=\"line\">        span = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;span&#x27;</span>);</span><br><span class=\"line\">        span.id = <span class=\"string\">&#x27;computedTextWidth&#x27;</span>;</span><br><span class=\"line\">        span.style.cssText = <span class=\"string\">&#x27;visibility:hidden;position: absolute;left: -999em;top:-999em;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(span);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    span.style.fontSize = <span class=\"string\">`<span class=\"subst\">$&#123;fontSize&#125;</span>px`</span>;</span><br><span class=\"line\">    span.innerHTML = overflowFlag &amp;&amp; _.isString(text) &amp;&amp; text.length &gt; overflowLength ? <span class=\"string\">`<span class=\"subst\">$&#123;text.slice(<span class=\"number\">0</span>, overflowLength)&#125;</span>...`</span> : text;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> span.offsetWidth;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"文本过长换行显示\"><a href=\"#文本过长换行显示\" class=\"headerlink\" title=\"文本过长换行显示\"></a>文本过长换行显示</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 格式化legend 文本过长换行显示</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span>:</span></span><br><span class=\"line\"><span class=\"comment\"> *  params: 文本</span></span><br><span class=\"line\"><span class=\"comment\"> *  provideNumber: 每一行要显示的文本字数</span></span><br><span class=\"line\"><span class=\"comment\"> *  rows: 指定最多显示多少行</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> formatterLegendText = <span class=\"function\">(<span class=\"params\">params, provideNumber = <span class=\"number\">17</span>, rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newParamsName = <span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">// 最终拼接成的字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> paramsNameNumber = params.length;<span class=\"comment\">// 实际文本字符的个数</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> maxRows = <span class=\"built_in\">Math</span>.ceil(paramsNameNumber / provideNumber);<span class=\"comment\">// 换行的话，需要显示几行，向上取整;</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> rowNumber = rows || maxRows;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 条件等同于rowNumber&gt;1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (paramsNameNumber &gt; provideNumber) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> p = <span class=\"number\">0</span>; p &lt; rowNumber; p += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> tempStr = <span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">// 表示每一次截取的字符串</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> start = p * provideNumber;<span class=\"comment\">// 开始截取的位置</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> end = start + provideNumber;<span class=\"comment\">// 结束截取的位置</span></span><br><span class=\"line\">            <span class=\"comment\">// 此处特殊处理最后一行的索引值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p == rowNumber - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 最后一次不换行</span></span><br><span class=\"line\">                tempStr = params.substring(start, paramsNameNumber);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 每一次拼接字符串并换行</span></span><br><span class=\"line\">                tempStr = params.substring(start, end) + <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            newParamsName += tempStr;<span class=\"comment\">// 最终拼成的字符串</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 将旧标签的值赋给新标签</span></span><br><span class=\"line\">        newParamsName = params;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 如果指定了最大显示行数，并别比实际计算的最大行数小，则后续文本内容省略显示</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rows &amp;&amp; rows &lt; maxRows) &#123;</span><br><span class=\"line\">        newParamsName += <span class=\"string\">&#x27;...&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//将最终的字符串返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> newParamsName;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"生成-uuid\"><a href=\"#生成-uuid\" class=\"headerlink\" title=\"生成 uuid\"></a>生成 <code>uuid</code></h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 生成uuid</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> generateUUID = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> temp_url = URL.createObjectURL(<span class=\"keyword\">new</span> Blob());</span><br><span class=\"line\">    <span class=\"keyword\">const</span> uuid = temp_url.toString();</span><br><span class=\"line\">    URL.revokeObjectURL(temp_url);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> uuid.substr(uuid.lastIndexOf(<span class=\"string\">&quot;/&quot;</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"格式化统计数值\"><a href=\"#格式化统计数值\" class=\"headerlink\" title=\"格式化统计数值\"></a>格式化统计数值</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 格式化统计数值</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Number&#125;</span> </span>count 统计数值</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Number&#125;</span> </span>toFixed 小数点保留位数</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;String[]&#125;</span> </span>units 要格式化的单位</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> formatCount = <span class=\"function\">(<span class=\"params\">&#123;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                count = <span class=\"number\">0</span>,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                toFixed = <span class=\"number\">1</span>,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                units = [<span class=\"string\">&#x27;万&#x27;</span>, <span class=\"string\">&#x27;亿&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                            &#125;=&#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(<span class=\"built_in\">Number</span>(count))) &#123;<span class=\"keyword\">return</span> <span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 1.　计算单位</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> symbols = [<span class=\"string\">&#x27;个&#x27;</span>, <span class=\"string\">&#x27;十&#x27;</span>, <span class=\"string\">&#x27;百&#x27;</span>, <span class=\"string\">&#x27;千&#x27;</span>, <span class=\"string\">&#x27;万&#x27;</span>, <span class=\"string\">&#x27;十万&#x27;</span>, <span class=\"string\">&#x27;百万&#x27;</span>, <span class=\"string\">&#x27;千万&#x27;</span>, <span class=\"string\">&#x27;亿&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> len = count.toString().length;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> unit = symbols</span><br><span class=\"line\">        .slice(<span class=\"number\">0</span>, len)</span><br><span class=\"line\">        .filter(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> units.includes(v))</span><br><span class=\"line\">        .reverse()[<span class=\"number\">0</span>] || <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//　２．计算数值</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> index = symbols.indexOf(unit);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> value = count / <span class=\"built_in\">Math</span>.pow(<span class=\"number\">10</span>, index !== -<span class=\"number\">1</span> ? index : <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ３．格式化</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value.toString().length &gt; value.toFixed(toFixed).toString().length) &#123;</span><br><span class=\"line\">        value = value.toFixed(toFixed);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;　value , unit,  <span class=\"attr\">format</span>: <span class=\"string\">`<span class=\"subst\">$&#123;value&#125;</span> <span class=\"subst\">$&#123;unit&#125;</span>`</span> &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Byte-数值装换\"><a href=\"#Byte-数值装换\" class=\"headerlink\" title=\"Byte 数值装换\"></a>Byte 数值装换</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Byte 数值装换</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Number&#125;</span> </span>bytes 当前 bytes 大小</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> byteFormat = <span class=\"function\">(<span class=\"params\">bytes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(bytes)) &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;0 B&#x27;</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> symbols = [<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;KB&#x27;</span>, <span class=\"string\">&#x27;MB&#x27;</span>, <span class=\"string\">&#x27;GB&#x27;</span>, <span class=\"string\">&#x27;TB&#x27;</span>, <span class=\"string\">&#x27;PB&#x27;</span>, <span class=\"string\">&#x27;EB&#x27;</span>, <span class=\"string\">&#x27;ZB&#x27;</span>, <span class=\"string\">&#x27;YB&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> exp = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.log(bytes)/<span class=\"built_in\">Math</span>.log(<span class=\"number\">2</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (exp &lt; <span class=\"number\">1</span>) &#123;exp = <span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> i = <span class=\"built_in\">Math</span>.floor(exp / <span class=\"number\">10</span>);</span><br><span class=\"line\">    bytes = bytes / <span class=\"built_in\">Math</span>.pow(<span class=\"number\">2</span>, <span class=\"number\">10</span> * i);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bytes.toString().length &gt; bytes.toFixed(<span class=\"number\">2</span>).toString().length) &#123;</span><br><span class=\"line\">        bytes = bytes.toFixed(<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        symbols,                          <span class=\"comment\">// 单位列表</span></span><br><span class=\"line\">        <span class=\"attr\">index</span>: i,                         <span class=\"comment\">// 转换后单位所在列表中的索引</span></span><br><span class=\"line\">        <span class=\"attr\">value</span>: bytes,                     <span class=\"comment\">// 转换后的值</span></span><br><span class=\"line\">        <span class=\"attr\">unit</span>: symbols[i],                 <span class=\"comment\">// 转换后单位</span></span><br><span class=\"line\">        <span class=\"attr\">format</span>: <span class=\"string\">`<span class=\"subst\">$&#123;bytes&#125;</span> <span class=\"subst\">$&#123;symbols[i]&#125;</span>`</span>, <span class=\"comment\">// 格式后的字符串</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"全屏显示\"><a href=\"#全屏显示\" class=\"headerlink\" title=\"全屏显示\"></a>全屏显示</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全屏显示</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>：ele &#123;Element&#125; 指定需要全屏的元素</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fullScreen</span>(<span class=\"params\">ele</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> element = ele || <span class=\"built_in\">document</span>.documentElement;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (element.requestFullscreen) &#123;</span><br><span class=\"line\">        element.requestFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.msRequestFullscreen) &#123;</span><br><span class=\"line\">        element.msRequestFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.mozRequestFullScreen) &#123;</span><br><span class=\"line\">        element.mozRequestFullScreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.webkitRequestFullscreen) &#123;</span><br><span class=\"line\">        element.webkitRequestFullscreen();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//退出全屏</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exitFullscreen</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.exitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.exitFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.msExitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.msExitFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.mozCancelFullScreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.mozCancelFullScreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.webkitExitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.webkitExitFullscreen();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"手动取消请求\"><a href=\"#手动取消请求\" class=\"headerlink\" title=\"手动取消请求\"></a>手动取消请求</h4><ul>\n<li>在 <code>SPA</code> 应用中，当用户切换菜单时，取消前置菜单的所有接口请求<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * fetch手动取消请求</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> abortController = <span class=\"built_in\">window</span>.AbortController &amp;&amp; <span class=\"keyword\">new</span> AbortController();</span><br><span class=\"line\"><span class=\"comment\">// 由于控制器取消请求时,将取消相同信号的所有请求,因此为避免取消请求后的后续请求正常发送,需要重新构建控制器,生成新的信号</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.renewAbortController = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    abortController = <span class=\"built_in\">window</span>.AbortController &amp;&amp; <span class=\"keyword\">new</span> AbortController();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 获取当前控制器实例</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.getAbortController = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> abortController;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 切换菜单时取消前置请求并重新生成控制器</span></span><br><span class=\"line\">childMenuClick = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    getAbortController().abort();</span><br><span class=\"line\">    renewAbortController();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发送请求时,配置控制器信号</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span>(<span class=\"params\">url, options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fetch(url, &#123;...options, <span class=\"attr\">credentials</span>: <span class=\"string\">&#x27;include&#x27;</span>, <span class=\"attr\">signal</span>: getAbortController() &amp;&amp; getAbortController().signal&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"length":186,"excerpt":"","more":"<h4 id=\"将-Json-数据导出为文件\"><a href=\"#将-Json-数据导出为文件\" class=\"headerlink\" title=\"将 Json 数据导出为文件\"></a>将 <code>Json</code> 数据导出为文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> FileSaver <span class=\"keyword\">from</span> <span class=\"string\">&#x27;file-saver&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>data &#123;string&#125; 需要导出的json数据</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>fileName &#123;string&#125; 导出的文件名称</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exportJSON</span>(<span class=\"params\">data, fileName</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> blob = <span class=\"keyword\">new</span> Blob([data], &#123;<span class=\"attr\">type</span>: <span class=\"string\">&quot;text/plain;charset=utf-8&quot;</span>&#125;);</span><br><span class=\"line\">    FileSaver.saveAs(blob, fileName);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数据解压缩\"><a href=\"#数据解压缩\" class=\"headerlink\" title=\"数据解压缩\"></a>数据解压缩</h4><ul>\n<li>如果需要传递给后端接口的数据量过大，可能影响带宽及存储时，可考虑对数据进行压缩后传递</li>\n<li>压缩工具库：<a href=\"http://www.qiutianaimeili.com/html/page/2019/12/bncs8g07hcg.html\">pako</a><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span>:</span></span><br><span class=\"line\"><span class=\"comment\"> *  str: 需要压缩的内容</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zipJson</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = deflate(str, &#123; <span class=\"attr\">to</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">level</span>: <span class=\"number\">8</span> &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data &amp;&amp; Uint8ArrayToString(data);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数据解压缩</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@parasm</span>：</span></span><br><span class=\"line\"><span class=\"comment\"> *  str：通过zipJson方法压缩后的数据</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unZipJson</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> strArr = stringToUint8Array(str);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = inflate(strArr, &#123;</span><br><span class=\"line\">        <span class=\"attr\">to</span>: <span class=\"string\">&#x27;string&#x27;</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 将字符串转换为Uint8Array</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stringToUint8Array</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = str.length; i &lt; j; i += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        arr.push(str.charCodeAt(i));</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> tmpUint8Array = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(arr);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tmpUint8Array;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 将Uint8Array转换为字符串：使用pako压缩后的数据通常为Uint8Array，需要将此类型转换为字符串，传递给后端接口</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Uint8ArrayToString</span>(<span class=\"params\">fileData</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dataString = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; fileData.length; i += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        dataString += <span class=\"built_in\">String</span>.fromCharCode(fileData[i]);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dataString;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"Antd-自定义异步读取文件内容\"><a href=\"#Antd-自定义异步读取文件内容\" class=\"headerlink\" title=\"Antd 自定义异步读取文件内容\"></a><code>Antd</code> 自定义异步读取文件内容</h4><ul>\n<li>配合 <code>Upload</code> 组件异步读取文件内容<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Upload</span><br><span class=\"line\">    showUploadList=&#123;<span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">    maxCount=&#123;<span class=\"number\">1</span>&#125;</span><br><span class=\"line\">    accept=<span class=\"string\">&#x27;.svg,.png,jpg,.PNG,.JPG,.JPEG&#x27;</span></span><br><span class=\"line\">    beforeUpload=&#123;<span class=\"function\">(<span class=\"params\">file</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        readFileAsDataURL(file).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">            addBgImg(<span class=\"built_in\">this</span>.props.getGraph(), res)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;&#125;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">title</span>=<span class=\"string\">&#x27;导入背景图&#x27;</span> <span class=\"attr\">role</span>=<span class=\"string\">&#x27;none&#x27;</span> <span class=\"attr\">type</span>=<span class=\"string\">&#x27;link&#x27;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&#x27;bg-colors&#x27;</span> /&gt;</span></span></span><br><span class=\"line\">&lt;/Upload&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * file：文件</span></span><br><span class=\"line\"><span class=\"comment\"> * return：promise</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readFileAsDataURL</span>(<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> FileReader();</span><br><span class=\"line\">        reader.readAsDataURL(file);</span><br><span class=\"line\">        reader.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">            resolve(event.target.result);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        reader.onerror = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            reject(<span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"计算字符串在浏览器中显示的宽度\"><a href=\"#计算字符串在浏览器中显示的宽度\" class=\"headerlink\" title=\"计算字符串在浏览器中显示的宽度\"></a>计算字符串在浏览器中显示的宽度</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description </span>计算字符串在浏览器中显示的宽度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>text &#123;string&#125; 需要计算的文本</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>fontSize &#123;number&#125; 文本字体大小</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>overflowFlag &#123;boolean&#125; 是否超长省略显示</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>overflowLength &#123;number&#125; 超长省略的文本长度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> computedTextWidth = <span class=\"function\">(<span class=\"params\">text, fontSize = <span class=\"number\">12</span>, overflowFlag, overflowLength = <span class=\"number\">8</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> span = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;computedTextWidth&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!span) &#123;</span><br><span class=\"line\">        span = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;span&#x27;</span>);</span><br><span class=\"line\">        span.id = <span class=\"string\">&#x27;computedTextWidth&#x27;</span>;</span><br><span class=\"line\">        span.style.cssText = <span class=\"string\">&#x27;visibility:hidden;position: absolute;left: -999em;top:-999em;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(span);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    span.style.fontSize = <span class=\"string\">`<span class=\"subst\">$&#123;fontSize&#125;</span>px`</span>;</span><br><span class=\"line\">    span.innerHTML = overflowFlag &amp;&amp; _.isString(text) &amp;&amp; text.length &gt; overflowLength ? <span class=\"string\">`<span class=\"subst\">$&#123;text.slice(<span class=\"number\">0</span>, overflowLength)&#125;</span>...`</span> : text;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> span.offsetWidth;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"文本过长换行显示\"><a href=\"#文本过长换行显示\" class=\"headerlink\" title=\"文本过长换行显示\"></a>文本过长换行显示</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 格式化legend 文本过长换行显示</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span>:</span></span><br><span class=\"line\"><span class=\"comment\"> *  params: 文本</span></span><br><span class=\"line\"><span class=\"comment\"> *  provideNumber: 每一行要显示的文本字数</span></span><br><span class=\"line\"><span class=\"comment\"> *  rows: 指定最多显示多少行</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> formatterLegendText = <span class=\"function\">(<span class=\"params\">params, provideNumber = <span class=\"number\">17</span>, rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newParamsName = <span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">// 最终拼接成的字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> paramsNameNumber = params.length;<span class=\"comment\">// 实际文本字符的个数</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> maxRows = <span class=\"built_in\">Math</span>.ceil(paramsNameNumber / provideNumber);<span class=\"comment\">// 换行的话，需要显示几行，向上取整;</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> rowNumber = rows || maxRows;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 条件等同于rowNumber&gt;1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (paramsNameNumber &gt; provideNumber) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> p = <span class=\"number\">0</span>; p &lt; rowNumber; p += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> tempStr = <span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">// 表示每一次截取的字符串</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> start = p * provideNumber;<span class=\"comment\">// 开始截取的位置</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> end = start + provideNumber;<span class=\"comment\">// 结束截取的位置</span></span><br><span class=\"line\">            <span class=\"comment\">// 此处特殊处理最后一行的索引值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p == rowNumber - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 最后一次不换行</span></span><br><span class=\"line\">                tempStr = params.substring(start, paramsNameNumber);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 每一次拼接字符串并换行</span></span><br><span class=\"line\">                tempStr = params.substring(start, end) + <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            newParamsName += tempStr;<span class=\"comment\">// 最终拼成的字符串</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 将旧标签的值赋给新标签</span></span><br><span class=\"line\">        newParamsName = params;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 如果指定了最大显示行数，并别比实际计算的最大行数小，则后续文本内容省略显示</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (rows &amp;&amp; rows &lt; maxRows) &#123;</span><br><span class=\"line\">        newParamsName += <span class=\"string\">&#x27;...&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//将最终的字符串返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> newParamsName;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"生成-uuid\"><a href=\"#生成-uuid\" class=\"headerlink\" title=\"生成 uuid\"></a>生成 <code>uuid</code></h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 生成uuid</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> generateUUID = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> temp_url = URL.createObjectURL(<span class=\"keyword\">new</span> Blob());</span><br><span class=\"line\">    <span class=\"keyword\">const</span> uuid = temp_url.toString();</span><br><span class=\"line\">    URL.revokeObjectURL(temp_url);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> uuid.substr(uuid.lastIndexOf(<span class=\"string\">&quot;/&quot;</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"格式化统计数值\"><a href=\"#格式化统计数值\" class=\"headerlink\" title=\"格式化统计数值\"></a>格式化统计数值</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 格式化统计数值</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Number&#125;</span> </span>count 统计数值</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Number&#125;</span> </span>toFixed 小数点保留位数</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;String[]&#125;</span> </span>units 要格式化的单位</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> formatCount = <span class=\"function\">(<span class=\"params\">&#123;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                count = <span class=\"number\">0</span>,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                toFixed = <span class=\"number\">1</span>,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                units = [<span class=\"string\">&#x27;万&#x27;</span>, <span class=\"string\">&#x27;亿&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                            &#125;=&#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(<span class=\"built_in\">Number</span>(count))) &#123;<span class=\"keyword\">return</span> <span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 1.　计算单位</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> symbols = [<span class=\"string\">&#x27;个&#x27;</span>, <span class=\"string\">&#x27;十&#x27;</span>, <span class=\"string\">&#x27;百&#x27;</span>, <span class=\"string\">&#x27;千&#x27;</span>, <span class=\"string\">&#x27;万&#x27;</span>, <span class=\"string\">&#x27;十万&#x27;</span>, <span class=\"string\">&#x27;百万&#x27;</span>, <span class=\"string\">&#x27;千万&#x27;</span>, <span class=\"string\">&#x27;亿&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> len = count.toString().length;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> unit = symbols</span><br><span class=\"line\">        .slice(<span class=\"number\">0</span>, len)</span><br><span class=\"line\">        .filter(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> units.includes(v))</span><br><span class=\"line\">        .reverse()[<span class=\"number\">0</span>] || <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//　２．计算数值</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> index = symbols.indexOf(unit);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> value = count / <span class=\"built_in\">Math</span>.pow(<span class=\"number\">10</span>, index !== -<span class=\"number\">1</span> ? index : <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ３．格式化</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value.toString().length &gt; value.toFixed(toFixed).toString().length) &#123;</span><br><span class=\"line\">        value = value.toFixed(toFixed);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;　value , unit,  <span class=\"attr\">format</span>: <span class=\"string\">`<span class=\"subst\">$&#123;value&#125;</span> <span class=\"subst\">$&#123;unit&#125;</span>`</span> &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Byte-数值装换\"><a href=\"#Byte-数值装换\" class=\"headerlink\" title=\"Byte 数值装换\"></a>Byte 数值装换</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Byte 数值装换</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Number&#125;</span> </span>bytes 当前 bytes 大小</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> byteFormat = <span class=\"function\">(<span class=\"params\">bytes</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(bytes)) &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;0 B&#x27;</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> symbols = [<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;KB&#x27;</span>, <span class=\"string\">&#x27;MB&#x27;</span>, <span class=\"string\">&#x27;GB&#x27;</span>, <span class=\"string\">&#x27;TB&#x27;</span>, <span class=\"string\">&#x27;PB&#x27;</span>, <span class=\"string\">&#x27;EB&#x27;</span>, <span class=\"string\">&#x27;ZB&#x27;</span>, <span class=\"string\">&#x27;YB&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> exp = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.log(bytes)/<span class=\"built_in\">Math</span>.log(<span class=\"number\">2</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (exp &lt; <span class=\"number\">1</span>) &#123;exp = <span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> i = <span class=\"built_in\">Math</span>.floor(exp / <span class=\"number\">10</span>);</span><br><span class=\"line\">    bytes = bytes / <span class=\"built_in\">Math</span>.pow(<span class=\"number\">2</span>, <span class=\"number\">10</span> * i);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bytes.toString().length &gt; bytes.toFixed(<span class=\"number\">2</span>).toString().length) &#123;</span><br><span class=\"line\">        bytes = bytes.toFixed(<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        symbols,                          <span class=\"comment\">// 单位列表</span></span><br><span class=\"line\">        <span class=\"attr\">index</span>: i,                         <span class=\"comment\">// 转换后单位所在列表中的索引</span></span><br><span class=\"line\">        <span class=\"attr\">value</span>: bytes,                     <span class=\"comment\">// 转换后的值</span></span><br><span class=\"line\">        <span class=\"attr\">unit</span>: symbols[i],                 <span class=\"comment\">// 转换后单位</span></span><br><span class=\"line\">        <span class=\"attr\">format</span>: <span class=\"string\">`<span class=\"subst\">$&#123;bytes&#125;</span> <span class=\"subst\">$&#123;symbols[i]&#125;</span>`</span>, <span class=\"comment\">// 格式后的字符串</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"全屏显示\"><a href=\"#全屏显示\" class=\"headerlink\" title=\"全屏显示\"></a>全屏显示</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全屏显示</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>：ele &#123;Element&#125; 指定需要全屏的元素</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fullScreen</span>(<span class=\"params\">ele</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> element = ele || <span class=\"built_in\">document</span>.documentElement;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (element.requestFullscreen) &#123;</span><br><span class=\"line\">        element.requestFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.msRequestFullscreen) &#123;</span><br><span class=\"line\">        element.msRequestFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.mozRequestFullScreen) &#123;</span><br><span class=\"line\">        element.mozRequestFullScreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.webkitRequestFullscreen) &#123;</span><br><span class=\"line\">        element.webkitRequestFullscreen();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//退出全屏</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exitFullscreen</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.exitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.exitFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.msExitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.msExitFullscreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.mozCancelFullScreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.mozCancelFullScreen();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.webkitExitFullscreen) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.webkitExitFullscreen();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"手动取消请求\"><a href=\"#手动取消请求\" class=\"headerlink\" title=\"手动取消请求\"></a>手动取消请求</h4><ul>\n<li>在 <code>SPA</code> 应用中，当用户切换菜单时，取消前置菜单的所有接口请求<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * fetch手动取消请求</span></span><br><span class=\"line\"><span class=\"comment\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> abortController = <span class=\"built_in\">window</span>.AbortController &amp;&amp; <span class=\"keyword\">new</span> AbortController();</span><br><span class=\"line\"><span class=\"comment\">// 由于控制器取消请求时,将取消相同信号的所有请求,因此为避免取消请求后的后续请求正常发送,需要重新构建控制器,生成新的信号</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.renewAbortController = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    abortController = <span class=\"built_in\">window</span>.AbortController &amp;&amp; <span class=\"keyword\">new</span> AbortController();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 获取当前控制器实例</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.getAbortController = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> abortController;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 切换菜单时取消前置请求并重新生成控制器</span></span><br><span class=\"line\">childMenuClick = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    getAbortController().abort();</span><br><span class=\"line\">    renewAbortController();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发送请求时,配置控制器信号</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span>(<span class=\"params\">url, options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fetch(url, &#123;...options, <span class=\"attr\">credentials</span>: <span class=\"string\">&#x27;include&#x27;</span>, <span class=\"attr\">signal</span>: getAbortController() &amp;&amp; getAbortController().signal&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"JavaScript 正则收录","date":"2022-02-13T02:58:35.000Z","_content":"```javascript\n/*端口验证*/\nexport const port_reg = /^([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/;\n\n/*ip验证*/\nexport const ip_reg = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/;\n\n// ip:端口\nexport const ipAndPort_reg = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5]):([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/;\n\n// 联系方式(手机、座机)\nexport const phone = /^((([0-9]{3,4}-)?[0-9]{7,8})|(0?1[3|4|5|8][0-9]\\d{8}))$/;\n\n// URL\nexport const urlReg = /^\\/([/w]+\\/?)+$/;\n\n// export  const  pathReg=/(^(\\/{1})$)|(^(\\/[a-zA-Z0-9_<>\":;|,\\!\\.\\*\\\\?-]+)+)$/;\nexport const pathReg = /^(\\/[a-z0-9_\\\\.-]+)+$/;\n\n// export const portSegment_reg = /^(([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])\\:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])){1}$/;\n\nexport const forbidIp = /((?:(?:22[4-9]\\.)|(?:23[0-9]\\.))(?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.)){2}(?:(?:1[0-9][0-9])|(?:2[0-4][0-9])|(?:25[0-5])|(?:[1-9][0-9])|(?:[0-9])))|((?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.)){3}(255|0))|(127\\.(?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.)){2}(?:(?:1[0-9][0-9])|(?:2[0-4][0-9])|(?:25[0-5])|(?:[1-9][0-9])|(?:[0-9])))/;\n\nexport const maskReg = /^(?=(\\d+\\.){3}\\d+$)(255\\.){0,3}(255|254|252|248|240|224|192|128|0)(\\.0){0,3}$/;\n\nexport const forbiddenText = /^(?!_)(?!.*?_$)[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/;\n\n//密码 必须包含 数字,字母,符号 3项组合的6到20位字符串\nexport const passWord = /^(?:(?=.*[0-9].*)(?=.*[A-Za-z].*)(?=.*[\\W].*))[\\W0-9A-Za-z]{6,20}$/;\n\n// 身份证号\nexport const idCard_reg = /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/;\n// 邮箱\nexport const email_reg = /^[a-z]([a-z0-9]*[-_]?[a-z0-9]+)*@([a-z0-9]*[-_]?[a-z0-9]+)+[\\.][a-z]{2,3}([\\.][a-z]{2})?$/i;\n// 办公室电话\nexport const office_call = /^(([0-9]{3,4}-)?[0-9]{7,8})$/;\n// 联系方式(手机)\nexport const phone_number_reg = /^(0?1[3|4|5|8][0-9]\\d{8})$/;\n```","source":"_posts/JavaScript-正则收录.md","raw":"---\ntitle: JavaScript 正则收录\ndate: 2022-02-13 10:58:35\ntags: [JavaScript, 正则]\ncategories: [JavaScript, 正则]\n---\n```javascript\n/*端口验证*/\nexport const port_reg = /^([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/;\n\n/*ip验证*/\nexport const ip_reg = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/;\n\n// ip:端口\nexport const ipAndPort_reg = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5]):([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/;\n\n// 联系方式(手机、座机)\nexport const phone = /^((([0-9]{3,4}-)?[0-9]{7,8})|(0?1[3|4|5|8][0-9]\\d{8}))$/;\n\n// URL\nexport const urlReg = /^\\/([/w]+\\/?)+$/;\n\n// export  const  pathReg=/(^(\\/{1})$)|(^(\\/[a-zA-Z0-9_<>\":;|,\\!\\.\\*\\\\?-]+)+)$/;\nexport const pathReg = /^(\\/[a-z0-9_\\\\.-]+)+$/;\n\n// export const portSegment_reg = /^(([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])\\:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])){1}$/;\n\nexport const forbidIp = /((?:(?:22[4-9]\\.)|(?:23[0-9]\\.))(?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.)){2}(?:(?:1[0-9][0-9])|(?:2[0-4][0-9])|(?:25[0-5])|(?:[1-9][0-9])|(?:[0-9])))|((?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.)){3}(255|0))|(127\\.(?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.)){2}(?:(?:1[0-9][0-9])|(?:2[0-4][0-9])|(?:25[0-5])|(?:[1-9][0-9])|(?:[0-9])))/;\n\nexport const maskReg = /^(?=(\\d+\\.){3}\\d+$)(255\\.){0,3}(255|254|252|248|240|224|192|128|0)(\\.0){0,3}$/;\n\nexport const forbiddenText = /^(?!_)(?!.*?_$)[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/;\n\n//密码 必须包含 数字,字母,符号 3项组合的6到20位字符串\nexport const passWord = /^(?:(?=.*[0-9].*)(?=.*[A-Za-z].*)(?=.*[\\W].*))[\\W0-9A-Za-z]{6,20}$/;\n\n// 身份证号\nexport const idCard_reg = /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/;\n// 邮箱\nexport const email_reg = /^[a-z]([a-z0-9]*[-_]?[a-z0-9]+)*@([a-z0-9]*[-_]?[a-z0-9]+)+[\\.][a-z]{2,3}([\\.][a-z]{2})?$/i;\n// 办公室电话\nexport const office_call = /^(([0-9]{3,4}-)?[0-9]{7,8})$/;\n// 联系方式(手机)\nexport const phone_number_reg = /^(0?1[3|4|5|8][0-9]\\d{8})$/;\n```","slug":"JavaScript-正则收录","published":1,"updated":"2022-02-13T05:13:42.112Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbk000eokpc9ne4dpnp","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*端口验证*/</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> port_reg = <span class=\"regexp\">/^([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5])$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*ip验证*/</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> ip_reg = <span class=\"regexp\">/^(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ip:端口</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> ipAndPort_reg = <span class=\"regexp\">/^(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5]):([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5])$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 联系方式(手机、座机)</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> phone = <span class=\"regexp\">/^((([0-9]&#123;3,4&#125;-)?[0-9]&#123;7,8&#125;)|(0?1[3|4|5|8][0-9]\\d&#123;8&#125;))$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// URL</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> urlReg = <span class=\"regexp\">/^\\/([/w]+\\/?)+$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// export  const  pathReg=/(^(\\/&#123;1&#125;)$)|(^(\\/[a-zA-Z0-9_&lt;&gt;&quot;:;|,\\!\\.\\*\\\\?-]+)+)$/;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> pathReg = <span class=\"regexp\">/^(\\/[a-z0-9_\\\\.-]+)+$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// export const portSegment_reg = /^(([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5])\\:([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5]))&#123;1&#125;$/;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> forbidIp = <span class=\"regexp\">/((?:(?:22[4-9]\\.)|(?:23[0-9]\\.))(?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.))&#123;2&#125;(?:(?:1[0-9][0-9])|(?:2[0-4][0-9])|(?:25[0-5])|(?:[1-9][0-9])|(?:[0-9])))|((?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.))&#123;3&#125;(255|0))|(127\\.(?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.))&#123;2&#125;(?:(?:1[0-9][0-9])|(?:2[0-4][0-9])|(?:25[0-5])|(?:[1-9][0-9])|(?:[0-9])))/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> maskReg = <span class=\"regexp\">/^(?=(\\d+\\.)&#123;3&#125;\\d+$)(255\\.)&#123;0,3&#125;(255|254|252|248|240|224|192|128|0)(\\.0)&#123;0,3&#125;$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> forbiddenText = <span class=\"regexp\">/^(?!_)(?!.*?_$)[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//密码 必须包含 数字,字母,符号 3项组合的6到20位字符串</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> passWord = <span class=\"regexp\">/^(?:(?=.*[0-9].*)(?=.*[A-Za-z].*)(?=.*[\\W].*))[\\W0-9A-Za-z]&#123;6,20&#125;$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 身份证号</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> idCard_reg = <span class=\"regexp\">/(^\\d&#123;15&#125;$)|(^\\d&#123;17&#125;([0-9]|X)$)/</span>;</span><br><span class=\"line\"><span class=\"comment\">// 邮箱</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> email_reg = <span class=\"regexp\">/^[a-z]([a-z0-9]*[-_]?[a-z0-9]+)*@([a-z0-9]*[-_]?[a-z0-9]+)+[\\.][a-z]&#123;2,3&#125;([\\.][a-z]&#123;2&#125;)?$/i</span>;</span><br><span class=\"line\"><span class=\"comment\">// 办公室电话</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> office_call = <span class=\"regexp\">/^(([0-9]&#123;3,4&#125;-)?[0-9]&#123;7,8&#125;)$/</span>;</span><br><span class=\"line\"><span class=\"comment\">// 联系方式(手机)</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> phone_number_reg = <span class=\"regexp\">/^(0?1[3|4|5|8][0-9]\\d&#123;8&#125;)$/</span>;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":0,"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*端口验证*/</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> port_reg = <span class=\"regexp\">/^([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5])$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*ip验证*/</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> ip_reg = <span class=\"regexp\">/^(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ip:端口</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> ipAndPort_reg = <span class=\"regexp\">/^(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5]):([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5])$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 联系方式(手机、座机)</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> phone = <span class=\"regexp\">/^((([0-9]&#123;3,4&#125;-)?[0-9]&#123;7,8&#125;)|(0?1[3|4|5|8][0-9]\\d&#123;8&#125;))$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// URL</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> urlReg = <span class=\"regexp\">/^\\/([/w]+\\/?)+$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// export  const  pathReg=/(^(\\/&#123;1&#125;)$)|(^(\\/[a-zA-Z0-9_&lt;&gt;&quot;:;|,\\!\\.\\*\\\\?-]+)+)$/;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> pathReg = <span class=\"regexp\">/^(\\/[a-z0-9_\\\\.-]+)+$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// export const portSegment_reg = /^(([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5])\\:([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5]))&#123;1&#125;$/;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> forbidIp = <span class=\"regexp\">/((?:(?:22[4-9]\\.)|(?:23[0-9]\\.))(?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.))&#123;2&#125;(?:(?:1[0-9][0-9])|(?:2[0-4][0-9])|(?:25[0-5])|(?:[1-9][0-9])|(?:[0-9])))|((?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.))&#123;3&#125;(255|0))|(127\\.(?:(?:1[0-9][0-9]\\.)|(?:2[0-4][0-9]\\.)|(?:25[0-5]\\.)|(?:[1-9][0-9]\\.)|(?:[0-9]\\.))&#123;2&#125;(?:(?:1[0-9][0-9])|(?:2[0-4][0-9])|(?:25[0-5])|(?:[1-9][0-9])|(?:[0-9])))/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> maskReg = <span class=\"regexp\">/^(?=(\\d+\\.)&#123;3&#125;\\d+$)(255\\.)&#123;0,3&#125;(255|254|252|248|240|224|192|128|0)(\\.0)&#123;0,3&#125;$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> forbiddenText = <span class=\"regexp\">/^(?!_)(?!.*?_$)[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//密码 必须包含 数字,字母,符号 3项组合的6到20位字符串</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> passWord = <span class=\"regexp\">/^(?:(?=.*[0-9].*)(?=.*[A-Za-z].*)(?=.*[\\W].*))[\\W0-9A-Za-z]&#123;6,20&#125;$/</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 身份证号</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> idCard_reg = <span class=\"regexp\">/(^\\d&#123;15&#125;$)|(^\\d&#123;17&#125;([0-9]|X)$)/</span>;</span><br><span class=\"line\"><span class=\"comment\">// 邮箱</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> email_reg = <span class=\"regexp\">/^[a-z]([a-z0-9]*[-_]?[a-z0-9]+)*@([a-z0-9]*[-_]?[a-z0-9]+)+[\\.][a-z]&#123;2,3&#125;([\\.][a-z]&#123;2&#125;)?$/i</span>;</span><br><span class=\"line\"><span class=\"comment\">// 办公室电话</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> office_call = <span class=\"regexp\">/^(([0-9]&#123;3,4&#125;-)?[0-9]&#123;7,8&#125;)$/</span>;</span><br><span class=\"line\"><span class=\"comment\">// 联系方式(手机)</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> phone_number_reg = <span class=\"regexp\">/^(0?1[3|4|5|8][0-9]\\d&#123;8&#125;)$/</span>;</span><br></pre></td></tr></table></figure>"},{"title":"Markdown using document","date":"2022-01-05T05:35:07.000Z","_content":"# [基本语法](https://markdown.com.cn/basic-syntax/ \"官方文档\")\n### 标题\n#### 1、一个 '#' 表示一级标题，两个表示二级标题，依此类推，对应 h1 ~ h6\n### 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n***\n### 段落\n#### 1、直接使用空白行来标记行分割\ncontent1\n\ncontent2\n***\n### 换行\n#### 1、在内容末尾使用br，可创建换行\n`例子：在内容末尾使用br，可创<br />建换行`<br />\n例子：在内容末尾使用br，可创<br />建换行\n***\n### 强调\n#### 1、在需要强调的内容前后使用两个星号进行标记\n`这段文字中，地名是需要强调的，如：**北京**是个美丽的城市，**杭州**也是`<br />\n这段文字中，地名是需要强调的，如：**北京**是个美丽的城市，**杭州**也是\n***\n### 引用\n#### 1、块引用：使用 '>' 符号，多行引用，使用空 '>' 隔开\n> import\n> \n> import\n#### 2、嵌套引用：后面多一个 '>'，表示被嵌套，如 '>>'\n> first\n>> second\n#### 3、包含其他Markdown语法的引用\n> content\n> \n> - list\n> \n> *Everything* is going ware;\n***\n### 列表\n#### 1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效\n1. 第一行\n2. 第二行\n\n#### 2、无序列表：使用连字符 '-'。子级列表，使用两个空格递进表示层级。\n- 第一行\n- 第二行\n  - 子行\n***\n### 代码\n#### 1、代码块使用反引号包裹 ``\n`这里面的是代码块内容，里层再次使用反引号，可识别Markdown语法，如``<br />`` `<br />` 标签就是被识别的效果`\n***\n### 分割线\n#### 1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）\n***\n### 链接\n#### 1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title\n`[这是一个链接](https://www.baidu.com \"这是一个百度地址\")`<br />\n[这是一个链接](https://www.baidu.com \"这是一个百度地址\")\n#### 2、带格式化的链接\n`这是一个 **[百度](https://www.baidu.com \"这是一个百度地址\")** 链接`<br />\n这是一个 **[百度](https://www.baidu.com \"这是一个百度地址\")** 链接\n***\n### 图片\n#### 1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性\n`![这是图片](/assets/img/philly-magic-garden.jpg \"Magic Gardens\")`\n![这是图片](https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png \"Animate\")\n#### 2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址\n`[![这是图片](https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png \"Animate\")](https://en.wikipedia.org/wiki/File:Future_Splash_Animator_icon.png)`\n[![这是图片](https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png \"Animate\")](https://en.wikipedia.org/wiki/File:Future_Splash_Animator_icon.png)\n***\n### 转义符\n***\n### 内嵌 HTML 标签\n#### 1、自定义样式\n`使用样式自定义<span style=\"color: rgb(255,3,255);margin: 0 5px;\">标签</span>样式`\n\n使用样式自定义<span style=\"color: rgb(255,3,255);margin: 0 5px;\">标签</span>样式\n# [扩展语法](https://markdown.com.cn/extended-syntax/ \"官方文档\")\n### <span id=\"extend-table\">表格</span>\n#### 1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题\n`| syntax | description | `<br />`\n| --- | --- | `<br />`\n| header | title | `<br />`\n| name | value | `<br />`\n| name | value |`\n\n| syntax | description |\n| --- | --- |\n| header | title |\n| name | value |\n| name | value |\n#### 2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中\n`| syntax | description | other | `<br />`\n| :--- | :---: | ---: | `<br />`\n| 1 | title | 1 | `<br />`\n| 1 | value | 1 | `<br />`\n| 1 | value | 1 |`\n\n| syntax | description | other |\n| :--- | :---: | ---: |\n| 1 | title | 1 |\n| 1 | value | 1 |\n| 1 | value | 1 |\n### 围栏代码块\n#### 1、使用三个反引号```包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行\n```\n{\n  \"key\": 1,\n  \"name\": \"test\",\n  \"value\": 2\n}\n```\n`{\n  \"key\": 1,\n  \"name\": \"test\",\n  \"value\": 2\n}`\n#### 2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等\n- `json：`\n```json\n{\n  \"key\": 1,\n  \"name\": \"test\",\n  \"value\": 2\n}\n```\n- `bash：`\n```bash\n$ midkr test\n```\n- `javascript：`\n```javascript\nconst a = 'test';\nconsole.log(a);\n```\n\n### 脚注\n#### 1、方括号内，使用上标符号接其他标识符\n这里面的内容包含[^1]脚注。\n\n[^1]: this is a\n### 标题ID和锚点\n#### 1、标题内容使用内嵌html标签的形式提供id\n`### <span id=\"extend-table\">表格</span>`\n#### 2、使用中括号包含描点文本内容，后接小括号提供id\n`[跳至表格](#extend-table)`\n<br />\n[跳至表格](#extend-table)\n### 删除线\n#### 1、使用双波浪号~~\n`~~内容删除~~`<br />\n~~内容删除~~\n### 任务列表语法\n#### 1、使用 -/*/+ 和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格\n```\n- [x] 起床\n* [ ] 洗漱\n+ [ ] 吃早餐\n```\n\n- [x] 起床\n* [ ] 洗漱\n+ [ ] 吃早餐\n\n### [使用emoji表情](https://emojipedia.org/)\n```\n- 🏜️ 第一次使用表情\n- 🎄 圣诞树\n```\n# 其他\n#### 中文段落缩进两个字符,使用`&ensp;`；\n`&ensp;&ensp;这是一段缩进两个字符的文本`<br />\n&ensp;&ensp;这是一段缩进两个字符的文本\n#### 站内博文间跳转\n- 相对路径\n  - 在站点的根配置文件中，```permalink```参数指定了博文的生成格式：```permalink: :year/:month/:day/:title/```，因此在是使用相对路径时，需要根据日期递归到根目录再寻址到需要跳转的博文路径：<br />\n  ```bash\n  [Markdown站内手册](../../../../2022/01/05/Markdown-using-document)```\n- 绝对路径\n  - 同样根据博文的生成格式，将博文从根路径开始，将绝对路径表示出来：\n  ```bash\n  [Markdown站内手册](/2022/01/05/Markdown-using-document)\n  ```\n- post_link\n  - 待研究","source":"_posts/Markdown-using-document.md","raw":"---\ntitle: Markdown using document\ndate: 2022-01-05 13:35:07\ntags: \n- Markdown\n- handbook\ncategories:\n- handbook\n- Markdown\n---\n# [基本语法](https://markdown.com.cn/basic-syntax/ \"官方文档\")\n### 标题\n#### 1、一个 '#' 表示一级标题，两个表示二级标题，依此类推，对应 h1 ~ h6\n### 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n***\n### 段落\n#### 1、直接使用空白行来标记行分割\ncontent1\n\ncontent2\n***\n### 换行\n#### 1、在内容末尾使用br，可创建换行\n`例子：在内容末尾使用br，可创<br />建换行`<br />\n例子：在内容末尾使用br，可创<br />建换行\n***\n### 强调\n#### 1、在需要强调的内容前后使用两个星号进行标记\n`这段文字中，地名是需要强调的，如：**北京**是个美丽的城市，**杭州**也是`<br />\n这段文字中，地名是需要强调的，如：**北京**是个美丽的城市，**杭州**也是\n***\n### 引用\n#### 1、块引用：使用 '>' 符号，多行引用，使用空 '>' 隔开\n> import\n> \n> import\n#### 2、嵌套引用：后面多一个 '>'，表示被嵌套，如 '>>'\n> first\n>> second\n#### 3、包含其他Markdown语法的引用\n> content\n> \n> - list\n> \n> *Everything* is going ware;\n***\n### 列表\n#### 1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效\n1. 第一行\n2. 第二行\n\n#### 2、无序列表：使用连字符 '-'。子级列表，使用两个空格递进表示层级。\n- 第一行\n- 第二行\n  - 子行\n***\n### 代码\n#### 1、代码块使用反引号包裹 ``\n`这里面的是代码块内容，里层再次使用反引号，可识别Markdown语法，如``<br />`` `<br />` 标签就是被识别的效果`\n***\n### 分割线\n#### 1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）\n***\n### 链接\n#### 1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title\n`[这是一个链接](https://www.baidu.com \"这是一个百度地址\")`<br />\n[这是一个链接](https://www.baidu.com \"这是一个百度地址\")\n#### 2、带格式化的链接\n`这是一个 **[百度](https://www.baidu.com \"这是一个百度地址\")** 链接`<br />\n这是一个 **[百度](https://www.baidu.com \"这是一个百度地址\")** 链接\n***\n### 图片\n#### 1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性\n`![这是图片](/assets/img/philly-magic-garden.jpg \"Magic Gardens\")`\n![这是图片](https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png \"Animate\")\n#### 2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址\n`[![这是图片](https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png \"Animate\")](https://en.wikipedia.org/wiki/File:Future_Splash_Animator_icon.png)`\n[![这是图片](https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png \"Animate\")](https://en.wikipedia.org/wiki/File:Future_Splash_Animator_icon.png)\n***\n### 转义符\n***\n### 内嵌 HTML 标签\n#### 1、自定义样式\n`使用样式自定义<span style=\"color: rgb(255,3,255);margin: 0 5px;\">标签</span>样式`\n\n使用样式自定义<span style=\"color: rgb(255,3,255);margin: 0 5px;\">标签</span>样式\n# [扩展语法](https://markdown.com.cn/extended-syntax/ \"官方文档\")\n### <span id=\"extend-table\">表格</span>\n#### 1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题\n`| syntax | description | `<br />`\n| --- | --- | `<br />`\n| header | title | `<br />`\n| name | value | `<br />`\n| name | value |`\n\n| syntax | description |\n| --- | --- |\n| header | title |\n| name | value |\n| name | value |\n#### 2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中\n`| syntax | description | other | `<br />`\n| :--- | :---: | ---: | `<br />`\n| 1 | title | 1 | `<br />`\n| 1 | value | 1 | `<br />`\n| 1 | value | 1 |`\n\n| syntax | description | other |\n| :--- | :---: | ---: |\n| 1 | title | 1 |\n| 1 | value | 1 |\n| 1 | value | 1 |\n### 围栏代码块\n#### 1、使用三个反引号```包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行\n```\n{\n  \"key\": 1,\n  \"name\": \"test\",\n  \"value\": 2\n}\n```\n`{\n  \"key\": 1,\n  \"name\": \"test\",\n  \"value\": 2\n}`\n#### 2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等\n- `json：`\n```json\n{\n  \"key\": 1,\n  \"name\": \"test\",\n  \"value\": 2\n}\n```\n- `bash：`\n```bash\n$ midkr test\n```\n- `javascript：`\n```javascript\nconst a = 'test';\nconsole.log(a);\n```\n\n### 脚注\n#### 1、方括号内，使用上标符号接其他标识符\n这里面的内容包含[^1]脚注。\n\n[^1]: this is a\n### 标题ID和锚点\n#### 1、标题内容使用内嵌html标签的形式提供id\n`### <span id=\"extend-table\">表格</span>`\n#### 2、使用中括号包含描点文本内容，后接小括号提供id\n`[跳至表格](#extend-table)`\n<br />\n[跳至表格](#extend-table)\n### 删除线\n#### 1、使用双波浪号~~\n`~~内容删除~~`<br />\n~~内容删除~~\n### 任务列表语法\n#### 1、使用 -/*/+ 和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格\n```\n- [x] 起床\n* [ ] 洗漱\n+ [ ] 吃早餐\n```\n\n- [x] 起床\n* [ ] 洗漱\n+ [ ] 吃早餐\n\n### [使用emoji表情](https://emojipedia.org/)\n```\n- 🏜️ 第一次使用表情\n- 🎄 圣诞树\n```\n# 其他\n#### 中文段落缩进两个字符,使用`&ensp;`；\n`&ensp;&ensp;这是一段缩进两个字符的文本`<br />\n&ensp;&ensp;这是一段缩进两个字符的文本\n#### 站内博文间跳转\n- 相对路径\n  - 在站点的根配置文件中，```permalink```参数指定了博文的生成格式：```permalink: :year/:month/:day/:title/```，因此在是使用相对路径时，需要根据日期递归到根目录再寻址到需要跳转的博文路径：<br />\n  ```bash\n  [Markdown站内手册](../../../../2022/01/05/Markdown-using-document)```\n- 绝对路径\n  - 同样根据博文的生成格式，将博文从根路径开始，将绝对路径表示出来：\n  ```bash\n  [Markdown站内手册](/2022/01/05/Markdown-using-document)\n  ```\n- post_link\n  - 待研究","slug":"Markdown-using-document","published":1,"updated":"2022-01-10T06:25:39.378Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbl000iokpc0ssf6w7s","content":"<h1 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a><a href=\"https://markdown.com.cn/basic-syntax/\" title=\"官方文档\">基本语法</a></h1><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><h4 id=\"1、一个-‘-’-表示一级标题，两个表示二级标题，依此类推，对应-h1-h6\"><a href=\"#1、一个-‘-’-表示一级标题，两个表示二级标题，依此类推，对应-h1-h6\" class=\"headerlink\" title=\"1、一个 ‘#’ 表示一级标题，两个表示二级标题，依此类推，对应 h1 ~ h6\"></a>1、一个 ‘#’ 表示一级标题，两个表示二级标题，依此类推，对应 h1 ~ h6</h4><h3 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h3><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><hr>\n<h3 id=\"段落\"><a href=\"#段落\" class=\"headerlink\" title=\"段落\"></a>段落</h3><h4 id=\"1、直接使用空白行来标记行分割\"><a href=\"#1、直接使用空白行来标记行分割\" class=\"headerlink\" title=\"1、直接使用空白行来标记行分割\"></a>1、直接使用空白行来标记行分割</h4><p>content1</p>\n<p>content2</p>\n<hr>\n<h3 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h3><h4 id=\"1、在内容末尾使用br，可创建换行\"><a href=\"#1、在内容末尾使用br，可创建换行\" class=\"headerlink\" title=\"1、在内容末尾使用br，可创建换行\"></a>1、在内容末尾使用br，可创建换行</h4><p><code>例子：在内容末尾使用br，可创&lt;br /&gt;建换行</code><br /><br>例子：在内容末尾使用br，可创<br />建换行</p>\n<hr>\n<h3 id=\"强调\"><a href=\"#强调\" class=\"headerlink\" title=\"强调\"></a>强调</h3><h4 id=\"1、在需要强调的内容前后使用两个星号进行标记\"><a href=\"#1、在需要强调的内容前后使用两个星号进行标记\" class=\"headerlink\" title=\"1、在需要强调的内容前后使用两个星号进行标记\"></a>1、在需要强调的内容前后使用两个星号进行标记</h4><p><code>这段文字中，地名是需要强调的，如：**北京**是个美丽的城市，**杭州**也是</code><br /><br>这段文字中，地名是需要强调的，如：<strong>北京</strong>是个美丽的城市，<strong>杭州</strong>也是</p>\n<hr>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><h4 id=\"1、块引用：使用-‘-gt-’-符号，多行引用，使用空-‘-gt-’-隔开\"><a href=\"#1、块引用：使用-‘-gt-’-符号，多行引用，使用空-‘-gt-’-隔开\" class=\"headerlink\" title=\"1、块引用：使用 ‘&gt;’ 符号，多行引用，使用空 ‘&gt;’ 隔开\"></a>1、块引用：使用 ‘&gt;’ 符号，多行引用，使用空 ‘&gt;’ 隔开</h4><blockquote>\n<p>import</p>\n<p>import</p>\n</blockquote>\n<h4 id=\"2、嵌套引用：后面多一个-‘-gt-’，表示被嵌套，如-‘-gt-gt-’\"><a href=\"#2、嵌套引用：后面多一个-‘-gt-’，表示被嵌套，如-‘-gt-gt-’\" class=\"headerlink\" title=\"2、嵌套引用：后面多一个 ‘&gt;’，表示被嵌套，如 ‘&gt;&gt;’\"></a>2、嵌套引用：后面多一个 ‘&gt;’，表示被嵌套，如 ‘&gt;&gt;’</h4><blockquote>\n<p>first</p>\n<blockquote>\n<p>second</p>\n</blockquote>\n</blockquote>\n<h4 id=\"3、包含其他Markdown语法的引用\"><a href=\"#3、包含其他Markdown语法的引用\" class=\"headerlink\" title=\"3、包含其他Markdown语法的引用\"></a>3、包含其他Markdown语法的引用</h4><blockquote>\n<p>content</p>\n<ul>\n<li>list</li>\n</ul>\n<p><em>Everything</em> is going ware;</p>\n</blockquote>\n<hr>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><h4 id=\"1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效\"><a href=\"#1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效\" class=\"headerlink\" title=\"1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效\"></a>1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效</h4><ol>\n<li>第一行</li>\n<li>第二行</li>\n</ol>\n<h4 id=\"2、无序列表：使用连字符-‘-‘。子级列表，使用两个空格递进表示层级。\"><a href=\"#2、无序列表：使用连字符-‘-‘。子级列表，使用两个空格递进表示层级。\" class=\"headerlink\" title=\"2、无序列表：使用连字符 ‘-‘。子级列表，使用两个空格递进表示层级。\"></a>2、无序列表：使用连字符 ‘-‘。子级列表，使用两个空格递进表示层级。</h4><ul>\n<li>第一行</li>\n<li>第二行<ul>\n<li>子行</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><h4 id=\"1、代码块使用反引号包裹\"><a href=\"#1、代码块使用反引号包裹\" class=\"headerlink\" title=\"1、代码块使用反引号包裹 ``\"></a>1、代码块使用反引号包裹 ``</h4><p><code>这里面的是代码块内容，里层再次使用反引号，可识别Markdown语法，如``&lt;br /&gt;`` </code><br /><code> 标签就是被识别的效果</code></p>\n<hr>\n<h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><h4 id=\"1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）\"><a href=\"#1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）\" class=\"headerlink\" title=\"1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）\"></a>1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）</h4><hr>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><h4 id=\"1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title\"><a href=\"#1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title\" class=\"headerlink\" title=\"1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title\"></a>1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title</h4><p><code>[这是一个链接](https://www.baidu.com &quot;这是一个百度地址&quot;)</code><br /><br><a href=\"https://www.baidu.com/\" title=\"这是一个百度地址\">这是一个链接</a></p>\n<h4 id=\"2、带格式化的链接\"><a href=\"#2、带格式化的链接\" class=\"headerlink\" title=\"2、带格式化的链接\"></a>2、带格式化的链接</h4><p><code>这是一个 **[百度](https://www.baidu.com &quot;这是一个百度地址&quot;)** 链接</code><br /><br>这是一个 <strong><a href=\"https://www.baidu.com/\" title=\"这是一个百度地址\">百度</a></strong> 链接</p>\n<hr>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><h4 id=\"1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性\"><a href=\"#1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性\" class=\"headerlink\" title=\"1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性\"></a>1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性</h4><p><code>![这是图片](/assets/img/philly-magic-garden.jpg &quot;Magic Gardens&quot;)</code><br><img src=\"https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png\" alt=\"这是图片\" title=\"Animate\"></p>\n<h4 id=\"2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址\"><a href=\"#2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址\" class=\"headerlink\" title=\"2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址\"></a>2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址</h4><p><code>[![这是图片](https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png &quot;Animate&quot;)](https://en.wikipedia.org/wiki/File:Future_Splash_Animator_icon.png)</code><br><a href=\"https://en.wikipedia.org/wiki/File:Future_Splash_Animator_icon.png\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png\" alt=\"这是图片\" title=\"Animate\"></a></p>\n<hr>\n<h3 id=\"转义符\"><a href=\"#转义符\" class=\"headerlink\" title=\"转义符\"></a>转义符</h3><hr>\n<h3 id=\"内嵌-HTML-标签\"><a href=\"#内嵌-HTML-标签\" class=\"headerlink\" title=\"内嵌 HTML 标签\"></a>内嵌 HTML 标签</h3><h4 id=\"1、自定义样式\"><a href=\"#1、自定义样式\" class=\"headerlink\" title=\"1、自定义样式\"></a>1、自定义样式</h4><p><code>使用样式自定义&lt;span style=&quot;color: rgb(255,3,255);margin: 0 5px;&quot;&gt;标签&lt;/span&gt;样式</code></p>\n<p>使用样式自定义<span style=\"color: rgb(255,3,255);margin: 0 5px;\">标签</span>样式</p>\n<h1 id=\"扩展语法\"><a href=\"#扩展语法\" class=\"headerlink\" title=\"扩展语法\"></a><a href=\"https://markdown.com.cn/extended-syntax/\" title=\"官方文档\">扩展语法</a></h1><h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a><span id=\"extend-table\">表格</span></h3><h4 id=\"1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题\"><a href=\"#1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题\" class=\"headerlink\" title=\"1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题\"></a>1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题</h4><p><code>| syntax | description | </code><br /><code>| --- | --- |</code><br /><code>| header | title |</code><br /><code>| name | value |</code><br /><code> | name | value |</code></p>\n<table>\n<thead>\n<tr>\n<th>syntax</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>header</td>\n<td>title</td>\n</tr>\n<tr>\n<td>name</td>\n<td>value</td>\n</tr>\n<tr>\n<td>name</td>\n<td>value</td>\n</tr>\n</tbody></table>\n<h4 id=\"2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中\"><a href=\"#2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中\" class=\"headerlink\" title=\"2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中\"></a>2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中</h4><p><code>| syntax | description | other | </code><br /><code>| :--- | :---: | ---: |</code><br /><code>| 1 | title | 1 |</code><br /><code>| 1 | value | 1 |</code><br /><code> | 1 | value | 1 |</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">syntax</th>\n<th align=\"center\">description</th>\n<th align=\"right\">other</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"center\">title</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td align=\"left\">1</td>\n<td align=\"center\">value</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td align=\"left\">1</td>\n<td align=\"center\">value</td>\n<td align=\"right\">1</td>\n</tr>\n</tbody></table>\n<h3 id=\"围栏代码块\"><a href=\"#围栏代码块\" class=\"headerlink\" title=\"围栏代码块\"></a>围栏代码块</h3><h4 id=\"1、使用三个反引号-包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行\"><a href=\"#1、使用三个反引号-包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行\" class=\"headerlink\" title=\"1、使用三个反引号```包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行\"></a>1、使用三个反引号```包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;key&quot;: 1,</span><br><span class=\"line\">  &quot;name&quot;: &quot;test&quot;,</span><br><span class=\"line\">  &quot;value&quot;: 2</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>&#123;   &quot;key&quot;: 1,   &quot;name&quot;: &quot;test&quot;,   &quot;value&quot;: 2 &#125;</code></p>\n<h4 id=\"2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等\"><a href=\"#2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等\" class=\"headerlink\" title=\"2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等\"></a>2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等</h4><ul>\n<li><code>json：</code><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;key&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;test&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;value&quot;</span>: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><code>bash：</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ midkr <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure></li>\n<li><code>javascript：</code><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">&#x27;test&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"脚注\"><a href=\"#脚注\" class=\"headerlink\" title=\"脚注\"></a>脚注</h3><h4 id=\"1、方括号内，使用上标符号接其他标识符\"><a href=\"#1、方括号内，使用上标符号接其他标识符\" class=\"headerlink\" title=\"1、方括号内，使用上标符号接其他标识符\"></a>1、方括号内，使用上标符号接其他标识符</h4><p>这里面的内容包含[^1]脚注。</p>\n<p>[^1]: this is a</p>\n<h3 id=\"标题ID和锚点\"><a href=\"#标题ID和锚点\" class=\"headerlink\" title=\"标题ID和锚点\"></a>标题ID和锚点</h3><h4 id=\"1、标题内容使用内嵌html标签的形式提供id\"><a href=\"#1、标题内容使用内嵌html标签的形式提供id\" class=\"headerlink\" title=\"1、标题内容使用内嵌html标签的形式提供id\"></a>1、标题内容使用内嵌html标签的形式提供id</h4><p><code>### &lt;span id=&quot;extend-table&quot;&gt;表格&lt;/span&gt;</code></p>\n<h4 id=\"2、使用中括号包含描点文本内容，后接小括号提供id\"><a href=\"#2、使用中括号包含描点文本内容，后接小括号提供id\" class=\"headerlink\" title=\"2、使用中括号包含描点文本内容，后接小括号提供id\"></a>2、使用中括号包含描点文本内容，后接小括号提供id</h4><p><code>[跳至表格](#extend-table)</code><br><br /><br><a href=\"#extend-table\">跳至表格</a></p>\n<h3 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h3><h4 id=\"1、使用双波浪号\"><a href=\"#1、使用双波浪号\" class=\"headerlink\" title=\"1、使用双波浪号~~\"></a>1、使用双波浪号~~</h4><p><code>~~内容删除~~</code><br /><br><del>内容删除</del></p>\n<h3 id=\"任务列表语法\"><a href=\"#任务列表语法\" class=\"headerlink\" title=\"任务列表语法\"></a>任务列表语法</h3><h4 id=\"1、使用-和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格\"><a href=\"#1、使用-和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格\" class=\"headerlink\" title=\"1、使用 -/*/+ 和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格\"></a>1、使用 -/*/+ 和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- [x] 起床</span><br><span class=\"line\">* [ ] 洗漱</span><br><span class=\"line\">+ [ ] 吃早餐</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 起床</li>\n</ul>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 洗漱</li>\n</ul>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 吃早餐</li>\n</ul>\n<h3 id=\"使用emoji表情\"><a href=\"#使用emoji表情\" class=\"headerlink\" title=\"使用emoji表情\"></a><a href=\"https://emojipedia.org/\">使用emoji表情</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 🏜️ 第一次使用表情</span><br><span class=\"line\">- 🎄 圣诞树</span><br></pre></td></tr></table></figure>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><h4 id=\"中文段落缩进两个字符-使用-amp-ensp-；\"><a href=\"#中文段落缩进两个字符-使用-amp-ensp-；\" class=\"headerlink\" title=\"中文段落缩进两个字符,使用&amp;ensp;；\"></a>中文段落缩进两个字符,使用<code>&amp;ensp;</code>；</h4><p><code>&amp;ensp;&amp;ensp;这是一段缩进两个字符的文本</code><br /><br>&ensp;&ensp;这是一段缩进两个字符的文本</p>\n<h4 id=\"站内博文间跳转\"><a href=\"#站内博文间跳转\" class=\"headerlink\" title=\"站内博文间跳转\"></a>站内博文间跳转</h4><ul>\n<li>相对路径<ul>\n<li>在站点的根配置文件中，<code>permalink</code>参数指定了博文的生成格式：<code>permalink: :year/:month/:day/:title/</code>，因此在是使用相对路径时，需要根据日期递归到根目录再寻址到需要跳转的博文路径：<br /><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  [Markdown站内手册](../../../../2022/01/05/Markdown-using-document)```</span><br><span class=\"line\">- 绝对路径</span><br><span class=\"line\">  - 同样根据博文的生成格式，将博文从根路径开始，将绝对路径表示出来：</span><br><span class=\"line\">  ```bash</span><br><span class=\"line\">  [Markdown站内手册](/2022/01/05/Markdown-using-document)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>post_link<ul>\n<li>待研究</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":2264,"excerpt":"","more":"<h1 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a><a href=\"https://markdown.com.cn/basic-syntax/\" title=\"官方文档\">基本语法</a></h1><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><h4 id=\"1、一个-‘-’-表示一级标题，两个表示二级标题，依此类推，对应-h1-h6\"><a href=\"#1、一个-‘-’-表示一级标题，两个表示二级标题，依此类推，对应-h1-h6\" class=\"headerlink\" title=\"1、一个 ‘#’ 表示一级标题，两个表示二级标题，依此类推，对应 h1 ~ h6\"></a>1、一个 ‘#’ 表示一级标题，两个表示二级标题，依此类推，对应 h1 ~ h6</h4><h3 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h3><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><hr>\n<h3 id=\"段落\"><a href=\"#段落\" class=\"headerlink\" title=\"段落\"></a>段落</h3><h4 id=\"1、直接使用空白行来标记行分割\"><a href=\"#1、直接使用空白行来标记行分割\" class=\"headerlink\" title=\"1、直接使用空白行来标记行分割\"></a>1、直接使用空白行来标记行分割</h4><p>content1</p>\n<p>content2</p>\n<hr>\n<h3 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h3><h4 id=\"1、在内容末尾使用br，可创建换行\"><a href=\"#1、在内容末尾使用br，可创建换行\" class=\"headerlink\" title=\"1、在内容末尾使用br，可创建换行\"></a>1、在内容末尾使用br，可创建换行</h4><p><code>例子：在内容末尾使用br，可创&lt;br /&gt;建换行</code><br /><br>例子：在内容末尾使用br，可创<br />建换行</p>\n<hr>\n<h3 id=\"强调\"><a href=\"#强调\" class=\"headerlink\" title=\"强调\"></a>强调</h3><h4 id=\"1、在需要强调的内容前后使用两个星号进行标记\"><a href=\"#1、在需要强调的内容前后使用两个星号进行标记\" class=\"headerlink\" title=\"1、在需要强调的内容前后使用两个星号进行标记\"></a>1、在需要强调的内容前后使用两个星号进行标记</h4><p><code>这段文字中，地名是需要强调的，如：**北京**是个美丽的城市，**杭州**也是</code><br /><br>这段文字中，地名是需要强调的，如：<strong>北京</strong>是个美丽的城市，<strong>杭州</strong>也是</p>\n<hr>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><h4 id=\"1、块引用：使用-‘-gt-’-符号，多行引用，使用空-‘-gt-’-隔开\"><a href=\"#1、块引用：使用-‘-gt-’-符号，多行引用，使用空-‘-gt-’-隔开\" class=\"headerlink\" title=\"1、块引用：使用 ‘&gt;’ 符号，多行引用，使用空 ‘&gt;’ 隔开\"></a>1、块引用：使用 ‘&gt;’ 符号，多行引用，使用空 ‘&gt;’ 隔开</h4><blockquote>\n<p>import</p>\n<p>import</p>\n</blockquote>\n<h4 id=\"2、嵌套引用：后面多一个-‘-gt-’，表示被嵌套，如-‘-gt-gt-’\"><a href=\"#2、嵌套引用：后面多一个-‘-gt-’，表示被嵌套，如-‘-gt-gt-’\" class=\"headerlink\" title=\"2、嵌套引用：后面多一个 ‘&gt;’，表示被嵌套，如 ‘&gt;&gt;’\"></a>2、嵌套引用：后面多一个 ‘&gt;’，表示被嵌套，如 ‘&gt;&gt;’</h4><blockquote>\n<p>first</p>\n<blockquote>\n<p>second</p>\n</blockquote>\n</blockquote>\n<h4 id=\"3、包含其他Markdown语法的引用\"><a href=\"#3、包含其他Markdown语法的引用\" class=\"headerlink\" title=\"3、包含其他Markdown语法的引用\"></a>3、包含其他Markdown语法的引用</h4><blockquote>\n<p>content</p>\n<ul>\n<li>list</li>\n</ul>\n<p><em>Everything</em> is going ware;</p>\n</blockquote>\n<hr>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><h4 id=\"1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效\"><a href=\"#1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效\" class=\"headerlink\" title=\"1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效\"></a>1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效</h4><ol>\n<li>第一行</li>\n<li>第二行</li>\n</ol>\n<h4 id=\"2、无序列表：使用连字符-‘-‘。子级列表，使用两个空格递进表示层级。\"><a href=\"#2、无序列表：使用连字符-‘-‘。子级列表，使用两个空格递进表示层级。\" class=\"headerlink\" title=\"2、无序列表：使用连字符 ‘-‘。子级列表，使用两个空格递进表示层级。\"></a>2、无序列表：使用连字符 ‘-‘。子级列表，使用两个空格递进表示层级。</h4><ul>\n<li>第一行</li>\n<li>第二行<ul>\n<li>子行</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><h4 id=\"1、代码块使用反引号包裹\"><a href=\"#1、代码块使用反引号包裹\" class=\"headerlink\" title=\"1、代码块使用反引号包裹 ``\"></a>1、代码块使用反引号包裹 ``</h4><p><code>这里面的是代码块内容，里层再次使用反引号，可识别Markdown语法，如``&lt;br /&gt;`` </code><br /><code> 标签就是被识别的效果</code></p>\n<hr>\n<h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><h4 id=\"1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）\"><a href=\"#1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）\" class=\"headerlink\" title=\"1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）\"></a>1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）</h4><hr>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><h4 id=\"1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title\"><a href=\"#1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title\" class=\"headerlink\" title=\"1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title\"></a>1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title</h4><p><code>[这是一个链接](https://www.baidu.com &quot;这是一个百度地址&quot;)</code><br /><br><a href=\"https://www.baidu.com/\" title=\"这是一个百度地址\">这是一个链接</a></p>\n<h4 id=\"2、带格式化的链接\"><a href=\"#2、带格式化的链接\" class=\"headerlink\" title=\"2、带格式化的链接\"></a>2、带格式化的链接</h4><p><code>这是一个 **[百度](https://www.baidu.com &quot;这是一个百度地址&quot;)** 链接</code><br /><br>这是一个 <strong><a href=\"https://www.baidu.com/\" title=\"这是一个百度地址\">百度</a></strong> 链接</p>\n<hr>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><h4 id=\"1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性\"><a href=\"#1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性\" class=\"headerlink\" title=\"1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性\"></a>1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性</h4><p><code>![这是图片](/assets/img/philly-magic-garden.jpg &quot;Magic Gardens&quot;)</code><br><img src=\"https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png\" alt=\"这是图片\" title=\"Animate\"></p>\n<h4 id=\"2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址\"><a href=\"#2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址\" class=\"headerlink\" title=\"2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址\"></a>2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址</h4><p><code>[![这是图片](https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png &quot;Animate&quot;)](https://en.wikipedia.org/wiki/File:Future_Splash_Animator_icon.png)</code><br><a href=\"https://en.wikipedia.org/wiki/File:Future_Splash_Animator_icon.png\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png\" alt=\"这是图片\" title=\"Animate\"></a></p>\n<hr>\n<h3 id=\"转义符\"><a href=\"#转义符\" class=\"headerlink\" title=\"转义符\"></a>转义符</h3><hr>\n<h3 id=\"内嵌-HTML-标签\"><a href=\"#内嵌-HTML-标签\" class=\"headerlink\" title=\"内嵌 HTML 标签\"></a>内嵌 HTML 标签</h3><h4 id=\"1、自定义样式\"><a href=\"#1、自定义样式\" class=\"headerlink\" title=\"1、自定义样式\"></a>1、自定义样式</h4><p><code>使用样式自定义&lt;span style=&quot;color: rgb(255,3,255);margin: 0 5px;&quot;&gt;标签&lt;/span&gt;样式</code></p>\n<p>使用样式自定义<span style=\"color: rgb(255,3,255);margin: 0 5px;\">标签</span>样式</p>\n<h1 id=\"扩展语法\"><a href=\"#扩展语法\" class=\"headerlink\" title=\"扩展语法\"></a><a href=\"https://markdown.com.cn/extended-syntax/\" title=\"官方文档\">扩展语法</a></h1><h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a><span id=\"extend-table\">表格</span></h3><h4 id=\"1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题\"><a href=\"#1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题\" class=\"headerlink\" title=\"1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题\"></a>1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题</h4><p><code>| syntax | description | </code><br /><code>| --- | --- |</code><br /><code>| header | title |</code><br /><code>| name | value |</code><br /><code> | name | value |</code></p>\n<table>\n<thead>\n<tr>\n<th>syntax</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>header</td>\n<td>title</td>\n</tr>\n<tr>\n<td>name</td>\n<td>value</td>\n</tr>\n<tr>\n<td>name</td>\n<td>value</td>\n</tr>\n</tbody></table>\n<h4 id=\"2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中\"><a href=\"#2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中\" class=\"headerlink\" title=\"2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中\"></a>2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中</h4><p><code>| syntax | description | other | </code><br /><code>| :--- | :---: | ---: |</code><br /><code>| 1 | title | 1 |</code><br /><code>| 1 | value | 1 |</code><br /><code> | 1 | value | 1 |</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">syntax</th>\n<th align=\"center\">description</th>\n<th align=\"right\">other</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"center\">title</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td align=\"left\">1</td>\n<td align=\"center\">value</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td align=\"left\">1</td>\n<td align=\"center\">value</td>\n<td align=\"right\">1</td>\n</tr>\n</tbody></table>\n<h3 id=\"围栏代码块\"><a href=\"#围栏代码块\" class=\"headerlink\" title=\"围栏代码块\"></a>围栏代码块</h3><h4 id=\"1、使用三个反引号-包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行\"><a href=\"#1、使用三个反引号-包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行\" class=\"headerlink\" title=\"1、使用三个反引号```包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行\"></a>1、使用三个反引号```包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;key&quot;: 1,</span><br><span class=\"line\">  &quot;name&quot;: &quot;test&quot;,</span><br><span class=\"line\">  &quot;value&quot;: 2</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>&#123;   &quot;key&quot;: 1,   &quot;name&quot;: &quot;test&quot;,   &quot;value&quot;: 2 &#125;</code></p>\n<h4 id=\"2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等\"><a href=\"#2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等\" class=\"headerlink\" title=\"2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等\"></a>2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等</h4><ul>\n<li><code>json：</code><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;key&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;test&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;value&quot;</span>: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><code>bash：</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ midkr <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure></li>\n<li><code>javascript：</code><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">&#x27;test&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"脚注\"><a href=\"#脚注\" class=\"headerlink\" title=\"脚注\"></a>脚注</h3><h4 id=\"1、方括号内，使用上标符号接其他标识符\"><a href=\"#1、方括号内，使用上标符号接其他标识符\" class=\"headerlink\" title=\"1、方括号内，使用上标符号接其他标识符\"></a>1、方括号内，使用上标符号接其他标识符</h4><p>这里面的内容包含[^1]脚注。</p>\n<p>[^1]: this is a</p>\n<h3 id=\"标题ID和锚点\"><a href=\"#标题ID和锚点\" class=\"headerlink\" title=\"标题ID和锚点\"></a>标题ID和锚点</h3><h4 id=\"1、标题内容使用内嵌html标签的形式提供id\"><a href=\"#1、标题内容使用内嵌html标签的形式提供id\" class=\"headerlink\" title=\"1、标题内容使用内嵌html标签的形式提供id\"></a>1、标题内容使用内嵌html标签的形式提供id</h4><p><code>### &lt;span id=&quot;extend-table&quot;&gt;表格&lt;/span&gt;</code></p>\n<h4 id=\"2、使用中括号包含描点文本内容，后接小括号提供id\"><a href=\"#2、使用中括号包含描点文本内容，后接小括号提供id\" class=\"headerlink\" title=\"2、使用中括号包含描点文本内容，后接小括号提供id\"></a>2、使用中括号包含描点文本内容，后接小括号提供id</h4><p><code>[跳至表格](#extend-table)</code><br><br /><br><a href=\"#extend-table\">跳至表格</a></p>\n<h3 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h3><h4 id=\"1、使用双波浪号\"><a href=\"#1、使用双波浪号\" class=\"headerlink\" title=\"1、使用双波浪号~~\"></a>1、使用双波浪号~~</h4><p><code>~~内容删除~~</code><br /><br><del>内容删除</del></p>\n<h3 id=\"任务列表语法\"><a href=\"#任务列表语法\" class=\"headerlink\" title=\"任务列表语法\"></a>任务列表语法</h3><h4 id=\"1、使用-和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格\"><a href=\"#1、使用-和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格\" class=\"headerlink\" title=\"1、使用 -/*/+ 和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格\"></a>1、使用 -/*/+ 和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- [x] 起床</span><br><span class=\"line\">* [ ] 洗漱</span><br><span class=\"line\">+ [ ] 吃早餐</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 起床</li>\n</ul>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 洗漱</li>\n</ul>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 吃早餐</li>\n</ul>\n<h3 id=\"使用emoji表情\"><a href=\"#使用emoji表情\" class=\"headerlink\" title=\"使用emoji表情\"></a><a href=\"https://emojipedia.org/\">使用emoji表情</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 🏜️ 第一次使用表情</span><br><span class=\"line\">- 🎄 圣诞树</span><br></pre></td></tr></table></figure>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><h4 id=\"中文段落缩进两个字符-使用-amp-ensp-；\"><a href=\"#中文段落缩进两个字符-使用-amp-ensp-；\" class=\"headerlink\" title=\"中文段落缩进两个字符,使用&amp;ensp;；\"></a>中文段落缩进两个字符,使用<code>&amp;ensp;</code>；</h4><p><code>&amp;ensp;&amp;ensp;这是一段缩进两个字符的文本</code><br /><br>&ensp;&ensp;这是一段缩进两个字符的文本</p>\n<h4 id=\"站内博文间跳转\"><a href=\"#站内博文间跳转\" class=\"headerlink\" title=\"站内博文间跳转\"></a>站内博文间跳转</h4><ul>\n<li>相对路径<ul>\n<li>在站点的根配置文件中，<code>permalink</code>参数指定了博文的生成格式：<code>permalink: :year/:month/:day/:title/</code>，因此在是使用相对路径时，需要根据日期递归到根目录再寻址到需要跳转的博文路径：<br /><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  [Markdown站内手册](../../../../2022/01/05/Markdown-using-document)```</span><br><span class=\"line\">- 绝对路径</span><br><span class=\"line\">  - 同样根据博文的生成格式，将博文从根路径开始，将绝对路径表示出来：</span><br><span class=\"line\">  ```bash</span><br><span class=\"line\">  [Markdown站内手册](/2022/01/05/Markdown-using-document)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>post_link<ul>\n<li>待研究</li>\n</ul>\n</li>\n</ul>\n"},{"title":"React 基础开发框架搭建","date":"2022-01-14T02:02:01.000Z","_content":"#### 简介\n> &ensp;&ensp;Create React App 是一种官方支持的创建单页 React 应用程序的方式。它提供了一个没有配置的现代构建设置。\n#### \n","source":"_posts/React-基础开发框架搭建.md","raw":"---\ntitle: React 基础开发框架搭建\ndate: 2022-01-14 10:02:01\ntags: [React, 框架搭建, creat-react-app]\ncategories: [React, create-react-app]\n---\n#### 简介\n> &ensp;&ensp;Create React App 是一种官方支持的创建单页 React 应用程序的方式。它提供了一个没有配置的现代构建设置。\n#### \n","slug":"React-基础开发框架搭建","published":1,"updated":"2022-01-14T02:15:50.078Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbn000kokpc5u1d55oa","content":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><blockquote>\n<p>&ensp;&ensp;Create React App 是一种官方支持的创建单页 React 应用程序的方式。它提供了一个没有配置的现代构建设置。</p>\n</blockquote>\n<h4 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h4>","site":{"data":{}},"length":71,"excerpt":"","more":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><blockquote>\n<p>&ensp;&ensp;Create React App 是一种官方支持的创建单页 React 应用程序的方式。它提供了一个没有配置的现代构建设置。</p>\n</blockquote>\n<h4 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h4>"},{"title":"React插件 - react-codemirror2","date":"2022-01-23T01:42:36.000Z","_content":"#### 简介\n- `react-codemirror2` 是基于 `CodeMirror` 工作原理，可以在React环境中直接使用的一个代码编辑器。\n> &ensp;&ensp; [CodeMirror](https://codemirror.net/) 是一个用 `JavaScript` 为浏览器实现的通用文本编辑器。它专门用于编辑代码，并带有多种语言模式和插件，可实现更高级的编辑功能。\n\n#### 开始\n- 安装\n```bash\n$ npm install react-codemirror2 codemirror --save\n```\n- 组件：`UnControlled` 和 `Controlled`\n  - `react-codemirror2` 有两种组件，一种是由 `codemirror` 本身内部的工作原理提供功能支持，非受控的组件 `UnControlled`；一种是通过 `React` 的状态 `State` 来进行数据控制的受控组件 `Controlled`。\n- 文件说明\n\n![文件目录](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/plugins-files-desc.png)\n\n| 目录 | 说明 |\n| --- | --- |\n| addon | 可选的扩展功能配件 |\n| mode | 编辑器当前支持的语言类型 |\n| src | |\n| theme | 编辑器的样式主题 |\n- 特性\n  - 支持超过 [100种](https://codemirror.net/mode/index.html) 开箱即用的语言\n  - 强大的、[可组合](#页内跳转) 的语言模式系统\n  - [代码提示，自动完成](https://codemirror.net/doc/manual.html#addon_show-hint) 提示功能\n  - [代码折叠](https://codemirror.net/doc/manual.html#addon_foldcode)\n  - 可配置的 [快捷键绑定](https://codemirror.net/doc/manual.html#option_extraKeys)\n  - 可配置的，基于 [Vim](https://codemirror.net/demo/vim.html) 、[Emacs](https://codemirror.net/demo/emacs.html) 、[Sublime Text](https://codemirror.net/demo/sublime.html) 的键映射绑定\n  - [查找和替换](https://codemirror.net/doc/manual.html#addon_search) 操作界面\n  - [括号](https://codemirror.net/doc/manual.html#addon_matchbrackets) 和 [标签](https://codemirror.net/doc/manual.html#addon_matchtags) 匹配\n  - 支持 [拆分视图](https://codemirror.net/demo/buffers.html)\n  - 集成 [lint](https://codemirror.net/doc/manual.html#addon_lint) 进行语法检测\n  - 可配置的 [字体大小和样式](https://codemirror.net/demo/variableheight.html)\n  - 大量的可配置 [主题](https://codemirror.net/demo/theme.html)\n  - 能够调整大小以 [自适应内容](https://codemirror.net/demo/resize.html)\n  - [内联](https://codemirror.net/doc/manual.html#mark_replacedWith) 和 [块级](https://codemirror.net/doc/manual.html#mark_replacedWith) 的小部件\n  - 文本标记：[受控样式](https://codemirror.net/doc/manual.html#mark_replacedWith) 、[只读](https://codemirror.net/doc/manual.html#markText) 、[原子](https://codemirror.net/doc/manual.html#markText)\n  - [双向文本支持](https://codemirror.net/demo/bidi.html) ：`LRT`、`RTL`\n  - [搜索](#search-func)\n    \n#### 使用\n- 文件引入\n```javascript\nimport {Controlled as CodeMirror} from 'react-codemirror2'; // 受控组件\nimport 'codemirror/lib/codemirror.css'; // 编辑器主体样式\nimport 'codemirror/theme/material-darker.css'; // 编辑器使用 material-darker 主题\nimport 'codemirror/mode/properties/properties.js'; // 编辑器代码语言支持：properties 配置文件\n```\n- 组件配置\n```javascript\nstate = {\n    value: _.get(this.props, 'initialValue', undefined),\n}\neditorChange = (editor, data, value) => {\n    // 受控组件设置编辑器内容\n    this.setState({\n        value\n    });\n}\n<CodeMirror\n    value={this.state.value}\n    options={{\n        width: 300,\n        mode: 'properties', // 编辑器语言，需引入语言js文件\n        theme: 'material-darker', // 主题配置，需要引入主题样式文件\n        lineNumbers: true,        // 显示行号\n    }}\n    onBeforeChange={this.editorChange}\n/>\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/editor-demo.png)\n\n#### 可组合的语言模式\n- 编辑器可配置显示多种语言，如常见的 `html` 文件，就包含三种语言： `html`、`JavaScript`、`css`。官方语言模式中，`html` 文件有一个内置的集成语言模式配置值： `htmlmixed`\n  > `html` 语言是基于 `xml` 语言来解析的，因此如果需要单独配置 `html` 语言支持，需要引入的是 `xml` 语言配置 `js` 文件\n  - 引入语言模式文件\n  ```javascript\n  import 'codemirror/mode/htmlmixed/htmlmixed.js'; // 引入语言模式js文件\n  ```\n  - 修改配置中的 `mode` 属性\n  ```yaml\n  options={{\n    width: 300,\n    mode: 'htmlmixed',\n    theme: 'material-darker',\n    lineNumbers: true,              // 显示行号\n  }}\n  ```\n  - 预览\n    - 修改前\n    ![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/htmlmixed-none.png)\n    - 修改后\n    ![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/htmlmixed-able.png)\n\n#### 代码提示，自动完成\n- 目前插件支持的代码提示有 `html`、`JavaScript`、`css`、`xml`、`sql`，以及 `anyword`，`anyword` 指在当前文本输入光标附近查找相应的词语进行自动提示。\n- 以 `sql` 为例，引入相应的 `css` 样式 及 `js` 脚本\n```javascript\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/mode/sql/sql.js';\nimport 'codemirror/addon/hint/show-hint.js'\nimport 'codemirror/addon/hint/sql-hint.js';\n```\n- `option` 添加 `hintOptions` 配置\n```yaml\noptions={{\n    width: 300,\n    mode: 'sql',\n    theme: 'material-darker',\n    hintOptions: {\n        completeSingle: false\n    },\n    lineNumbers: true,              // 显示行号\n    styleActiveLine: true,          // 选中行高亮\n}}\n```\n- 在 `onBeforeChange` 方法内调用 `.showHint()` 方法\n```javascript\neditorChange = (editor, data, value) => {\n    editor.showHint();\n    this.setState({\n        value\n    });\n    _.isFunction(this.props.editorChange) && this.props.editorChange(value);\n}\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/hint-sql.gif)\n\n#### 代码折叠\n- 引入样式及脚本文件\n```javascript\n// 折叠\nimport 'codemirror/addon/fold/foldgutter.css';\nimport 'codemirror/addon/fold/foldcode';\nimport 'codemirror/addon/fold/foldgutter';\nimport 'codemirror/addon/fold/brace-fold';\nimport 'codemirror/addon/fold/comment-fold';\n```\n- `option` 添加配置\n```JavaScript\nfoldGutter: true, // 支持折叠\nlineWrapping: true,\ngutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/code-fold.gif)\n\n#### <span id='search-func'>搜索</span>\n- 引入样式及脚本文件\n```javascript\n// 搜索\nimport 'codemirror/addon/scroll/annotatescrollbar.js'\nimport 'codemirror/addon/search/matchesonscrollbar.js'\nimport 'codemirror/addon/search/match-highlighter.js'\nimport 'codemirror/addon/search/jump-to-line.js'\n\nimport 'codemirror/addon/dialog/dialog.js'\nimport 'codemirror/addon/dialog/dialog.css'\nimport 'codemirror/addon/search/searchcursor.js'\nimport 'codemirror/addon/search/search.js'\n```\n- 使用快捷键 `ctrl + F` 查找\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/search.gif)\n- 支持的快捷键\n\n| 快捷键 | 描述 |\n| --- | --- |\n| `ctrl + F` | 查找 |\n| `ctrl + G` | 查找下一个 |\n| `shift + ctrl + F` | 查找上一个 |\n| `shift + ctrl + F` | 替换 |\n| `shift + ctrl + R` | 替换全部 |\n- 使用图形交互执行查找替换使用快捷键\n> &ensp;&ensp;对于不习惯使用快捷键方式的用户，可以提供 `UI` 控件，来唤起查找对话框\n```javascript\neditor = null;\n\nmounted = editor => {\n  this.editor = editor;\n}\n\nfind = () => {\n  this.editor && this.editor.execCommand('find');\n}\n\n<Row>\n  <Col>\n    <Button onClick={this.find}>查找</Button>\n  </Col>\n</Row>\n<CodeMirror editorDidMount={this.mounted} value={this.state.value} />\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/search-ui.gif)\n- 其他相关指令用法\n```javascript\nfindNext = () => {\n    this.editor && this.editor.execCommand('findNext');\n}\nfindPrev = () => {\n    this.editor && this.editor.execCommand('findPrev');\n}\nreplace = () => {\n    this.editor && this.editor.execCommand('replace');\n}\nreplaceAll = () => {\n    this.editor && this.editor.execCommand('replaceAll');\n}\n```\n- [所有可用的指令](https://codemirror.net/doc/manual.html#commands)\n\n#### 语法校验\n- 插件目前支持语法校验有：`javaScript`、`coffeeScript`、`css`、`html`、`xml`、`json`，以下以 `JavaScript` 为例\n- 引入样式及脚本文件\n```javascript\n// 语法错误提示\nimport 'codemirror/addon/lint/lint.css';\nimport 'codemirror/addon/lint/lint.js';\nimport 'codemirror/addon/lint/javascript-lint.js';\n```\n- `option` 内添加新的配置，启用检测\n```yaml\nlint: true,\n```\n- 启动项目，发现语法检测并没生效，并且控制台报 `JSHINT` 相关的错误\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javaScript-lint-unwork.png)\n- 查找资料，发现插件内的 `JavaScript` 检测依赖第三方插件 `jslint`，因此需要在项目中安装该插件，并全局设置该变量\n```bash\n$ npm install jslint --save\n```\n```javascript\nimport { JSHINT } from \"jshint\";\nwindow.JSHINT = JSHINT;\n```\n- 重新启动项目，可以看到 `JavaScript` 语法检测生效了\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javascript-lint-success.gif)\n- 配合 `React` 的 `state` 设置，在出现语法错误时，不允许提交\n```javascript\nstate = {\n  value: _.get(this.props, 'initialValue', undefined),\n  validFlag: true\n}\n\neditorChange = (editor, data, value) => {\n    editor.showHint();\n    // 获取校验状态\n    const validFlag = this.validCheck(_.get(editor, 'state.lint.marked', []));\n    this.setState({\n        value,\n        validFlag\n    });\n    _.isFunction(this.props.editorChange) && this.props.editorChange(value);\n}\n// 根据类名判断是否出现错误语法\nvalidCheck = (marks) => {\n  if (_.isEmpty(marks)) return true;\n  const errorFlag = _.isArray(marks) && marks.findIndex(item => item.className.indexOf('error') >= 0);\n  return errorFlag < 0;\n}\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javascript-lint-state.gif)\n\n#### 代码合并\n- [参考文档](https://github.com/scniro/react-codemirror2/issues/123)","source":"_posts/React插件-react-codemirror2.md","raw":"---\ntitle: React插件 - react-codemirror2\ndate: 2022-01-23 09:42:36\ntags: [React, 插件, react-codemirror2]\ncategories: [React, 插件]\n---\n#### 简介\n- `react-codemirror2` 是基于 `CodeMirror` 工作原理，可以在React环境中直接使用的一个代码编辑器。\n> &ensp;&ensp; [CodeMirror](https://codemirror.net/) 是一个用 `JavaScript` 为浏览器实现的通用文本编辑器。它专门用于编辑代码，并带有多种语言模式和插件，可实现更高级的编辑功能。\n\n#### 开始\n- 安装\n```bash\n$ npm install react-codemirror2 codemirror --save\n```\n- 组件：`UnControlled` 和 `Controlled`\n  - `react-codemirror2` 有两种组件，一种是由 `codemirror` 本身内部的工作原理提供功能支持，非受控的组件 `UnControlled`；一种是通过 `React` 的状态 `State` 来进行数据控制的受控组件 `Controlled`。\n- 文件说明\n\n![文件目录](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/plugins-files-desc.png)\n\n| 目录 | 说明 |\n| --- | --- |\n| addon | 可选的扩展功能配件 |\n| mode | 编辑器当前支持的语言类型 |\n| src | |\n| theme | 编辑器的样式主题 |\n- 特性\n  - 支持超过 [100种](https://codemirror.net/mode/index.html) 开箱即用的语言\n  - 强大的、[可组合](#页内跳转) 的语言模式系统\n  - [代码提示，自动完成](https://codemirror.net/doc/manual.html#addon_show-hint) 提示功能\n  - [代码折叠](https://codemirror.net/doc/manual.html#addon_foldcode)\n  - 可配置的 [快捷键绑定](https://codemirror.net/doc/manual.html#option_extraKeys)\n  - 可配置的，基于 [Vim](https://codemirror.net/demo/vim.html) 、[Emacs](https://codemirror.net/demo/emacs.html) 、[Sublime Text](https://codemirror.net/demo/sublime.html) 的键映射绑定\n  - [查找和替换](https://codemirror.net/doc/manual.html#addon_search) 操作界面\n  - [括号](https://codemirror.net/doc/manual.html#addon_matchbrackets) 和 [标签](https://codemirror.net/doc/manual.html#addon_matchtags) 匹配\n  - 支持 [拆分视图](https://codemirror.net/demo/buffers.html)\n  - 集成 [lint](https://codemirror.net/doc/manual.html#addon_lint) 进行语法检测\n  - 可配置的 [字体大小和样式](https://codemirror.net/demo/variableheight.html)\n  - 大量的可配置 [主题](https://codemirror.net/demo/theme.html)\n  - 能够调整大小以 [自适应内容](https://codemirror.net/demo/resize.html)\n  - [内联](https://codemirror.net/doc/manual.html#mark_replacedWith) 和 [块级](https://codemirror.net/doc/manual.html#mark_replacedWith) 的小部件\n  - 文本标记：[受控样式](https://codemirror.net/doc/manual.html#mark_replacedWith) 、[只读](https://codemirror.net/doc/manual.html#markText) 、[原子](https://codemirror.net/doc/manual.html#markText)\n  - [双向文本支持](https://codemirror.net/demo/bidi.html) ：`LRT`、`RTL`\n  - [搜索](#search-func)\n    \n#### 使用\n- 文件引入\n```javascript\nimport {Controlled as CodeMirror} from 'react-codemirror2'; // 受控组件\nimport 'codemirror/lib/codemirror.css'; // 编辑器主体样式\nimport 'codemirror/theme/material-darker.css'; // 编辑器使用 material-darker 主题\nimport 'codemirror/mode/properties/properties.js'; // 编辑器代码语言支持：properties 配置文件\n```\n- 组件配置\n```javascript\nstate = {\n    value: _.get(this.props, 'initialValue', undefined),\n}\neditorChange = (editor, data, value) => {\n    // 受控组件设置编辑器内容\n    this.setState({\n        value\n    });\n}\n<CodeMirror\n    value={this.state.value}\n    options={{\n        width: 300,\n        mode: 'properties', // 编辑器语言，需引入语言js文件\n        theme: 'material-darker', // 主题配置，需要引入主题样式文件\n        lineNumbers: true,        // 显示行号\n    }}\n    onBeforeChange={this.editorChange}\n/>\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/editor-demo.png)\n\n#### 可组合的语言模式\n- 编辑器可配置显示多种语言，如常见的 `html` 文件，就包含三种语言： `html`、`JavaScript`、`css`。官方语言模式中，`html` 文件有一个内置的集成语言模式配置值： `htmlmixed`\n  > `html` 语言是基于 `xml` 语言来解析的，因此如果需要单独配置 `html` 语言支持，需要引入的是 `xml` 语言配置 `js` 文件\n  - 引入语言模式文件\n  ```javascript\n  import 'codemirror/mode/htmlmixed/htmlmixed.js'; // 引入语言模式js文件\n  ```\n  - 修改配置中的 `mode` 属性\n  ```yaml\n  options={{\n    width: 300,\n    mode: 'htmlmixed',\n    theme: 'material-darker',\n    lineNumbers: true,              // 显示行号\n  }}\n  ```\n  - 预览\n    - 修改前\n    ![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/htmlmixed-none.png)\n    - 修改后\n    ![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/htmlmixed-able.png)\n\n#### 代码提示，自动完成\n- 目前插件支持的代码提示有 `html`、`JavaScript`、`css`、`xml`、`sql`，以及 `anyword`，`anyword` 指在当前文本输入光标附近查找相应的词语进行自动提示。\n- 以 `sql` 为例，引入相应的 `css` 样式 及 `js` 脚本\n```javascript\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/mode/sql/sql.js';\nimport 'codemirror/addon/hint/show-hint.js'\nimport 'codemirror/addon/hint/sql-hint.js';\n```\n- `option` 添加 `hintOptions` 配置\n```yaml\noptions={{\n    width: 300,\n    mode: 'sql',\n    theme: 'material-darker',\n    hintOptions: {\n        completeSingle: false\n    },\n    lineNumbers: true,              // 显示行号\n    styleActiveLine: true,          // 选中行高亮\n}}\n```\n- 在 `onBeforeChange` 方法内调用 `.showHint()` 方法\n```javascript\neditorChange = (editor, data, value) => {\n    editor.showHint();\n    this.setState({\n        value\n    });\n    _.isFunction(this.props.editorChange) && this.props.editorChange(value);\n}\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/hint-sql.gif)\n\n#### 代码折叠\n- 引入样式及脚本文件\n```javascript\n// 折叠\nimport 'codemirror/addon/fold/foldgutter.css';\nimport 'codemirror/addon/fold/foldcode';\nimport 'codemirror/addon/fold/foldgutter';\nimport 'codemirror/addon/fold/brace-fold';\nimport 'codemirror/addon/fold/comment-fold';\n```\n- `option` 添加配置\n```JavaScript\nfoldGutter: true, // 支持折叠\nlineWrapping: true,\ngutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/code-fold.gif)\n\n#### <span id='search-func'>搜索</span>\n- 引入样式及脚本文件\n```javascript\n// 搜索\nimport 'codemirror/addon/scroll/annotatescrollbar.js'\nimport 'codemirror/addon/search/matchesonscrollbar.js'\nimport 'codemirror/addon/search/match-highlighter.js'\nimport 'codemirror/addon/search/jump-to-line.js'\n\nimport 'codemirror/addon/dialog/dialog.js'\nimport 'codemirror/addon/dialog/dialog.css'\nimport 'codemirror/addon/search/searchcursor.js'\nimport 'codemirror/addon/search/search.js'\n```\n- 使用快捷键 `ctrl + F` 查找\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/search.gif)\n- 支持的快捷键\n\n| 快捷键 | 描述 |\n| --- | --- |\n| `ctrl + F` | 查找 |\n| `ctrl + G` | 查找下一个 |\n| `shift + ctrl + F` | 查找上一个 |\n| `shift + ctrl + F` | 替换 |\n| `shift + ctrl + R` | 替换全部 |\n- 使用图形交互执行查找替换使用快捷键\n> &ensp;&ensp;对于不习惯使用快捷键方式的用户，可以提供 `UI` 控件，来唤起查找对话框\n```javascript\neditor = null;\n\nmounted = editor => {\n  this.editor = editor;\n}\n\nfind = () => {\n  this.editor && this.editor.execCommand('find');\n}\n\n<Row>\n  <Col>\n    <Button onClick={this.find}>查找</Button>\n  </Col>\n</Row>\n<CodeMirror editorDidMount={this.mounted} value={this.state.value} />\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/search-ui.gif)\n- 其他相关指令用法\n```javascript\nfindNext = () => {\n    this.editor && this.editor.execCommand('findNext');\n}\nfindPrev = () => {\n    this.editor && this.editor.execCommand('findPrev');\n}\nreplace = () => {\n    this.editor && this.editor.execCommand('replace');\n}\nreplaceAll = () => {\n    this.editor && this.editor.execCommand('replaceAll');\n}\n```\n- [所有可用的指令](https://codemirror.net/doc/manual.html#commands)\n\n#### 语法校验\n- 插件目前支持语法校验有：`javaScript`、`coffeeScript`、`css`、`html`、`xml`、`json`，以下以 `JavaScript` 为例\n- 引入样式及脚本文件\n```javascript\n// 语法错误提示\nimport 'codemirror/addon/lint/lint.css';\nimport 'codemirror/addon/lint/lint.js';\nimport 'codemirror/addon/lint/javascript-lint.js';\n```\n- `option` 内添加新的配置，启用检测\n```yaml\nlint: true,\n```\n- 启动项目，发现语法检测并没生效，并且控制台报 `JSHINT` 相关的错误\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javaScript-lint-unwork.png)\n- 查找资料，发现插件内的 `JavaScript` 检测依赖第三方插件 `jslint`，因此需要在项目中安装该插件，并全局设置该变量\n```bash\n$ npm install jslint --save\n```\n```javascript\nimport { JSHINT } from \"jshint\";\nwindow.JSHINT = JSHINT;\n```\n- 重新启动项目，可以看到 `JavaScript` 语法检测生效了\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javascript-lint-success.gif)\n- 配合 `React` 的 `state` 设置，在出现语法错误时，不允许提交\n```javascript\nstate = {\n  value: _.get(this.props, 'initialValue', undefined),\n  validFlag: true\n}\n\neditorChange = (editor, data, value) => {\n    editor.showHint();\n    // 获取校验状态\n    const validFlag = this.validCheck(_.get(editor, 'state.lint.marked', []));\n    this.setState({\n        value,\n        validFlag\n    });\n    _.isFunction(this.props.editorChange) && this.props.editorChange(value);\n}\n// 根据类名判断是否出现错误语法\nvalidCheck = (marks) => {\n  if (_.isEmpty(marks)) return true;\n  const errorFlag = _.isArray(marks) && marks.findIndex(item => item.className.indexOf('error') >= 0);\n  return errorFlag < 0;\n}\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javascript-lint-state.gif)\n\n#### 代码合并\n- [参考文档](https://github.com/scniro/react-codemirror2/issues/123)","slug":"React插件-react-codemirror2","published":1,"updated":"2022-01-23T08:21:20.262Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbo000pokpc7whe8ar0","content":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><ul>\n<li><code>react-codemirror2</code> 是基于 <code>CodeMirror</code> 工作原理，可以在React环境中直接使用的一个代码编辑器。<blockquote>\n<p>&ensp;&ensp; <a href=\"https://codemirror.net/\">CodeMirror</a> 是一个用 <code>JavaScript</code> 为浏览器实现的通用文本编辑器。它专门用于编辑代码，并带有多种语言模式和插件，可实现更高级的编辑功能。</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h4><ul>\n<li>安装<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install react-codemirror2 codemirror --save</span><br></pre></td></tr></table></figure></li>\n<li>组件：<code>UnControlled</code> 和 <code>Controlled</code><ul>\n<li><code>react-codemirror2</code> 有两种组件，一种是由 <code>codemirror</code> 本身内部的工作原理提供功能支持，非受控的组件 <code>UnControlled</code>；一种是通过 <code>React</code> 的状态 <code>State</code> 来进行数据控制的受控组件 <code>Controlled</code>。</li>\n</ul>\n</li>\n<li>文件说明</li>\n</ul>\n<p><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/plugins-files-desc.png\" alt=\"文件目录\"></p>\n<table>\n<thead>\n<tr>\n<th>目录</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>addon</td>\n<td>可选的扩展功能配件</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>编辑器当前支持的语言类型</td>\n</tr>\n<tr>\n<td>src</td>\n<td></td>\n</tr>\n<tr>\n<td>theme</td>\n<td>编辑器的样式主题</td>\n</tr>\n</tbody></table>\n<ul>\n<li>特性<ul>\n<li>支持超过 <a href=\"https://codemirror.net/mode/index.html\">100种</a> 开箱即用的语言</li>\n<li>强大的、<a href=\"#%E9%A1%B5%E5%86%85%E8%B7%B3%E8%BD%AC\">可组合</a> 的语言模式系统</li>\n<li><a href=\"https://codemirror.net/doc/manual.html#addon_show-hint\">代码提示，自动完成</a> 提示功能</li>\n<li><a href=\"https://codemirror.net/doc/manual.html#addon_foldcode\">代码折叠</a></li>\n<li>可配置的 <a href=\"https://codemirror.net/doc/manual.html#option_extraKeys\">快捷键绑定</a></li>\n<li>可配置的，基于 <a href=\"https://codemirror.net/demo/vim.html\">Vim</a> 、<a href=\"https://codemirror.net/demo/emacs.html\">Emacs</a> 、<a href=\"https://codemirror.net/demo/sublime.html\">Sublime Text</a> 的键映射绑定</li>\n<li><a href=\"https://codemirror.net/doc/manual.html#addon_search\">查找和替换</a> 操作界面</li>\n<li><a href=\"https://codemirror.net/doc/manual.html#addon_matchbrackets\">括号</a> 和 <a href=\"https://codemirror.net/doc/manual.html#addon_matchtags\">标签</a> 匹配</li>\n<li>支持 <a href=\"https://codemirror.net/demo/buffers.html\">拆分视图</a></li>\n<li>集成 <a href=\"https://codemirror.net/doc/manual.html#addon_lint\">lint</a> 进行语法检测</li>\n<li>可配置的 <a href=\"https://codemirror.net/demo/variableheight.html\">字体大小和样式</a></li>\n<li>大量的可配置 <a href=\"https://codemirror.net/demo/theme.html\">主题</a></li>\n<li>能够调整大小以 <a href=\"https://codemirror.net/demo/resize.html\">自适应内容</a></li>\n<li><a href=\"https://codemirror.net/doc/manual.html#mark_replacedWith\">内联</a> 和 <a href=\"https://codemirror.net/doc/manual.html#mark_replacedWith\">块级</a> 的小部件</li>\n<li>文本标记：<a href=\"https://codemirror.net/doc/manual.html#mark_replacedWith\">受控样式</a> 、<a href=\"https://codemirror.net/doc/manual.html#markText\">只读</a> 、<a href=\"https://codemirror.net/doc/manual.html#markText\">原子</a></li>\n<li><a href=\"https://codemirror.net/demo/bidi.html\">双向文本支持</a> ：<code>LRT</code>、<code>RTL</code></li>\n<li><a href=\"#search-func\">搜索</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><ul>\n<li>文件引入<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;Controlled <span class=\"keyword\">as</span> CodeMirror&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-codemirror2&#x27;</span>; <span class=\"comment\">// 受控组件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/lib/codemirror.css&#x27;</span>; <span class=\"comment\">// 编辑器主体样式</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/theme/material-darker.css&#x27;</span>; <span class=\"comment\">// 编辑器使用 material-darker 主题</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/mode/properties/properties.js&#x27;</span>; <span class=\"comment\">// 编辑器代码语言支持：properties 配置文件</span></span><br></pre></td></tr></table></figure></li>\n<li>组件配置<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">value</span>: _.get(<span class=\"built_in\">this</span>.props, <span class=\"string\">&#x27;initialValue&#x27;</span>, <span class=\"literal\">undefined</span>),</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">editorChange = <span class=\"function\">(<span class=\"params\">editor, data, value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 受控组件设置编辑器内容</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setState(&#123;</span><br><span class=\"line\">        value</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;CodeMirror</span><br><span class=\"line\">    value=&#123;<span class=\"built_in\">this</span>.state.value&#125;</span><br><span class=\"line\">    options=&#123;&#123;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">300</span>,</span><br><span class=\"line\">        <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;properties&#x27;</span>, <span class=\"comment\">// 编辑器语言，需引入语言js文件</span></span><br><span class=\"line\">        <span class=\"attr\">theme</span>: <span class=\"string\">&#x27;material-darker&#x27;</span>, <span class=\"comment\">// 主题配置，需要引入主题样式文件</span></span><br><span class=\"line\">        <span class=\"attr\">lineNumbers</span>: <span class=\"literal\">true</span>,        <span class=\"comment\">// 显示行号</span></span><br><span class=\"line\">    &#125;&#125;</span><br><span class=\"line\">    onBeforeChange=&#123;<span class=\"built_in\">this</span>.editorChange&#125;</span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/editor-demo.png\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"可组合的语言模式\"><a href=\"#可组合的语言模式\" class=\"headerlink\" title=\"可组合的语言模式\"></a>可组合的语言模式</h4><ul>\n<li>编辑器可配置显示多种语言，如常见的 <code>html</code> 文件，就包含三种语言： <code>html</code>、<code>JavaScript</code>、<code>css</code>。官方语言模式中，<code>html</code> 文件有一个内置的集成语言模式配置值： <code>htmlmixed</code><blockquote>\n<p><code>html</code> 语言是基于 <code>xml</code> 语言来解析的，因此如果需要单独配置 <code>html</code> 语言支持，需要引入的是 <code>xml</code> 语言配置 <code>js</code> 文件</p>\n</blockquote>\n<ul>\n<li>引入语言模式文件<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/mode/htmlmixed/htmlmixed.js&#x27;</span>; <span class=\"comment\">// 引入语言模式js文件</span></span><br></pre></td></tr></table></figure></li>\n<li>修改配置中的 <code>mode</code> 属性<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">options=&#123;&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">width:</span> <span class=\"number\">300</span><span class=\"string\">,</span></span><br><span class=\"line\">  <span class=\"attr\">mode:</span> <span class=\"string\">&#x27;htmlmixed&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">&#x27;material-darker&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\">  <span class=\"attr\">lineNumbers:</span> <span class=\"literal\">true</span><span class=\"string\">,</span>              <span class=\"string\">//</span> <span class=\"string\">显示行号</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#125;</span></span><br></pre></td></tr></table></figure></li>\n<li>预览<ul>\n<li>修改前<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/htmlmixed-none.png\" alt=\"预览\"></li>\n<li>修改后<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/htmlmixed-able.png\" alt=\"预览\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"代码提示，自动完成\"><a href=\"#代码提示，自动完成\" class=\"headerlink\" title=\"代码提示，自动完成\"></a>代码提示，自动完成</h4><ul>\n<li>目前插件支持的代码提示有 <code>html</code>、<code>JavaScript</code>、<code>css</code>、<code>xml</code>、<code>sql</code>，以及 <code>anyword</code>，<code>anyword</code> 指在当前文本输入光标附近查找相应的词语进行自动提示。</li>\n<li>以 <code>sql</code> 为例，引入相应的 <code>css</code> 样式 及 <code>js</code> 脚本<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/hint/show-hint.css&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/mode/sql/sql.js&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/hint/show-hint.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/hint/sql-hint.js&#x27;</span>;</span><br></pre></td></tr></table></figure></li>\n<li><code>option</code> 添加 <code>hintOptions</code> 配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">options=&#123;&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">width:</span> <span class=\"number\">300</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">mode:</span> <span class=\"string\">&#x27;sql&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">theme:</span> <span class=\"string\">&#x27;material-darker&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">hintOptions:</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">completeSingle:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;<span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">lineNumbers:</span> <span class=\"literal\">true</span><span class=\"string\">,</span>              <span class=\"string\">//</span> <span class=\"string\">显示行号</span></span><br><span class=\"line\">    <span class=\"attr\">styleActiveLine:</span> <span class=\"literal\">true</span><span class=\"string\">,</span>          <span class=\"string\">//</span> <span class=\"string\">选中行高亮</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#125;</span></span><br></pre></td></tr></table></figure></li>\n<li>在 <code>onBeforeChange</code> 方法内调用 <code>.showHint()</code> 方法<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">editorChange = <span class=\"function\">(<span class=\"params\">editor, data, value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    editor.showHint();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setState(&#123;</span><br><span class=\"line\">        value</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    _.isFunction(<span class=\"built_in\">this</span>.props.editorChange) &amp;&amp; <span class=\"built_in\">this</span>.props.editorChange(value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/hint-sql.gif\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"代码折叠\"><a href=\"#代码折叠\" class=\"headerlink\" title=\"代码折叠\"></a>代码折叠</h4><ul>\n<li>引入样式及脚本文件<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 折叠</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/fold/foldgutter.css&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/fold/foldcode&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/fold/foldgutter&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/fold/brace-fold&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/fold/comment-fold&#x27;</span>;</span><br></pre></td></tr></table></figure></li>\n<li><code>option</code> 添加配置<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foldGutter: <span class=\"literal\">true</span>, <span class=\"comment\">// 支持折叠</span></span><br><span class=\"line\"><span class=\"attr\">lineWrapping</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"attr\">gutters</span>: [<span class=\"string\">&#x27;CodeMirror-linenumbers&#x27;</span>, <span class=\"string\">&#x27;CodeMirror-foldgutter&#x27;</span>, <span class=\"string\">&#x27;CodeMirror-lint-markers&#x27;</span>],</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/code-fold.gif\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a><span id='search-func'>搜索</span></h4><ul>\n<li>引入样式及脚本文件<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 搜索</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/scroll/annotatescrollbar.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/search/matchesonscrollbar.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/search/match-highlighter.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/search/jump-to-line.js&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/dialog/dialog.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/dialog/dialog.css&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/search/searchcursor.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/search/search.js&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>使用快捷键 <code>ctrl + F</code> 查找<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/search.gif\" alt=\"预览\"></li>\n<li>支持的快捷键</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>ctrl + F</code></td>\n<td>查找</td>\n</tr>\n<tr>\n<td><code>ctrl + G</code></td>\n<td>查找下一个</td>\n</tr>\n<tr>\n<td><code>shift + ctrl + F</code></td>\n<td>查找上一个</td>\n</tr>\n<tr>\n<td><code>shift + ctrl + F</code></td>\n<td>替换</td>\n</tr>\n<tr>\n<td><code>shift + ctrl + R</code></td>\n<td>替换全部</td>\n</tr>\n</tbody></table>\n<ul>\n<li>使用图形交互执行查找替换使用快捷键<blockquote>\n<p>&ensp;&ensp;对于不习惯使用快捷键方式的用户，可以提供 <code>UI</code> 控件，来唤起查找对话框</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">editor = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">mounted = <span class=\"function\"><span class=\"params\">editor</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.editor = editor;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">find = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.editor &amp;&amp; <span class=\"built_in\">this</span>.editor.execCommand(<span class=\"string\">&#x27;find&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Row&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Col</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.find&#125;</span>&gt;</span>查找<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Col</span>&gt;</span></span></span><br><span class=\"line\">&lt;/Row&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">CodeMirror</span> <span class=\"attr\">editorDidMount</span>=<span class=\"string\">&#123;this.mounted&#125;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.value&#125;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/search-ui.gif\" alt=\"预览\"></li>\n<li>其他相关指令用法<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">findNext = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.editor &amp;&amp; <span class=\"built_in\">this</span>.editor.execCommand(<span class=\"string\">&#x27;findNext&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">findPrev = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.editor &amp;&amp; <span class=\"built_in\">this</span>.editor.execCommand(<span class=\"string\">&#x27;findPrev&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">replace = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.editor &amp;&amp; <span class=\"built_in\">this</span>.editor.execCommand(<span class=\"string\">&#x27;replace&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">replaceAll = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.editor &amp;&amp; <span class=\"built_in\">this</span>.editor.execCommand(<span class=\"string\">&#x27;replaceAll&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><a href=\"https://codemirror.net/doc/manual.html#commands\">所有可用的指令</a></li>\n</ul>\n<h4 id=\"语法校验\"><a href=\"#语法校验\" class=\"headerlink\" title=\"语法校验\"></a>语法校验</h4><ul>\n<li>插件目前支持语法校验有：<code>javaScript</code>、<code>coffeeScript</code>、<code>css</code>、<code>html</code>、<code>xml</code>、<code>json</code>，以下以 <code>JavaScript</code> 为例</li>\n<li>引入样式及脚本文件<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 语法错误提示</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/lint/lint.css&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/lint/lint.js&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/lint/javascript-lint.js&#x27;</span>;</span><br></pre></td></tr></table></figure></li>\n<li><code>option</code> 内添加新的配置，启用检测<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">lint:</span> <span class=\"literal\">true</span><span class=\"string\">,</span></span><br></pre></td></tr></table></figure></li>\n<li>启动项目，发现语法检测并没生效，并且控制台报 <code>JSHINT</code> 相关的错误<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javaScript-lint-unwork.png\" alt=\"预览\"></li>\n<li>查找资料，发现插件内的 <code>JavaScript</code> 检测依赖第三方插件 <code>jslint</code>，因此需要在项目中安装该插件，并全局设置该变量<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install jslint --save</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; JSHINT &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;jshint&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.JSHINT = JSHINT;</span><br></pre></td></tr></table></figure></li>\n<li>重新启动项目，可以看到 <code>JavaScript</code> 语法检测生效了<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javascript-lint-success.gif\" alt=\"预览\"></li>\n<li>配合 <code>React</code> 的 <code>state</code> 设置，在出现语法错误时，不允许提交<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">state = &#123;</span><br><span class=\"line\">  <span class=\"attr\">value</span>: _.get(<span class=\"built_in\">this</span>.props, <span class=\"string\">&#x27;initialValue&#x27;</span>, <span class=\"literal\">undefined</span>),</span><br><span class=\"line\">  <span class=\"attr\">validFlag</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">editorChange = <span class=\"function\">(<span class=\"params\">editor, data, value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    editor.showHint();</span><br><span class=\"line\">    <span class=\"comment\">// 获取校验状态</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> validFlag = <span class=\"built_in\">this</span>.validCheck(_.get(editor, <span class=\"string\">&#x27;state.lint.marked&#x27;</span>, []));</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setState(&#123;</span><br><span class=\"line\">        value,</span><br><span class=\"line\">        validFlag</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    _.isFunction(<span class=\"built_in\">this</span>.props.editorChange) &amp;&amp; <span class=\"built_in\">this</span>.props.editorChange(value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 根据类名判断是否出现错误语法</span></span><br><span class=\"line\">validCheck = <span class=\"function\">(<span class=\"params\">marks</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (_.isEmpty(marks)) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> errorFlag = _.isArray(marks) &amp;&amp; marks.findIndex(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.className.indexOf(<span class=\"string\">&#x27;error&#x27;</span>) &gt;= <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> errorFlag &lt; <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javascript-lint-state.gif\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"代码合并\"><a href=\"#代码合并\" class=\"headerlink\" title=\"代码合并\"></a>代码合并</h4><ul>\n<li><a href=\"https://github.com/scniro/react-codemirror2/issues/123\">参考文档</a></li>\n</ul>\n","site":{"data":{}},"length":1359,"excerpt":"","more":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><ul>\n<li><code>react-codemirror2</code> 是基于 <code>CodeMirror</code> 工作原理，可以在React环境中直接使用的一个代码编辑器。<blockquote>\n<p>&ensp;&ensp; <a href=\"https://codemirror.net/\">CodeMirror</a> 是一个用 <code>JavaScript</code> 为浏览器实现的通用文本编辑器。它专门用于编辑代码，并带有多种语言模式和插件，可实现更高级的编辑功能。</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h4><ul>\n<li>安装<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install react-codemirror2 codemirror --save</span><br></pre></td></tr></table></figure></li>\n<li>组件：<code>UnControlled</code> 和 <code>Controlled</code><ul>\n<li><code>react-codemirror2</code> 有两种组件，一种是由 <code>codemirror</code> 本身内部的工作原理提供功能支持，非受控的组件 <code>UnControlled</code>；一种是通过 <code>React</code> 的状态 <code>State</code> 来进行数据控制的受控组件 <code>Controlled</code>。</li>\n</ul>\n</li>\n<li>文件说明</li>\n</ul>\n<p><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/plugins-files-desc.png\" alt=\"文件目录\"></p>\n<table>\n<thead>\n<tr>\n<th>目录</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>addon</td>\n<td>可选的扩展功能配件</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>编辑器当前支持的语言类型</td>\n</tr>\n<tr>\n<td>src</td>\n<td></td>\n</tr>\n<tr>\n<td>theme</td>\n<td>编辑器的样式主题</td>\n</tr>\n</tbody></table>\n<ul>\n<li>特性<ul>\n<li>支持超过 <a href=\"https://codemirror.net/mode/index.html\">100种</a> 开箱即用的语言</li>\n<li>强大的、<a href=\"#%E9%A1%B5%E5%86%85%E8%B7%B3%E8%BD%AC\">可组合</a> 的语言模式系统</li>\n<li><a href=\"https://codemirror.net/doc/manual.html#addon_show-hint\">代码提示，自动完成</a> 提示功能</li>\n<li><a href=\"https://codemirror.net/doc/manual.html#addon_foldcode\">代码折叠</a></li>\n<li>可配置的 <a href=\"https://codemirror.net/doc/manual.html#option_extraKeys\">快捷键绑定</a></li>\n<li>可配置的，基于 <a href=\"https://codemirror.net/demo/vim.html\">Vim</a> 、<a href=\"https://codemirror.net/demo/emacs.html\">Emacs</a> 、<a href=\"https://codemirror.net/demo/sublime.html\">Sublime Text</a> 的键映射绑定</li>\n<li><a href=\"https://codemirror.net/doc/manual.html#addon_search\">查找和替换</a> 操作界面</li>\n<li><a href=\"https://codemirror.net/doc/manual.html#addon_matchbrackets\">括号</a> 和 <a href=\"https://codemirror.net/doc/manual.html#addon_matchtags\">标签</a> 匹配</li>\n<li>支持 <a href=\"https://codemirror.net/demo/buffers.html\">拆分视图</a></li>\n<li>集成 <a href=\"https://codemirror.net/doc/manual.html#addon_lint\">lint</a> 进行语法检测</li>\n<li>可配置的 <a href=\"https://codemirror.net/demo/variableheight.html\">字体大小和样式</a></li>\n<li>大量的可配置 <a href=\"https://codemirror.net/demo/theme.html\">主题</a></li>\n<li>能够调整大小以 <a href=\"https://codemirror.net/demo/resize.html\">自适应内容</a></li>\n<li><a href=\"https://codemirror.net/doc/manual.html#mark_replacedWith\">内联</a> 和 <a href=\"https://codemirror.net/doc/manual.html#mark_replacedWith\">块级</a> 的小部件</li>\n<li>文本标记：<a href=\"https://codemirror.net/doc/manual.html#mark_replacedWith\">受控样式</a> 、<a href=\"https://codemirror.net/doc/manual.html#markText\">只读</a> 、<a href=\"https://codemirror.net/doc/manual.html#markText\">原子</a></li>\n<li><a href=\"https://codemirror.net/demo/bidi.html\">双向文本支持</a> ：<code>LRT</code>、<code>RTL</code></li>\n<li><a href=\"#search-func\">搜索</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><ul>\n<li>文件引入<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;Controlled <span class=\"keyword\">as</span> CodeMirror&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-codemirror2&#x27;</span>; <span class=\"comment\">// 受控组件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/lib/codemirror.css&#x27;</span>; <span class=\"comment\">// 编辑器主体样式</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/theme/material-darker.css&#x27;</span>; <span class=\"comment\">// 编辑器使用 material-darker 主题</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/mode/properties/properties.js&#x27;</span>; <span class=\"comment\">// 编辑器代码语言支持：properties 配置文件</span></span><br></pre></td></tr></table></figure></li>\n<li>组件配置<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">state = &#123;</span><br><span class=\"line\">    <span class=\"attr\">value</span>: _.get(<span class=\"built_in\">this</span>.props, <span class=\"string\">&#x27;initialValue&#x27;</span>, <span class=\"literal\">undefined</span>),</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">editorChange = <span class=\"function\">(<span class=\"params\">editor, data, value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 受控组件设置编辑器内容</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setState(&#123;</span><br><span class=\"line\">        value</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;CodeMirror</span><br><span class=\"line\">    value=&#123;<span class=\"built_in\">this</span>.state.value&#125;</span><br><span class=\"line\">    options=&#123;&#123;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">300</span>,</span><br><span class=\"line\">        <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;properties&#x27;</span>, <span class=\"comment\">// 编辑器语言，需引入语言js文件</span></span><br><span class=\"line\">        <span class=\"attr\">theme</span>: <span class=\"string\">&#x27;material-darker&#x27;</span>, <span class=\"comment\">// 主题配置，需要引入主题样式文件</span></span><br><span class=\"line\">        <span class=\"attr\">lineNumbers</span>: <span class=\"literal\">true</span>,        <span class=\"comment\">// 显示行号</span></span><br><span class=\"line\">    &#125;&#125;</span><br><span class=\"line\">    onBeforeChange=&#123;<span class=\"built_in\">this</span>.editorChange&#125;</span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/editor-demo.png\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"可组合的语言模式\"><a href=\"#可组合的语言模式\" class=\"headerlink\" title=\"可组合的语言模式\"></a>可组合的语言模式</h4><ul>\n<li>编辑器可配置显示多种语言，如常见的 <code>html</code> 文件，就包含三种语言： <code>html</code>、<code>JavaScript</code>、<code>css</code>。官方语言模式中，<code>html</code> 文件有一个内置的集成语言模式配置值： <code>htmlmixed</code><blockquote>\n<p><code>html</code> 语言是基于 <code>xml</code> 语言来解析的，因此如果需要单独配置 <code>html</code> 语言支持，需要引入的是 <code>xml</code> 语言配置 <code>js</code> 文件</p>\n</blockquote>\n<ul>\n<li>引入语言模式文件<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/mode/htmlmixed/htmlmixed.js&#x27;</span>; <span class=\"comment\">// 引入语言模式js文件</span></span><br></pre></td></tr></table></figure></li>\n<li>修改配置中的 <code>mode</code> 属性<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">options=&#123;&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">width:</span> <span class=\"number\">300</span><span class=\"string\">,</span></span><br><span class=\"line\">  <span class=\"attr\">mode:</span> <span class=\"string\">&#x27;htmlmixed&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">&#x27;material-darker&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\">  <span class=\"attr\">lineNumbers:</span> <span class=\"literal\">true</span><span class=\"string\">,</span>              <span class=\"string\">//</span> <span class=\"string\">显示行号</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#125;</span></span><br></pre></td></tr></table></figure></li>\n<li>预览<ul>\n<li>修改前<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/htmlmixed-none.png\" alt=\"预览\"></li>\n<li>修改后<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/htmlmixed-able.png\" alt=\"预览\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"代码提示，自动完成\"><a href=\"#代码提示，自动完成\" class=\"headerlink\" title=\"代码提示，自动完成\"></a>代码提示，自动完成</h4><ul>\n<li>目前插件支持的代码提示有 <code>html</code>、<code>JavaScript</code>、<code>css</code>、<code>xml</code>、<code>sql</code>，以及 <code>anyword</code>，<code>anyword</code> 指在当前文本输入光标附近查找相应的词语进行自动提示。</li>\n<li>以 <code>sql</code> 为例，引入相应的 <code>css</code> 样式 及 <code>js</code> 脚本<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/hint/show-hint.css&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/mode/sql/sql.js&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/hint/show-hint.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/hint/sql-hint.js&#x27;</span>;</span><br></pre></td></tr></table></figure></li>\n<li><code>option</code> 添加 <code>hintOptions</code> 配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">options=&#123;&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">width:</span> <span class=\"number\">300</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">mode:</span> <span class=\"string\">&#x27;sql&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">theme:</span> <span class=\"string\">&#x27;material-darker&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">hintOptions:</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">completeSingle:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;<span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">lineNumbers:</span> <span class=\"literal\">true</span><span class=\"string\">,</span>              <span class=\"string\">//</span> <span class=\"string\">显示行号</span></span><br><span class=\"line\">    <span class=\"attr\">styleActiveLine:</span> <span class=\"literal\">true</span><span class=\"string\">,</span>          <span class=\"string\">//</span> <span class=\"string\">选中行高亮</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#125;</span></span><br></pre></td></tr></table></figure></li>\n<li>在 <code>onBeforeChange</code> 方法内调用 <code>.showHint()</code> 方法<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">editorChange = <span class=\"function\">(<span class=\"params\">editor, data, value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    editor.showHint();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setState(&#123;</span><br><span class=\"line\">        value</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    _.isFunction(<span class=\"built_in\">this</span>.props.editorChange) &amp;&amp; <span class=\"built_in\">this</span>.props.editorChange(value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/hint-sql.gif\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"代码折叠\"><a href=\"#代码折叠\" class=\"headerlink\" title=\"代码折叠\"></a>代码折叠</h4><ul>\n<li>引入样式及脚本文件<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 折叠</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/fold/foldgutter.css&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/fold/foldcode&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/fold/foldgutter&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/fold/brace-fold&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/fold/comment-fold&#x27;</span>;</span><br></pre></td></tr></table></figure></li>\n<li><code>option</code> 添加配置<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foldGutter: <span class=\"literal\">true</span>, <span class=\"comment\">// 支持折叠</span></span><br><span class=\"line\"><span class=\"attr\">lineWrapping</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"attr\">gutters</span>: [<span class=\"string\">&#x27;CodeMirror-linenumbers&#x27;</span>, <span class=\"string\">&#x27;CodeMirror-foldgutter&#x27;</span>, <span class=\"string\">&#x27;CodeMirror-lint-markers&#x27;</span>],</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/code-fold.gif\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a><span id='search-func'>搜索</span></h4><ul>\n<li>引入样式及脚本文件<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 搜索</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/scroll/annotatescrollbar.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/search/matchesonscrollbar.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/search/match-highlighter.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/search/jump-to-line.js&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/dialog/dialog.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/dialog/dialog.css&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/search/searchcursor.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/search/search.js&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>使用快捷键 <code>ctrl + F</code> 查找<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/search.gif\" alt=\"预览\"></li>\n<li>支持的快捷键</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>ctrl + F</code></td>\n<td>查找</td>\n</tr>\n<tr>\n<td><code>ctrl + G</code></td>\n<td>查找下一个</td>\n</tr>\n<tr>\n<td><code>shift + ctrl + F</code></td>\n<td>查找上一个</td>\n</tr>\n<tr>\n<td><code>shift + ctrl + F</code></td>\n<td>替换</td>\n</tr>\n<tr>\n<td><code>shift + ctrl + R</code></td>\n<td>替换全部</td>\n</tr>\n</tbody></table>\n<ul>\n<li>使用图形交互执行查找替换使用快捷键<blockquote>\n<p>&ensp;&ensp;对于不习惯使用快捷键方式的用户，可以提供 <code>UI</code> 控件，来唤起查找对话框</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">editor = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">mounted = <span class=\"function\"><span class=\"params\">editor</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.editor = editor;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">find = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.editor &amp;&amp; <span class=\"built_in\">this</span>.editor.execCommand(<span class=\"string\">&#x27;find&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Row&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Col</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.find&#125;</span>&gt;</span>查找<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Col</span>&gt;</span></span></span><br><span class=\"line\">&lt;/Row&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">CodeMirror</span> <span class=\"attr\">editorDidMount</span>=<span class=\"string\">&#123;this.mounted&#125;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.value&#125;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/search-ui.gif\" alt=\"预览\"></li>\n<li>其他相关指令用法<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">findNext = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.editor &amp;&amp; <span class=\"built_in\">this</span>.editor.execCommand(<span class=\"string\">&#x27;findNext&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">findPrev = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.editor &amp;&amp; <span class=\"built_in\">this</span>.editor.execCommand(<span class=\"string\">&#x27;findPrev&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">replace = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.editor &amp;&amp; <span class=\"built_in\">this</span>.editor.execCommand(<span class=\"string\">&#x27;replace&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">replaceAll = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.editor &amp;&amp; <span class=\"built_in\">this</span>.editor.execCommand(<span class=\"string\">&#x27;replaceAll&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><a href=\"https://codemirror.net/doc/manual.html#commands\">所有可用的指令</a></li>\n</ul>\n<h4 id=\"语法校验\"><a href=\"#语法校验\" class=\"headerlink\" title=\"语法校验\"></a>语法校验</h4><ul>\n<li>插件目前支持语法校验有：<code>javaScript</code>、<code>coffeeScript</code>、<code>css</code>、<code>html</code>、<code>xml</code>、<code>json</code>，以下以 <code>JavaScript</code> 为例</li>\n<li>引入样式及脚本文件<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 语法错误提示</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/lint/lint.css&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/lint/lint.js&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;codemirror/addon/lint/javascript-lint.js&#x27;</span>;</span><br></pre></td></tr></table></figure></li>\n<li><code>option</code> 内添加新的配置，启用检测<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">lint:</span> <span class=\"literal\">true</span><span class=\"string\">,</span></span><br></pre></td></tr></table></figure></li>\n<li>启动项目，发现语法检测并没生效，并且控制台报 <code>JSHINT</code> 相关的错误<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javaScript-lint-unwork.png\" alt=\"预览\"></li>\n<li>查找资料，发现插件内的 <code>JavaScript</code> 检测依赖第三方插件 <code>jslint</code>，因此需要在项目中安装该插件，并全局设置该变量<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install jslint --save</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; JSHINT &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;jshint&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.JSHINT = JSHINT;</span><br></pre></td></tr></table></figure></li>\n<li>重新启动项目，可以看到 <code>JavaScript</code> 语法检测生效了<br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javascript-lint-success.gif\" alt=\"预览\"></li>\n<li>配合 <code>React</code> 的 <code>state</code> 设置，在出现语法错误时，不允许提交<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">state = &#123;</span><br><span class=\"line\">  <span class=\"attr\">value</span>: _.get(<span class=\"built_in\">this</span>.props, <span class=\"string\">&#x27;initialValue&#x27;</span>, <span class=\"literal\">undefined</span>),</span><br><span class=\"line\">  <span class=\"attr\">validFlag</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">editorChange = <span class=\"function\">(<span class=\"params\">editor, data, value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    editor.showHint();</span><br><span class=\"line\">    <span class=\"comment\">// 获取校验状态</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> validFlag = <span class=\"built_in\">this</span>.validCheck(_.get(editor, <span class=\"string\">&#x27;state.lint.marked&#x27;</span>, []));</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setState(&#123;</span><br><span class=\"line\">        value,</span><br><span class=\"line\">        validFlag</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    _.isFunction(<span class=\"built_in\">this</span>.props.editorChange) &amp;&amp; <span class=\"built_in\">this</span>.props.editorChange(value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 根据类名判断是否出现错误语法</span></span><br><span class=\"line\">validCheck = <span class=\"function\">(<span class=\"params\">marks</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (_.isEmpty(marks)) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> errorFlag = _.isArray(marks) &amp;&amp; marks.findIndex(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.className.indexOf(<span class=\"string\">&#x27;error&#x27;</span>) &gt;= <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> errorFlag &lt; <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javascript-lint-state.gif\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"代码合并\"><a href=\"#代码合并\" class=\"headerlink\" title=\"代码合并\"></a>代码合并</h4><ul>\n<li><a href=\"https://github.com/scniro/react-codemirror2/issues/123\">参考文档</a></li>\n</ul>\n"},{"title":"There.js入门系列之React中使用Three.js","date":"2022-01-05T05:27:18.000Z","keywords":["web","ThreeJS","React"],"_content":"## 安装库\n``` bash\n$ npm i three --save\n```","source":"_posts/There-js入门系列之React中使用Three-js.md","raw":"---\ntitle: There.js入门系列之React中使用Three.js\ndate: 2022-01-05 13:27:18\ntags: [web, ThreeJS, React, encrypt]\ncategories:\n- web\n- ThreeJS\nkeywords: [web, ThreeJS, React]\n---\n## 安装库\n``` bash\n$ npm i three --save\n```","slug":"There-js入门系列之React中使用Three-js","published":1,"updated":"2022-01-07T03:21:35.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbp000qokpc81kg22vt","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"密码验证失败，请提供正确的密码.\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"ab9479d48ed7bfca45e173c351eeb258ceb889960d3cf4060cf7cf4551cb71e5\">4630436162ade97ba2718b7d0c4b3b6351ade09e539dfebeb5402828e29e64b0f41eb1e0ff1190f7511b2f172bf61b91eebc2f7ad92bd458a943c3f388d15fd6ffb2ab5dcdd5ca5be7a53be65b3149bb68de244f810ed966192b82228cdc362f088736edaaebe931c47c95f67ac4e50728df6f82eadb0a90e5cfe6620d8a8a6eb19dbbeee5ff4bee397f5e2a06331e852650d318beb5578cbbdda3c37d25f099a3b7f7493d41b725f14299d4e561a775c7cebf554da7b204f69b22c85a4f4d8ebc9b3826ec2750cc9e1ea4ad32fad91d2ebc6ab087580e18304105159ef6f69a27d67bdefafb0d2f7628aa0422745e7726a829b9b2d293c9a0c0832bbc6f5e881ceb4e79c6a082d5afd0578a69d56fc0d8a964539a0f1771a5f25c207c236714cb234097a0e3e7232895ac7cf6342358acd594c34693d181d93ad985f5a6651087a80c93c4a7bbb8f3348ed6cdc6d175</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-surge\">\n      <input class=\"hbe hbe-input-field hbe-input-field-surge\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-surge\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-surge\" data-content=\"输入密码，查看文章\">输入密码，查看文章</span>\n      </label>\n      <svg class=\"hbe hbe-graphic hbe-graphic-surge\" width=\"300%\" height=\"100%\" viewBox=\"0 0 1200 60\" preserveAspectRatio=\"none\">\n        <path d=\"M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z\"></path>\n      </svg>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/blog/lib/hbe.js\"></script><link href=\"/blog/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"length":3,"excerpt":"博文已加密，请提供密码查看！","more":"博文已加密，请提供密码查看！","origin":"<h2 id=\"安装库\"><a href=\"#安装库\" class=\"headerlink\" title=\"安装库\"></a>安装库</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm i three --save</span><br></pre></td></tr></table></figure>","encrypt":true},{"title":"ThreeJS - 知识体系","date":"2022-01-24T08:25:59.000Z","_content":"#### 基于物理的渲染\n","source":"_posts/ThreeJS-知识体系.md","raw":"---\ntitle: ThreeJS - 知识体系\ndate: 2022-01-24 16:25:59\ntags: [ThreeJs]\ncategories: [ThreeJs]\n---\n#### 基于物理的渲染\n","slug":"ThreeJS-知识体系","published":1,"updated":"2022-01-24T08:51:26.252Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbs000uokpcb3ld5azo","content":"<h4 id=\"基于物理的渲染\"><a href=\"#基于物理的渲染\" class=\"headerlink\" title=\"基于物理的渲染\"></a>基于物理的渲染</h4>","site":{"data":{}},"length":7,"excerpt":"","more":"<h4 id=\"基于物理的渲染\"><a href=\"#基于物理的渲染\" class=\"headerlink\" title=\"基于物理的渲染\"></a>基于物理的渲染</h4>"},{"title":"TypeScript - React组件中的类型注解","date":"2022-01-26T07:02:32.000Z","_content":"#### `React` 中可能用到的 `TypeScript` 类型注解\n<details>\n<summary>code</summary>\n\n```typescript\ntype AppProps = {\n  message: string;\n  count: number;\n  disabled: boolean;\n  /** array of a type! */\n  names: string[];\n  /** string literals to specify exact string values, with a union type to join them together */\n  status: \"waiting\" | \"success\";\n  /** any object as long as you dont use its properties (NOT COMMON but useful as placeholder) */\n  obj: object;\n  obj2: {}; // almost the same as `object`, exactly the same as `Object`\n  /** an object with any number of properties (PREFERRED) */\n  obj3: {\n    id: string;\n    title: string;\n  };\n  /** array of objects! (common) */\n  objArr: {\n    id: string;\n    title: string;\n  }[];\n  /** a dict object with any number of properties of the same type */\n  dict1: {\n    [key: string]: MyTypeHere;\n  };\n  dict2: Record<string, MyTypeHere>; // equivalent to dict1\n  /** any function as long as you don't invoke it (not recommended) */\n  onSomething: Function;\n  /** function that doesn't take or return anything (VERY COMMON) */\n  onClick: () => void;\n  /** function with named prop (VERY COMMON) */\n  onChange: (id: number) => void;\n  /** function type syntax that takes an event (VERY COMMON) */\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  /** alternative function type syntax that takes an event (VERY COMMON) */\n  onClick(event: React.MouseEvent<HTMLButtonElement>): void;\n  /** an optional prop (VERY COMMON!) */\n  optional?: OptionalType;\n};\n```\n</details>\n\n#### 在对 `Props` 和 `State` 进行类型注解时，使用 `type` 还是 `interface`?\n- 建议：\n  - 总是使用 `interface` 来为公共库或者第三方环境进行类型定义，因为如果后续发现缺少定义，使用者可以通过声明合并来[扩展](#) `interface`\n  - 考虑使用 `type` 来为 `React` 组件的 `Props` 和 `State` 进行类型定义，这样可以给它们增加更多的限制和提高一致性。\n- 参考资料\n  - [Interface vs Type alias in TypeScript 2.7](https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c)\n  - [Differences Between Type Aliases and Interfaces](https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces)\n- 类型定义对于使用联合类型更有帮助，如 `type MyType = TypeA | TypeB`，而 `interface` 更适合声明字典形状，然后实现或扩展它们\n- `type` 和 `interface` 对比\n  \n  | 对比项 | `type` | `interface` |\n  | --- | --- | --- |\n  | Can describe functions\t| ✅ | ✅ |\n  | Can describe constructors\t| ✅ | ✅| \n  | Can describe tuples\t| ✅ | ✅ |\n  | Interfaces can extend it\t| ⚠️| ✅ |\n  | Classes can extend it\t| 🚫 | ✅ | \n  | Classes can implement it (implements)\t| ⚠️| ✅ | \n  | Can intersect another one of its kind\t| ✅ | ⚠️| \n  | Can create a union with another one of its kind\t| ✅ | 🚫 |\n  | Can be used to create mapped types\t| ✅ | 🚫 | \n  | Can be mapped over with mapped types\t| ✅ | ✅ | \n  | Expands in error messages and logs\t| ✅ | 🚫 | \n  | Can be augmented\t| 🚫 | ✅ | \n  | Can be recursive\t| ⚠️| ✅ | \n- `type alias` 和 `interface` 的区别\n  - 如果在 `type` 类型定义中使用了 `union` 操作符，即 `|`，则不能在具有此类型别名的类上使用 `implements`\n  ```typescript\n  type dog = {\n    color: string\n  }\n  type bean = {\n    fly: boolean\n  }\n  interface cat {\n    sex: string\n  }\n  type animal1 = dog & cat;\n  class cat1 implements animal1 {\n    color = 'red';\n    sex = '1';\n  }\n  // correct !\n  \n  type animal2 = (dog | bean) & cat;\n  class cat2 implements animal2 {\n    color = 'red';\n    sex = '1';\n    fly= true;\n  }\n  // Error! A class can only implement an object type or intersection of object types with statically known members.\n  ```\n  - 同理，如果在 `type` 类型定义中使用了 `union` 操作符，即 `|`，则不能在具有此类型别名的接口中使用 `extends`\n  > 与类实现使用类似，接口是一个“静态”蓝图——它不能以一种或另一种形式存在，因此不能通过联合类型合并来扩展.\n  ```typescript\n  type dog = {\n    color: string\n  }\n  type bean = {\n    fly: boolean\n  }\n  interface cat {\n    sex: string\n  }\n  type animal1 = dog & cat & bean;\n  interface cat1 extends animal1 {}\n  // correct !\n  \n  type animal2 = (dog | bean) & cat;\n  interface cat2 extends animal2 {}\n  // Error! An interface can only extend an object type or intersection of object types with statically known members.\n  ```\n  - 声明合并并不适用于类型别名\n    - 在 `interface` 中的声明合并：可以多次定义同一个接口，其定义将最终合并为一个\n    ```typescript\n    interface cat {\n        sex: string\n    }\n    interface cat {\n        fat: true\n    }\n    const animal1: cat = {\n        sex: '1',\n        fat: true,\n    }\n    // correct !\n    ```\n    - 在 `type alias` 中，由于类型别名是全局或者模块中唯一的，因此不能重复定义相同名称的类型别名\n    ```typescript\n    type dog = {\n        color: string\n    }\n    type dog = {\n        fly: boolean\n    }\n    // Error! Duplicate identifier 'dog'.\n    ```","source":"_posts/TypeScript-React组件中的类型注解.md","raw":"---\ntitle: TypeScript - React组件中的类型注解\ndate: 2022-01-26 15:02:32\ntags: [TypeScript, React]\ncategories: [TypeScript, React Props]\n---\n#### `React` 中可能用到的 `TypeScript` 类型注解\n<details>\n<summary>code</summary>\n\n```typescript\ntype AppProps = {\n  message: string;\n  count: number;\n  disabled: boolean;\n  /** array of a type! */\n  names: string[];\n  /** string literals to specify exact string values, with a union type to join them together */\n  status: \"waiting\" | \"success\";\n  /** any object as long as you dont use its properties (NOT COMMON but useful as placeholder) */\n  obj: object;\n  obj2: {}; // almost the same as `object`, exactly the same as `Object`\n  /** an object with any number of properties (PREFERRED) */\n  obj3: {\n    id: string;\n    title: string;\n  };\n  /** array of objects! (common) */\n  objArr: {\n    id: string;\n    title: string;\n  }[];\n  /** a dict object with any number of properties of the same type */\n  dict1: {\n    [key: string]: MyTypeHere;\n  };\n  dict2: Record<string, MyTypeHere>; // equivalent to dict1\n  /** any function as long as you don't invoke it (not recommended) */\n  onSomething: Function;\n  /** function that doesn't take or return anything (VERY COMMON) */\n  onClick: () => void;\n  /** function with named prop (VERY COMMON) */\n  onChange: (id: number) => void;\n  /** function type syntax that takes an event (VERY COMMON) */\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  /** alternative function type syntax that takes an event (VERY COMMON) */\n  onClick(event: React.MouseEvent<HTMLButtonElement>): void;\n  /** an optional prop (VERY COMMON!) */\n  optional?: OptionalType;\n};\n```\n</details>\n\n#### 在对 `Props` 和 `State` 进行类型注解时，使用 `type` 还是 `interface`?\n- 建议：\n  - 总是使用 `interface` 来为公共库或者第三方环境进行类型定义，因为如果后续发现缺少定义，使用者可以通过声明合并来[扩展](#) `interface`\n  - 考虑使用 `type` 来为 `React` 组件的 `Props` 和 `State` 进行类型定义，这样可以给它们增加更多的限制和提高一致性。\n- 参考资料\n  - [Interface vs Type alias in TypeScript 2.7](https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c)\n  - [Differences Between Type Aliases and Interfaces](https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces)\n- 类型定义对于使用联合类型更有帮助，如 `type MyType = TypeA | TypeB`，而 `interface` 更适合声明字典形状，然后实现或扩展它们\n- `type` 和 `interface` 对比\n  \n  | 对比项 | `type` | `interface` |\n  | --- | --- | --- |\n  | Can describe functions\t| ✅ | ✅ |\n  | Can describe constructors\t| ✅ | ✅| \n  | Can describe tuples\t| ✅ | ✅ |\n  | Interfaces can extend it\t| ⚠️| ✅ |\n  | Classes can extend it\t| 🚫 | ✅ | \n  | Classes can implement it (implements)\t| ⚠️| ✅ | \n  | Can intersect another one of its kind\t| ✅ | ⚠️| \n  | Can create a union with another one of its kind\t| ✅ | 🚫 |\n  | Can be used to create mapped types\t| ✅ | 🚫 | \n  | Can be mapped over with mapped types\t| ✅ | ✅ | \n  | Expands in error messages and logs\t| ✅ | 🚫 | \n  | Can be augmented\t| 🚫 | ✅ | \n  | Can be recursive\t| ⚠️| ✅ | \n- `type alias` 和 `interface` 的区别\n  - 如果在 `type` 类型定义中使用了 `union` 操作符，即 `|`，则不能在具有此类型别名的类上使用 `implements`\n  ```typescript\n  type dog = {\n    color: string\n  }\n  type bean = {\n    fly: boolean\n  }\n  interface cat {\n    sex: string\n  }\n  type animal1 = dog & cat;\n  class cat1 implements animal1 {\n    color = 'red';\n    sex = '1';\n  }\n  // correct !\n  \n  type animal2 = (dog | bean) & cat;\n  class cat2 implements animal2 {\n    color = 'red';\n    sex = '1';\n    fly= true;\n  }\n  // Error! A class can only implement an object type or intersection of object types with statically known members.\n  ```\n  - 同理，如果在 `type` 类型定义中使用了 `union` 操作符，即 `|`，则不能在具有此类型别名的接口中使用 `extends`\n  > 与类实现使用类似，接口是一个“静态”蓝图——它不能以一种或另一种形式存在，因此不能通过联合类型合并来扩展.\n  ```typescript\n  type dog = {\n    color: string\n  }\n  type bean = {\n    fly: boolean\n  }\n  interface cat {\n    sex: string\n  }\n  type animal1 = dog & cat & bean;\n  interface cat1 extends animal1 {}\n  // correct !\n  \n  type animal2 = (dog | bean) & cat;\n  interface cat2 extends animal2 {}\n  // Error! An interface can only extend an object type or intersection of object types with statically known members.\n  ```\n  - 声明合并并不适用于类型别名\n    - 在 `interface` 中的声明合并：可以多次定义同一个接口，其定义将最终合并为一个\n    ```typescript\n    interface cat {\n        sex: string\n    }\n    interface cat {\n        fat: true\n    }\n    const animal1: cat = {\n        sex: '1',\n        fat: true,\n    }\n    // correct !\n    ```\n    - 在 `type alias` 中，由于类型别名是全局或者模块中唯一的，因此不能重复定义相同名称的类型别名\n    ```typescript\n    type dog = {\n        color: string\n    }\n    type dog = {\n        fly: boolean\n    }\n    // Error! Duplicate identifier 'dog'.\n    ```","slug":"TypeScript-React组件中的类型注解","published":1,"updated":"2022-02-11T05:43:56.063Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbt000wokpc0nwrgijb","content":"<h4 id=\"React-中可能用到的-TypeScript-类型注解\"><a href=\"#React-中可能用到的-TypeScript-类型注解\" class=\"headerlink\" title=\"React 中可能用到的 TypeScript 类型注解\"></a><code>React</code> 中可能用到的 <code>TypeScript</code> 类型注解</h4><details>\n<summary>code</summary>\n\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> AppProps = &#123;</span><br><span class=\"line\">  <span class=\"attr\">message</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  count: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  disabled: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** array of a type! */</span></span><br><span class=\"line\">  names: <span class=\"built_in\">string</span>[];</span><br><span class=\"line\">  <span class=\"comment\">/** string literals to specify exact string values, with a union type to join them together */</span></span><br><span class=\"line\">  status: <span class=\"string\">&quot;waiting&quot;</span> | <span class=\"string\">&quot;success&quot;</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** any object as long as you dont use its properties (NOT COMMON but useful as placeholder) */</span></span><br><span class=\"line\">  obj: <span class=\"built_in\">object</span>;</span><br><span class=\"line\">  obj2: &#123;&#125;; <span class=\"comment\">// almost the same as `object`, exactly the same as `Object`</span></span><br><span class=\"line\">  <span class=\"comment\">/** an object with any number of properties (PREFERRED) */</span></span><br><span class=\"line\">  obj3: &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    title: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"comment\">/** array of objects! (common) */</span></span><br><span class=\"line\">  objArr: &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    title: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  &#125;[];</span><br><span class=\"line\">  <span class=\"comment\">/** a dict object with any number of properties of the same type */</span></span><br><span class=\"line\">  dict1: &#123;</span><br><span class=\"line\">    [key: <span class=\"built_in\">string</span>]: MyTypeHere;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  dict2: Record&lt;<span class=\"built_in\">string</span>, MyTypeHere&gt;; <span class=\"comment\">// equivalent to dict1</span></span><br><span class=\"line\">  <span class=\"comment\">/** any function as long as you don&#x27;t invoke it (not recommended) */</span></span><br><span class=\"line\">  onSomething: <span class=\"built_in\">Function</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** function that doesn&#x27;t take or return anything (VERY COMMON) */</span></span><br><span class=\"line\">  onClick: <span class=\"function\">() =&gt;</span> <span class=\"built_in\">void</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** function with named prop (VERY COMMON) */</span></span><br><span class=\"line\">  onChange: <span class=\"function\">(<span class=\"params\">id: <span class=\"built_in\">number</span></span>) =&gt;</span> <span class=\"built_in\">void</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** function type syntax that takes an event (VERY COMMON) */</span></span><br><span class=\"line\">  onChange: <span class=\"function\">(<span class=\"params\">event: React.ChangeEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class=\"built_in\">void</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** alternative function type syntax that takes an event (VERY COMMON) */</span></span><br><span class=\"line\">  onClick(event: React.MouseEvent&lt;HTMLButtonElement&gt;): <span class=\"built_in\">void</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** an optional prop (VERY COMMON!) */</span></span><br><span class=\"line\">  optional?: OptionalType;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</details>\n\n<h4 id=\"在对-Props-和-State-进行类型注解时，使用-type-还是-interface\"><a href=\"#在对-Props-和-State-进行类型注解时，使用-type-还是-interface\" class=\"headerlink\" title=\"在对 Props 和 State 进行类型注解时，使用 type 还是 interface?\"></a>在对 <code>Props</code> 和 <code>State</code> 进行类型注解时，使用 <code>type</code> 还是 <code>interface</code>?</h4><ul>\n<li>建议：<ul>\n<li>总是使用 <code>interface</code> 来为公共库或者第三方环境进行类型定义，因为如果后续发现缺少定义，使用者可以通过声明合并来<a href=\"#\">扩展</a> <code>interface</code></li>\n<li>考虑使用 <code>type</code> 来为 <code>React</code> 组件的 <code>Props</code> 和 <code>State</code> 进行类型定义，这样可以给它们增加更多的限制和提高一致性。</li>\n</ul>\n</li>\n<li>参考资料<ul>\n<li><a href=\"https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c\">Interface vs Type alias in TypeScript 2.7</a></li>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces\">Differences Between Type Aliases and Interfaces</a></li>\n</ul>\n</li>\n<li>类型定义对于使用联合类型更有帮助，如 <code>type MyType = TypeA | TypeB</code>，而 <code>interface</code> 更适合声明字典形状，然后实现或扩展它们</li>\n<li><code>type</code> 和 <code>interface</code> 对比<table>\n<thead>\n<tr>\n<th>对比项</th>\n<th><code>type</code></th>\n<th><code>interface</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Can describe functions</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Can describe constructors</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Can describe tuples</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Interfaces can extend it</td>\n<td>⚠️</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Classes can extend it</td>\n<td>🚫</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Classes can implement it (implements)</td>\n<td>⚠️</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Can intersect another one of its kind</td>\n<td>✅</td>\n<td>⚠️</td>\n</tr>\n<tr>\n<td>Can create a union with another one of its kind</td>\n<td>✅</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>Can be used to create mapped types</td>\n<td>✅</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>Can be mapped over with mapped types</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Expands in error messages and logs</td>\n<td>✅</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>Can be augmented</td>\n<td>🚫</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Can be recursive</td>\n<td>⚠️</td>\n<td>✅</td>\n</tr>\n</tbody></table>\n</li>\n<li><code>type alias</code> 和 <code>interface</code> 的区别<ul>\n<li>如果在 <code>type</code> 类型定义中使用了 <code>union</code> 操作符，即 <code>|</code>，则不能在具有此类型别名的类上使用 <code>implements</code><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> dog = &#123;</span><br><span class=\"line\">  <span class=\"attr\">color</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> bean = &#123;</span><br><span class=\"line\">  <span class=\"attr\">fly</span>: <span class=\"built_in\">boolean</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> cat &#123;</span><br><span class=\"line\">  <span class=\"attr\">sex</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> animal1 = dog &amp; cat;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">cat1</span> <span class=\"title\">implements</span> <span class=\"title\">animal1</span> </span>&#123;</span><br><span class=\"line\">  color = <span class=\"string\">&#x27;red&#x27;</span>;</span><br><span class=\"line\">  sex = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// correct !</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> animal2 = (dog | bean) &amp; cat;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">cat2</span> <span class=\"title\">implements</span> <span class=\"title\">animal2</span> </span>&#123;</span><br><span class=\"line\">  color = <span class=\"string\">&#x27;red&#x27;</span>;</span><br><span class=\"line\">  sex = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\">  fly= <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Error! A class can only implement an object type or intersection of object types with statically known members.</span></span><br></pre></td></tr></table></figure></li>\n<li>同理，如果在 <code>type</code> 类型定义中使用了 <code>union</code> 操作符，即 <code>|</code>，则不能在具有此类型别名的接口中使用 <code>extends</code><blockquote>\n<p>与类实现使用类似，接口是一个“静态”蓝图——它不能以一种或另一种形式存在，因此不能通过联合类型合并来扩展.</p>\n</blockquote>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> dog = &#123;</span><br><span class=\"line\">  <span class=\"attr\">color</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> bean = &#123;</span><br><span class=\"line\">  <span class=\"attr\">fly</span>: <span class=\"built_in\">boolean</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> cat &#123;</span><br><span class=\"line\">  <span class=\"attr\">sex</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> animal1 = dog &amp; cat &amp; bean;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> cat1 <span class=\"keyword\">extends</span> animal1 &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// correct !</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> animal2 = (dog | bean) &amp; cat;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> cat2 <span class=\"keyword\">extends</span> animal2 &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// Error! An interface can only extend an object type or intersection of object types with statically known members.</span></span><br></pre></td></tr></table></figure></li>\n<li>声明合并并不适用于类型别名<ul>\n<li>在 <code>interface</code> 中的声明合并：可以多次定义同一个接口，其定义将最终合并为一个<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> cat &#123;</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> cat &#123;</span><br><span class=\"line\">    <span class=\"attr\">fat</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> animal1: cat = &#123;</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">fat</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// correct !</span></span><br></pre></td></tr></table></figure></li>\n<li>在 <code>type alias</code> 中，由于类型别名是全局或者模块中唯一的，因此不能重复定义相同名称的类型别名<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> dog = &#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> dog = &#123;</span><br><span class=\"line\">    <span class=\"attr\">fly</span>: <span class=\"built_in\">boolean</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Error! Duplicate identifier &#x27;dog&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":1012,"excerpt":"","more":"<h4 id=\"React-中可能用到的-TypeScript-类型注解\"><a href=\"#React-中可能用到的-TypeScript-类型注解\" class=\"headerlink\" title=\"React 中可能用到的 TypeScript 类型注解\"></a><code>React</code> 中可能用到的 <code>TypeScript</code> 类型注解</h4><details>\n<summary>code</summary>\n\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> AppProps = &#123;</span><br><span class=\"line\">  <span class=\"attr\">message</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  count: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  disabled: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** array of a type! */</span></span><br><span class=\"line\">  names: <span class=\"built_in\">string</span>[];</span><br><span class=\"line\">  <span class=\"comment\">/** string literals to specify exact string values, with a union type to join them together */</span></span><br><span class=\"line\">  status: <span class=\"string\">&quot;waiting&quot;</span> | <span class=\"string\">&quot;success&quot;</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** any object as long as you dont use its properties (NOT COMMON but useful as placeholder) */</span></span><br><span class=\"line\">  obj: <span class=\"built_in\">object</span>;</span><br><span class=\"line\">  obj2: &#123;&#125;; <span class=\"comment\">// almost the same as `object`, exactly the same as `Object`</span></span><br><span class=\"line\">  <span class=\"comment\">/** an object with any number of properties (PREFERRED) */</span></span><br><span class=\"line\">  obj3: &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    title: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"comment\">/** array of objects! (common) */</span></span><br><span class=\"line\">  objArr: &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    title: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  &#125;[];</span><br><span class=\"line\">  <span class=\"comment\">/** a dict object with any number of properties of the same type */</span></span><br><span class=\"line\">  dict1: &#123;</span><br><span class=\"line\">    [key: <span class=\"built_in\">string</span>]: MyTypeHere;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  dict2: Record&lt;<span class=\"built_in\">string</span>, MyTypeHere&gt;; <span class=\"comment\">// equivalent to dict1</span></span><br><span class=\"line\">  <span class=\"comment\">/** any function as long as you don&#x27;t invoke it (not recommended) */</span></span><br><span class=\"line\">  onSomething: <span class=\"built_in\">Function</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** function that doesn&#x27;t take or return anything (VERY COMMON) */</span></span><br><span class=\"line\">  onClick: <span class=\"function\">() =&gt;</span> <span class=\"built_in\">void</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** function with named prop (VERY COMMON) */</span></span><br><span class=\"line\">  onChange: <span class=\"function\">(<span class=\"params\">id: <span class=\"built_in\">number</span></span>) =&gt;</span> <span class=\"built_in\">void</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** function type syntax that takes an event (VERY COMMON) */</span></span><br><span class=\"line\">  onChange: <span class=\"function\">(<span class=\"params\">event: React.ChangeEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class=\"built_in\">void</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** alternative function type syntax that takes an event (VERY COMMON) */</span></span><br><span class=\"line\">  onClick(event: React.MouseEvent&lt;HTMLButtonElement&gt;): <span class=\"built_in\">void</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** an optional prop (VERY COMMON!) */</span></span><br><span class=\"line\">  optional?: OptionalType;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</details>\n\n<h4 id=\"在对-Props-和-State-进行类型注解时，使用-type-还是-interface\"><a href=\"#在对-Props-和-State-进行类型注解时，使用-type-还是-interface\" class=\"headerlink\" title=\"在对 Props 和 State 进行类型注解时，使用 type 还是 interface?\"></a>在对 <code>Props</code> 和 <code>State</code> 进行类型注解时，使用 <code>type</code> 还是 <code>interface</code>?</h4><ul>\n<li>建议：<ul>\n<li>总是使用 <code>interface</code> 来为公共库或者第三方环境进行类型定义，因为如果后续发现缺少定义，使用者可以通过声明合并来<a href=\"#\">扩展</a> <code>interface</code></li>\n<li>考虑使用 <code>type</code> 来为 <code>React</code> 组件的 <code>Props</code> 和 <code>State</code> 进行类型定义，这样可以给它们增加更多的限制和提高一致性。</li>\n</ul>\n</li>\n<li>参考资料<ul>\n<li><a href=\"https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c\">Interface vs Type alias in TypeScript 2.7</a></li>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces\">Differences Between Type Aliases and Interfaces</a></li>\n</ul>\n</li>\n<li>类型定义对于使用联合类型更有帮助，如 <code>type MyType = TypeA | TypeB</code>，而 <code>interface</code> 更适合声明字典形状，然后实现或扩展它们</li>\n<li><code>type</code> 和 <code>interface</code> 对比<table>\n<thead>\n<tr>\n<th>对比项</th>\n<th><code>type</code></th>\n<th><code>interface</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Can describe functions</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Can describe constructors</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Can describe tuples</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Interfaces can extend it</td>\n<td>⚠️</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Classes can extend it</td>\n<td>🚫</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Classes can implement it (implements)</td>\n<td>⚠️</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Can intersect another one of its kind</td>\n<td>✅</td>\n<td>⚠️</td>\n</tr>\n<tr>\n<td>Can create a union with another one of its kind</td>\n<td>✅</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>Can be used to create mapped types</td>\n<td>✅</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>Can be mapped over with mapped types</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Expands in error messages and logs</td>\n<td>✅</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>Can be augmented</td>\n<td>🚫</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Can be recursive</td>\n<td>⚠️</td>\n<td>✅</td>\n</tr>\n</tbody></table>\n</li>\n<li><code>type alias</code> 和 <code>interface</code> 的区别<ul>\n<li>如果在 <code>type</code> 类型定义中使用了 <code>union</code> 操作符，即 <code>|</code>，则不能在具有此类型别名的类上使用 <code>implements</code><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> dog = &#123;</span><br><span class=\"line\">  <span class=\"attr\">color</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> bean = &#123;</span><br><span class=\"line\">  <span class=\"attr\">fly</span>: <span class=\"built_in\">boolean</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> cat &#123;</span><br><span class=\"line\">  <span class=\"attr\">sex</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> animal1 = dog &amp; cat;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">cat1</span> <span class=\"title\">implements</span> <span class=\"title\">animal1</span> </span>&#123;</span><br><span class=\"line\">  color = <span class=\"string\">&#x27;red&#x27;</span>;</span><br><span class=\"line\">  sex = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// correct !</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> animal2 = (dog | bean) &amp; cat;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">cat2</span> <span class=\"title\">implements</span> <span class=\"title\">animal2</span> </span>&#123;</span><br><span class=\"line\">  color = <span class=\"string\">&#x27;red&#x27;</span>;</span><br><span class=\"line\">  sex = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\">  fly= <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Error! A class can only implement an object type or intersection of object types with statically known members.</span></span><br></pre></td></tr></table></figure></li>\n<li>同理，如果在 <code>type</code> 类型定义中使用了 <code>union</code> 操作符，即 <code>|</code>，则不能在具有此类型别名的接口中使用 <code>extends</code><blockquote>\n<p>与类实现使用类似，接口是一个“静态”蓝图——它不能以一种或另一种形式存在，因此不能通过联合类型合并来扩展.</p>\n</blockquote>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> dog = &#123;</span><br><span class=\"line\">  <span class=\"attr\">color</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> bean = &#123;</span><br><span class=\"line\">  <span class=\"attr\">fly</span>: <span class=\"built_in\">boolean</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> cat &#123;</span><br><span class=\"line\">  <span class=\"attr\">sex</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> animal1 = dog &amp; cat &amp; bean;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> cat1 <span class=\"keyword\">extends</span> animal1 &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// correct !</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> animal2 = (dog | bean) &amp; cat;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> cat2 <span class=\"keyword\">extends</span> animal2 &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// Error! An interface can only extend an object type or intersection of object types with statically known members.</span></span><br></pre></td></tr></table></figure></li>\n<li>声明合并并不适用于类型别名<ul>\n<li>在 <code>interface</code> 中的声明合并：可以多次定义同一个接口，其定义将最终合并为一个<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> cat &#123;</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> cat &#123;</span><br><span class=\"line\">    <span class=\"attr\">fat</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> animal1: cat = &#123;</span><br><span class=\"line\">    <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">fat</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// correct !</span></span><br></pre></td></tr></table></figure></li>\n<li>在 <code>type alias</code> 中，由于类型别名是全局或者模块中唯一的，因此不能重复定义相同名称的类型别名<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> dog = &#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> dog = &#123;</span><br><span class=\"line\">    <span class=\"attr\">fly</span>: <span class=\"built_in\">boolean</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Error! Duplicate identifier &#x27;dog&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Typescript - 基础","date":"2022-01-25T06:34:15.000Z","_content":"#### 什么是 `TypeScript`\n> `TypeScript` 是 `JavaScript` 的一个超集。\n\n#### 学习文档\n- `TypeScript with React` [Link](https://react-typescript-cheatsheet.netlify.app/docs/basic/setup/)\n- 进度\n  - [Link](https://2ality.com/2018/04/type-notation-typescript.html#typing-objects)\n\n#### 类型注解\n- 在变量名后面接着一个冒号，冒号后面跟着类型表达式，表达式描述了这个变量可以具有的值。\n ```typescript\n let x: number;\n ```\n- 上述表达式，定义了一个数字类型的变量 `x`。你也许会有疑问，`x` 在定义时，没有指定具体的值，按理值应该是 `undefined`，这就与定义的 `number` 类型不一样了。`TypeScript` 针对这种变量定义未赋值的情况，是不允许程序后续读取的。\n```typescript\nlet a: number;\nalert(a);\n// Variable 'a' is used before being assigned.\n```\n\n#### 类型表达式\n- 针对 `JavaScript` 设定的类型可选表达式\n  - `undefined`、`null`\n  - `boolean`、`number`、`string`\n  - `symbol`\n  - `object`\n- `TypeScript` 特有的\n  - `Array`\n  - `any`\n  - `...`\n- 除了上述的单一类型，有很多方法可以将这些类型组合成新的[联合类型](#union-type)，如使用交并集符号 `(U)`、`(∩)`。[更多](#)\n\n#### 类型别名\n- 可以针对某一个类型，使用 `type` 关键字创建别名\n```typescript\ntype Age = number;\nlet age: Age = 2;\n```\n\n#### 类型推断\n- 并不是在任何时候都需要显示地指定定义变量的类型，`TypeScript` 会依照类型推断的规则，推断出变量的类型\n  - 如下代码，根据类型推断规则，变量 `a` 被推断为 `number` 类型，如果后续更改为其他类型，将报错\n```typescript\nlet a = 1;\nconsole.log(typeof a);\n// \"number\"\na = 'a';\n// Type 'string' is not assignable to type 'number'.\n```\n\n#### `TypeScript` 中的类型\n> &ensp;&ensp;`JavaScript` 中有8中[数据类型](#)，分别是 `Undefined`、`Null`、`Boolean`、`String`、`Number`、`BigInt`、`Symbol`、`Object`。所有这些数据的类型是动态的，可以再程序运行时修改数据的类型。\n- 布尔值：使用 `boolean` 定义的值\n  - 定义\n    ```typescript\n    let isDone: boolean = false;\n    ```\n  - 当修改成其他类型的值时，会报错\n    ```typescript\n    let isDone: boolean = false;\n    isDone = 3;\n    // .code.tio.ts(2,1): error TS2322: Type '3' is not assignable to type 'boolean'.\n    ```\n  - 通过构造函数 `Boolean` 创建的实例对象不是 `boolean` 类型的值，而是一个 `Boolean` 对象，因此不能通过 `Boolean` 创建实例对象赋值给 `boolean` 定义的变量\n    ```typescript\n    let a: boolean = false;\n    a = new Boolean(1);\n    // Type 'Boolean' is not assignable to type 'boolean'.\n    // 'boolean' is a primitive, but 'Boolean' is a wrapper object. Prefer using 'boolean' when possible.\n    ```\n- 数值型：使用 `number` 定义的值\n  - 定义\n    ```typescript\n    let num: number = 4;\n    ```\n  - 同样的，无法通过构造函数 `Number` 创建的实例对象赋值给 `number` 类型的变量\n  - 特别的，可以将十六进制、二进制、八进制、`NaN` 及 `Infinity`【表示无穷大的数值，超出 1.7976931348623157E+103088 的数值】赋值给 `number` 类型的变量\n    ```typescript\n    let num: number = 4;\n    num = 0xf00d;\n    num = 0b1010;\n    num = 0o744;\n    num = NaN;\n    num = Infinity;\n    ```\n- 字符串类型：使用 `string` 定义的值\n  - 定义\n    ```typescript\n    let str: string = '2';\n    let stri = `String is ${str}`;\n    ```\n- 数组\n  - `JavaScript` 数组在 `TypeScript` 中有两种表现形式，`List` 和 `Tuple`\n  - `List`：集合捏所有元素的类型相同，但是集合的长度不固定\n    - 定义\n      - 两种定义方式\n      ```typescript\n      let arr1: number[] = [];\n      let arr2: Array<number> = [];\n      ```\n  - `Tuple`：元组内元素的类型不一定都一样，但是元组的长度是固定的\n    - 定义\n    ```typescript\n    let point: [number, number] = [7, 5];\n    let points: [string, number] = ['a', 1];\n    ```\n- 函数\n  - 简写方式\n  ```typescript\n  (num: number) => string\n  ```\n  - 完整写法\n  ```typescript\n  const func: (num: number) => string =\n  (num: number) => String(num);\n  ```\n  - 复杂的例子\n  ```typescript\n  function stringify123(callback: (num: number) => string) {\n    return callback(123);\n  }\n  stringify123();\n  // Expected 1 arguments, but got 0.\n  stringify123(123);\n  // Argument of type 'number' is not assignable to parameter of type '(num: number) => string'.\n  stringify123('123');\n  // Argument of type 'number' is not assignable to parameter of type '(num: number) => string'.\n  stringify123(Number);\n  // Argument of type 'NumberConstructor' is not assignable to parameter of type '(num: number) => string'.\n  // Type 'number' is not assignable to type 'string'.\n  stringify123(String);\n  stringify123(() => '123');\n  ```\n  - 上述 `stringify123` 函数，返回的是 `string` 类型，我们没有显示地指定函数的返回类型，大多数情况下，推荐对所有的参数都显示地注明数据类型\n  ```typescript\n  function stringify123(callback: (num: number) => string): string {\n    return callback(123);\n  }\n  ```\n  - 特殊的类型注解：`void`\n  > &ensp;&ensp;`void` 是函数的一种特殊结果类型：它告诉 `TypeScript` 函数总是返回 `undefined`（显式或隐式）\n  ```typescript\n  function f1(): void { return undefined } // 显示\n  function f2(): void { } // 隐式\n  function f3(): void { return 'abc' }\n  // Type 'string' is not assignable to type 'void'.\n  ```\n  - 可选的参数：标识符 `?`后面的参数表示是可选参数\n  ```typescript\n  function stringify123(callback?: (num: number) => string) {\n    if (callback === undefined) {\n      callback = String;\n    }\n    return callback(123);\n  }\n  \n  stringify123();\n  stringify123('234');\n  // Argument of type '\"234\"' is not assignable to parameter of type '((num: number) => string) | undefined'.\n  stringify123(String);\n  ```\n  - 参数默认值：配置了参数默认值，这种情况下，参数的类型注解是可选的，因为 `TypeScript` 会根据参数默认值推断出参数的类型\n  ```typescript\n  function createPoint(x=0, y=0): [number, number] {\n    return [x, y];\n  }\n  createPoint();\n  createPoint(1,2);\n  createPoint('1', 2);\n  // Argument of type '\"\"' is not assignable to parameter of type 'number | undefined'.\n  ```\n  - 剩余参数：剩余参数必须是数组类型\n  ```typescript\n  function joinNumbers(a: string, ...nums: number[]): string {\n    return nums.join('-');\n  }\n  joinNumbers(1, 2, 3);\n  // Argument of type 'number' is not assignable to parameter of type 'string'.\n  joinNumbers('1',2,'a');\n  // Argument of type 'string' is not assignable to parameter of type 'number'.\n  joinNumbers('1',2,3);\n  ```\n- <span id='union-type'>联合类型</span>\n  - 在 `JavaScript` 中，变量的类型是动态的，一个变量的类型，在程序的运行过程中，可能处于不同的类型，为了描述这些变量，在 `TypeScript` 中，可以使用联合类型，联合类型使用 `|` 分割\n  ```typescript\n  function getScore(numberOrString: number|string): number {\n    if (typeof numberOrString === 'string'\n      && /^\\*{1,5}$/.test(numberOrString)) {\n        return numberOrString.length;\n    } else if (typeof numberOrString === 'number'\n      && numberOrString >= 1 && numberOrString <= 5) {\n      return numberOrString\n    } else {\n      throw new Error('Illegal value: ' + JSON.stringify(numberOrString));\n    }\n  }\n  getScore(1);\n  getScore('a');\n  getScore(true);\n  // Argument of type 'boolean' is not assignable to parameter of type 'string | number'.\n  ```\n  - 默认情况下，除非显示地指定，否则联合类型是不包括 `undefined` 和 `null` 的。\n  ```typescript\n  getScore(undefined);\n  // Argument of type 'undefined' is not assignable to parameter of type 'string | number'.\n  getScore(null);\n  // Argument of type 'null' is not assignable to parameter of type 'string | number'.\n  ```\n- 比较：可选、默认值、联合类型：`undefined | null`\n  - 如果参数是可选的，那参数可以被省略，省略时值默认为 `undefined`，不省略，只能传给定类型的值\n  ```typescript\n  function f1(x?: number) { console.log(x) };\n  f1(); // undefined\n  f1(1); // 1\n  f1('a');\n  // Argument of type '\"a\"' is not assignable to parameter of type 'number | undefined'.\n  ```\n  - 如果参数是有默认值的，参数的值也是可选的，省略时，参数的值为给定的默认值。不省略时，除了传给定类型的值外，还可以指定为 `undefined`\n  ```typescript\n  function f1(x = 1) { console.log(x) };\n  f1(); // 1\n  f1(1); // 1\n  f1(undefined); // undefined\n  f1(null);\n  // Argument of type 'null' is not assignable to parameter of type 'number | undefined'.\n  f1('a');\n  // Argument of type '\"a\"' is not assignable to parameter of type 'number | undefined'.\n  ```\n  - 如果是联合类型：`undefined | null`，那参数是不能省略的\n  ```typescript\n  function f1(x: number | undefined) { console.log(x) };\n  f1();\n  // Expected 1 arguments, but got 0.\n  f1(1);\n  f1(undefined);\n  ```\n- 对象类型","source":"_posts/Typescript-基础.md","raw":"---\ntitle: Typescript - 基础\ndate: 2022-01-25 14:34:15\ntags: [TypeScript]\ncategories: [TypeScript]\n---\n#### 什么是 `TypeScript`\n> `TypeScript` 是 `JavaScript` 的一个超集。\n\n#### 学习文档\n- `TypeScript with React` [Link](https://react-typescript-cheatsheet.netlify.app/docs/basic/setup/)\n- 进度\n  - [Link](https://2ality.com/2018/04/type-notation-typescript.html#typing-objects)\n\n#### 类型注解\n- 在变量名后面接着一个冒号，冒号后面跟着类型表达式，表达式描述了这个变量可以具有的值。\n ```typescript\n let x: number;\n ```\n- 上述表达式，定义了一个数字类型的变量 `x`。你也许会有疑问，`x` 在定义时，没有指定具体的值，按理值应该是 `undefined`，这就与定义的 `number` 类型不一样了。`TypeScript` 针对这种变量定义未赋值的情况，是不允许程序后续读取的。\n```typescript\nlet a: number;\nalert(a);\n// Variable 'a' is used before being assigned.\n```\n\n#### 类型表达式\n- 针对 `JavaScript` 设定的类型可选表达式\n  - `undefined`、`null`\n  - `boolean`、`number`、`string`\n  - `symbol`\n  - `object`\n- `TypeScript` 特有的\n  - `Array`\n  - `any`\n  - `...`\n- 除了上述的单一类型，有很多方法可以将这些类型组合成新的[联合类型](#union-type)，如使用交并集符号 `(U)`、`(∩)`。[更多](#)\n\n#### 类型别名\n- 可以针对某一个类型，使用 `type` 关键字创建别名\n```typescript\ntype Age = number;\nlet age: Age = 2;\n```\n\n#### 类型推断\n- 并不是在任何时候都需要显示地指定定义变量的类型，`TypeScript` 会依照类型推断的规则，推断出变量的类型\n  - 如下代码，根据类型推断规则，变量 `a` 被推断为 `number` 类型，如果后续更改为其他类型，将报错\n```typescript\nlet a = 1;\nconsole.log(typeof a);\n// \"number\"\na = 'a';\n// Type 'string' is not assignable to type 'number'.\n```\n\n#### `TypeScript` 中的类型\n> &ensp;&ensp;`JavaScript` 中有8中[数据类型](#)，分别是 `Undefined`、`Null`、`Boolean`、`String`、`Number`、`BigInt`、`Symbol`、`Object`。所有这些数据的类型是动态的，可以再程序运行时修改数据的类型。\n- 布尔值：使用 `boolean` 定义的值\n  - 定义\n    ```typescript\n    let isDone: boolean = false;\n    ```\n  - 当修改成其他类型的值时，会报错\n    ```typescript\n    let isDone: boolean = false;\n    isDone = 3;\n    // .code.tio.ts(2,1): error TS2322: Type '3' is not assignable to type 'boolean'.\n    ```\n  - 通过构造函数 `Boolean` 创建的实例对象不是 `boolean` 类型的值，而是一个 `Boolean` 对象，因此不能通过 `Boolean` 创建实例对象赋值给 `boolean` 定义的变量\n    ```typescript\n    let a: boolean = false;\n    a = new Boolean(1);\n    // Type 'Boolean' is not assignable to type 'boolean'.\n    // 'boolean' is a primitive, but 'Boolean' is a wrapper object. Prefer using 'boolean' when possible.\n    ```\n- 数值型：使用 `number` 定义的值\n  - 定义\n    ```typescript\n    let num: number = 4;\n    ```\n  - 同样的，无法通过构造函数 `Number` 创建的实例对象赋值给 `number` 类型的变量\n  - 特别的，可以将十六进制、二进制、八进制、`NaN` 及 `Infinity`【表示无穷大的数值，超出 1.7976931348623157E+103088 的数值】赋值给 `number` 类型的变量\n    ```typescript\n    let num: number = 4;\n    num = 0xf00d;\n    num = 0b1010;\n    num = 0o744;\n    num = NaN;\n    num = Infinity;\n    ```\n- 字符串类型：使用 `string` 定义的值\n  - 定义\n    ```typescript\n    let str: string = '2';\n    let stri = `String is ${str}`;\n    ```\n- 数组\n  - `JavaScript` 数组在 `TypeScript` 中有两种表现形式，`List` 和 `Tuple`\n  - `List`：集合捏所有元素的类型相同，但是集合的长度不固定\n    - 定义\n      - 两种定义方式\n      ```typescript\n      let arr1: number[] = [];\n      let arr2: Array<number> = [];\n      ```\n  - `Tuple`：元组内元素的类型不一定都一样，但是元组的长度是固定的\n    - 定义\n    ```typescript\n    let point: [number, number] = [7, 5];\n    let points: [string, number] = ['a', 1];\n    ```\n- 函数\n  - 简写方式\n  ```typescript\n  (num: number) => string\n  ```\n  - 完整写法\n  ```typescript\n  const func: (num: number) => string =\n  (num: number) => String(num);\n  ```\n  - 复杂的例子\n  ```typescript\n  function stringify123(callback: (num: number) => string) {\n    return callback(123);\n  }\n  stringify123();\n  // Expected 1 arguments, but got 0.\n  stringify123(123);\n  // Argument of type 'number' is not assignable to parameter of type '(num: number) => string'.\n  stringify123('123');\n  // Argument of type 'number' is not assignable to parameter of type '(num: number) => string'.\n  stringify123(Number);\n  // Argument of type 'NumberConstructor' is not assignable to parameter of type '(num: number) => string'.\n  // Type 'number' is not assignable to type 'string'.\n  stringify123(String);\n  stringify123(() => '123');\n  ```\n  - 上述 `stringify123` 函数，返回的是 `string` 类型，我们没有显示地指定函数的返回类型，大多数情况下，推荐对所有的参数都显示地注明数据类型\n  ```typescript\n  function stringify123(callback: (num: number) => string): string {\n    return callback(123);\n  }\n  ```\n  - 特殊的类型注解：`void`\n  > &ensp;&ensp;`void` 是函数的一种特殊结果类型：它告诉 `TypeScript` 函数总是返回 `undefined`（显式或隐式）\n  ```typescript\n  function f1(): void { return undefined } // 显示\n  function f2(): void { } // 隐式\n  function f3(): void { return 'abc' }\n  // Type 'string' is not assignable to type 'void'.\n  ```\n  - 可选的参数：标识符 `?`后面的参数表示是可选参数\n  ```typescript\n  function stringify123(callback?: (num: number) => string) {\n    if (callback === undefined) {\n      callback = String;\n    }\n    return callback(123);\n  }\n  \n  stringify123();\n  stringify123('234');\n  // Argument of type '\"234\"' is not assignable to parameter of type '((num: number) => string) | undefined'.\n  stringify123(String);\n  ```\n  - 参数默认值：配置了参数默认值，这种情况下，参数的类型注解是可选的，因为 `TypeScript` 会根据参数默认值推断出参数的类型\n  ```typescript\n  function createPoint(x=0, y=0): [number, number] {\n    return [x, y];\n  }\n  createPoint();\n  createPoint(1,2);\n  createPoint('1', 2);\n  // Argument of type '\"\"' is not assignable to parameter of type 'number | undefined'.\n  ```\n  - 剩余参数：剩余参数必须是数组类型\n  ```typescript\n  function joinNumbers(a: string, ...nums: number[]): string {\n    return nums.join('-');\n  }\n  joinNumbers(1, 2, 3);\n  // Argument of type 'number' is not assignable to parameter of type 'string'.\n  joinNumbers('1',2,'a');\n  // Argument of type 'string' is not assignable to parameter of type 'number'.\n  joinNumbers('1',2,3);\n  ```\n- <span id='union-type'>联合类型</span>\n  - 在 `JavaScript` 中，变量的类型是动态的，一个变量的类型，在程序的运行过程中，可能处于不同的类型，为了描述这些变量，在 `TypeScript` 中，可以使用联合类型，联合类型使用 `|` 分割\n  ```typescript\n  function getScore(numberOrString: number|string): number {\n    if (typeof numberOrString === 'string'\n      && /^\\*{1,5}$/.test(numberOrString)) {\n        return numberOrString.length;\n    } else if (typeof numberOrString === 'number'\n      && numberOrString >= 1 && numberOrString <= 5) {\n      return numberOrString\n    } else {\n      throw new Error('Illegal value: ' + JSON.stringify(numberOrString));\n    }\n  }\n  getScore(1);\n  getScore('a');\n  getScore(true);\n  // Argument of type 'boolean' is not assignable to parameter of type 'string | number'.\n  ```\n  - 默认情况下，除非显示地指定，否则联合类型是不包括 `undefined` 和 `null` 的。\n  ```typescript\n  getScore(undefined);\n  // Argument of type 'undefined' is not assignable to parameter of type 'string | number'.\n  getScore(null);\n  // Argument of type 'null' is not assignable to parameter of type 'string | number'.\n  ```\n- 比较：可选、默认值、联合类型：`undefined | null`\n  - 如果参数是可选的，那参数可以被省略，省略时值默认为 `undefined`，不省略，只能传给定类型的值\n  ```typescript\n  function f1(x?: number) { console.log(x) };\n  f1(); // undefined\n  f1(1); // 1\n  f1('a');\n  // Argument of type '\"a\"' is not assignable to parameter of type 'number | undefined'.\n  ```\n  - 如果参数是有默认值的，参数的值也是可选的，省略时，参数的值为给定的默认值。不省略时，除了传给定类型的值外，还可以指定为 `undefined`\n  ```typescript\n  function f1(x = 1) { console.log(x) };\n  f1(); // 1\n  f1(1); // 1\n  f1(undefined); // undefined\n  f1(null);\n  // Argument of type 'null' is not assignable to parameter of type 'number | undefined'.\n  f1('a');\n  // Argument of type '\"a\"' is not assignable to parameter of type 'number | undefined'.\n  ```\n  - 如果是联合类型：`undefined | null`，那参数是不能省略的\n  ```typescript\n  function f1(x: number | undefined) { console.log(x) };\n  f1();\n  // Expected 1 arguments, but got 0.\n  f1(1);\n  f1(undefined);\n  ```\n- 对象类型","slug":"Typescript-基础","published":1,"updated":"2022-01-26T06:57:06.167Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbt0010okpc0h439q3x","content":"<h4 id=\"什么是-TypeScript\"><a href=\"#什么是-TypeScript\" class=\"headerlink\" title=\"什么是 TypeScript\"></a>什么是 <code>TypeScript</code></h4><blockquote>\n<p><code>TypeScript</code> 是 <code>JavaScript</code> 的一个超集。</p>\n</blockquote>\n<h4 id=\"学习文档\"><a href=\"#学习文档\" class=\"headerlink\" title=\"学习文档\"></a>学习文档</h4><ul>\n<li><code>TypeScript with React</code> <a href=\"https://react-typescript-cheatsheet.netlify.app/docs/basic/setup/\">Link</a></li>\n<li>进度<ul>\n<li><a href=\"https://2ality.com/2018/04/type-notation-typescript.html#typing-objects\">Link</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"类型注解\"><a href=\"#类型注解\" class=\"headerlink\" title=\"类型注解\"></a>类型注解</h4><ul>\n<li>在变量名后面接着一个冒号，冒号后面跟着类型表达式，表达式描述了这个变量可以具有的值。<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x: <span class=\"built_in\">number</span>;</span><br></pre></td></tr></table></figure></li>\n<li>上述表达式，定义了一个数字类型的变量 <code>x</code>。你也许会有疑问，<code>x</code> 在定义时，没有指定具体的值，按理值应该是 <code>undefined</code>，这就与定义的 <code>number</code> 类型不一样了。<code>TypeScript</code> 针对这种变量定义未赋值的情况，是不允许程序后续读取的。<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">alert(a);</span><br><span class=\"line\"><span class=\"comment\">// Variable &#x27;a&#x27; is used before being assigned.</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"类型表达式\"><a href=\"#类型表达式\" class=\"headerlink\" title=\"类型表达式\"></a>类型表达式</h4><ul>\n<li>针对 <code>JavaScript</code> 设定的类型可选表达式<ul>\n<li><code>undefined</code>、<code>null</code></li>\n<li><code>boolean</code>、<code>number</code>、<code>string</code></li>\n<li><code>symbol</code></li>\n<li><code>object</code></li>\n</ul>\n</li>\n<li><code>TypeScript</code> 特有的<ul>\n<li><code>Array</code></li>\n<li><code>any</code></li>\n<li><code>...</code></li>\n</ul>\n</li>\n<li>除了上述的单一类型，有很多方法可以将这些类型组合成新的<a href=\"#union-type\">联合类型</a>，如使用交并集符号 <code>(U)</code>、<code>(∩)</code>。<a href=\"#\">更多</a></li>\n</ul>\n<h4 id=\"类型别名\"><a href=\"#类型别名\" class=\"headerlink\" title=\"类型别名\"></a>类型别名</h4><ul>\n<li>可以针对某一个类型，使用 <code>type</code> 关键字创建别名<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Age = <span class=\"built_in\">number</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> age: Age = <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"类型推断\"><a href=\"#类型推断\" class=\"headerlink\" title=\"类型推断\"></a>类型推断</h4><ul>\n<li>并不是在任何时候都需要显示地指定定义变量的类型，<code>TypeScript</code> 会依照类型推断的规则，推断出变量的类型<ul>\n<li>如下代码，根据类型推断规则，变量 <code>a</code> 被推断为 <code>number</code> 类型，如果后续更改为其他类型，将报错<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> a);</span><br><span class=\"line\"><span class=\"comment\">// &quot;number&quot;</span></span><br><span class=\"line\">a = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// Type &#x27;string&#x27; is not assignable to type &#x27;number&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"TypeScript-中的类型\"><a href=\"#TypeScript-中的类型\" class=\"headerlink\" title=\"TypeScript 中的类型\"></a><code>TypeScript</code> 中的类型</h4><blockquote>\n<p>&ensp;&ensp;<code>JavaScript</code> 中有8中<a href=\"#\">数据类型</a>，分别是 <code>Undefined</code>、<code>Null</code>、<code>Boolean</code>、<code>String</code>、<code>Number</code>、<code>BigInt</code>、<code>Symbol</code>、<code>Object</code>。所有这些数据的类型是动态的，可以再程序运行时修改数据的类型。</p>\n</blockquote>\n<ul>\n<li>布尔值：使用 <code>boolean</code> 定义的值<ul>\n<li>定义<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> isDone: <span class=\"built_in\">boolean</span> = <span class=\"literal\">false</span>;</span><br></pre></td></tr></table></figure></li>\n<li>当修改成其他类型的值时，会报错<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> isDone: <span class=\"built_in\">boolean</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">isDone = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"comment\">// .code.tio.ts(2,1): error TS2322: Type &#x27;3&#x27; is not assignable to type &#x27;boolean&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>通过构造函数 <code>Boolean</code> 创建的实例对象不是 <code>boolean</code> 类型的值，而是一个 <code>Boolean</code> 对象，因此不能通过 <code>Boolean</code> 创建实例对象赋值给 <code>boolean</code> 定义的变量<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a: <span class=\"built_in\">boolean</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">a = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// Type &#x27;Boolean&#x27; is not assignable to type &#x27;boolean&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">// &#x27;boolean&#x27; is a primitive, but &#x27;Boolean&#x27; is a wrapper object. Prefer using &#x27;boolean&#x27; when possible.</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>数值型：使用 <code>number</code> 定义的值<ul>\n<li>定义<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num: <span class=\"built_in\">number</span> = <span class=\"number\">4</span>;</span><br></pre></td></tr></table></figure></li>\n<li>同样的，无法通过构造函数 <code>Number</code> 创建的实例对象赋值给 <code>number</code> 类型的变量</li>\n<li>特别的，可以将十六进制、二进制、八进制、<code>NaN</code> 及 <code>Infinity</code>【表示无穷大的数值，超出 1.7976931348623157E+103088 的数值】赋值给 <code>number</code> 类型的变量<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num: <span class=\"built_in\">number</span> = <span class=\"number\">4</span>;</span><br><span class=\"line\">num = <span class=\"number\">0xf00d</span>;</span><br><span class=\"line\">num = <span class=\"number\">0b1010</span>;</span><br><span class=\"line\">num = <span class=\"number\">0o744</span>;</span><br><span class=\"line\">num = <span class=\"literal\">NaN</span>;</span><br><span class=\"line\">num = <span class=\"literal\">Infinity</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>字符串类型：使用 <code>string</code> 定义的值<ul>\n<li>定义<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str: <span class=\"built_in\">string</span> = <span class=\"string\">&#x27;2&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> stri = <span class=\"string\">`String is <span class=\"subst\">$&#123;str&#125;</span>`</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>数组<ul>\n<li><code>JavaScript</code> 数组在 <code>TypeScript</code> 中有两种表现形式，<code>List</code> 和 <code>Tuple</code></li>\n<li><code>List</code>：集合捏所有元素的类型相同，但是集合的长度不固定<ul>\n<li>定义<ul>\n<li>两种定义方式<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr1: <span class=\"built_in\">number</span>[] = [];</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2: <span class=\"built_in\">Array</span>&lt;<span class=\"built_in\">number</span>&gt; = [];</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>Tuple</code>：元组内元素的类型不一定都一样，但是元组的长度是固定的<ul>\n<li>定义<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> point: [<span class=\"built_in\">number</span>, <span class=\"built_in\">number</span>] = [<span class=\"number\">7</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> points: [<span class=\"built_in\">string</span>, <span class=\"built_in\">number</span>] = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>函数<ul>\n<li>简写方式<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(num: <span class=\"built_in\">number</span>) =&gt; <span class=\"built_in\">string</span></span><br></pre></td></tr></table></figure></li>\n<li>完整写法<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> func: <span class=\"function\">(<span class=\"params\">num: <span class=\"built_in\">number</span></span>) =&gt;</span> <span class=\"built_in\">string</span> =</span><br><span class=\"line\"><span class=\"function\">(<span class=\"params\">num: <span class=\"built_in\">number</span></span>) =&gt;</span> <span class=\"built_in\">String</span>(num);</span><br></pre></td></tr></table></figure></li>\n<li>复杂的例子<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stringify123</span>(<span class=\"params\">callback: (num: <span class=\"built_in\">number</span>) =&gt; <span class=\"built_in\">string</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> callback(<span class=\"number\">123</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">stringify123();</span><br><span class=\"line\"><span class=\"comment\">// Expected 1 arguments, but got 0.</span></span><br><span class=\"line\">stringify123(<span class=\"number\">123</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;number&#x27; is not assignable to parameter of type &#x27;(num: number) =&gt; string&#x27;.</span></span><br><span class=\"line\">stringify123(<span class=\"string\">&#x27;123&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;number&#x27; is not assignable to parameter of type &#x27;(num: number) =&gt; string&#x27;.</span></span><br><span class=\"line\">stringify123(<span class=\"built_in\">Number</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;NumberConstructor&#x27; is not assignable to parameter of type &#x27;(num: number) =&gt; string&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">// Type &#x27;number&#x27; is not assignable to type &#x27;string&#x27;.</span></span><br><span class=\"line\">stringify123(<span class=\"built_in\">String</span>);</span><br><span class=\"line\">stringify123(<span class=\"function\">() =&gt;</span> <span class=\"string\">&#x27;123&#x27;</span>);</span><br></pre></td></tr></table></figure></li>\n<li>上述 <code>stringify123</code> 函数，返回的是 <code>string</code> 类型，我们没有显示地指定函数的返回类型，大多数情况下，推荐对所有的参数都显示地注明数据类型<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stringify123</span>(<span class=\"params\">callback: (num: <span class=\"built_in\">number</span>) =&gt; <span class=\"built_in\">string</span></span>): <span class=\"title\">string</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> callback(<span class=\"number\">123</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>特殊的类型注解：<code>void</code><blockquote>\n<p>&ensp;&ensp;<code>void</code> 是函数的一种特殊结果类型：它告诉 <code>TypeScript</code> 函数总是返回 <code>undefined</code>（显式或隐式）</p>\n</blockquote>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span>(<span class=\"params\"></span>): <span class=\"title\">void</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span> &#125; <span class=\"comment\">// 显示</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f2</span>(<span class=\"params\"></span>): <span class=\"title\">void</span> </span>&#123; &#125; <span class=\"comment\">// 隐式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f3</span>(<span class=\"params\"></span>): <span class=\"title\">void</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"string\">&#x27;abc&#x27;</span> &#125;</span><br><span class=\"line\"><span class=\"comment\">// Type &#x27;string&#x27; is not assignable to type &#x27;void&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>可选的参数：标识符 <code>?</code>后面的参数表示是可选参数<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stringify123</span>(<span class=\"params\">callback?: (num: <span class=\"built_in\">number</span>) =&gt; <span class=\"built_in\">string</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (callback === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    callback = <span class=\"built_in\">String</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> callback(<span class=\"number\">123</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">stringify123();</span><br><span class=\"line\">stringify123(<span class=\"string\">&#x27;234&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;&quot;234&quot;&#x27; is not assignable to parameter of type &#x27;((num: number) =&gt; string) | undefined&#x27;.</span></span><br><span class=\"line\">stringify123(<span class=\"built_in\">String</span>);</span><br></pre></td></tr></table></figure></li>\n<li>参数默认值：配置了参数默认值，这种情况下，参数的类型注解是可选的，因为 <code>TypeScript</code> 会根据参数默认值推断出参数的类型<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPoint</span>(<span class=\"params\">x=<span class=\"number\">0</span>, y=<span class=\"number\">0</span></span>): [<span class=\"title\">number</span>, <span class=\"title\">number</span>] </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [x, y];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">createPoint();</span><br><span class=\"line\">createPoint(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">createPoint(<span class=\"string\">&#x27;1&#x27;</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;&quot;&quot;&#x27; is not assignable to parameter of type &#x27;number | undefined&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>剩余参数：剩余参数必须是数组类型<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">joinNumbers</span>(<span class=\"params\">a: <span class=\"built_in\">string</span>, ...nums: <span class=\"built_in\">number</span>[]</span>): <span class=\"title\">string</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> nums.join(<span class=\"string\">&#x27;-&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">joinNumbers(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;number&#x27; is not assignable to parameter of type &#x27;string&#x27;.</span></span><br><span class=\"line\">joinNumbers(<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;string&#x27; is not assignable to parameter of type &#x27;number&#x27;.</span></span><br><span class=\"line\">joinNumbers(<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><span id='union-type'>联合类型</span><ul>\n<li>在 <code>JavaScript</code> 中，变量的类型是动态的，一个变量的类型，在程序的运行过程中，可能处于不同的类型，为了描述这些变量，在 <code>TypeScript</code> 中，可以使用联合类型，联合类型使用 <code>|</code> 分割<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScore</span>(<span class=\"params\">numberOrString: <span class=\"built_in\">number</span>|<span class=\"built_in\">string</span></span>): <span class=\"title\">number</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> numberOrString === <span class=\"string\">&#x27;string&#x27;</span></span><br><span class=\"line\">    &amp;&amp; <span class=\"regexp\">/^\\*&#123;1,5&#125;$/</span>.test(numberOrString)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> numberOrString.length;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> numberOrString === <span class=\"string\">&#x27;number&#x27;</span></span><br><span class=\"line\">    &amp;&amp; numberOrString &gt;= <span class=\"number\">1</span> &amp;&amp; numberOrString &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> numberOrString</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;Illegal value: &#x27;</span> + <span class=\"built_in\">JSON</span>.stringify(numberOrString));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">getScore(<span class=\"number\">1</span>);</span><br><span class=\"line\">getScore(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">getScore(<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;boolean&#x27; is not assignable to parameter of type &#x27;string | number&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>默认情况下，除非显示地指定，否则联合类型是不包括 <code>undefined</code> 和 <code>null</code> 的。<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getScore(<span class=\"literal\">undefined</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;undefined&#x27; is not assignable to parameter of type &#x27;string | number&#x27;.</span></span><br><span class=\"line\">getScore(<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;null&#x27; is not assignable to parameter of type &#x27;string | number&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>比较：可选、默认值、联合类型：<code>undefined | null</code><ul>\n<li>如果参数是可选的，那参数可以被省略，省略时值默认为 <code>undefined</code>，不省略，只能传给定类型的值<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span>(<span class=\"params\">x?: <span class=\"built_in\">number</span></span>) </span>&#123; <span class=\"built_in\">console</span>.log(x) &#125;;</span><br><span class=\"line\">f1(); <span class=\"comment\">// undefined</span></span><br><span class=\"line\">f1(<span class=\"number\">1</span>); <span class=\"comment\">// 1</span></span><br><span class=\"line\">f1(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;&quot;a&quot;&#x27; is not assignable to parameter of type &#x27;number | undefined&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>如果参数是有默认值的，参数的值也是可选的，省略时，参数的值为给定的默认值。不省略时，除了传给定类型的值外，还可以指定为 <code>undefined</code><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span>(<span class=\"params\">x = <span class=\"number\">1</span></span>) </span>&#123; <span class=\"built_in\">console</span>.log(x) &#125;;</span><br><span class=\"line\">f1(); <span class=\"comment\">// 1</span></span><br><span class=\"line\">f1(<span class=\"number\">1</span>); <span class=\"comment\">// 1</span></span><br><span class=\"line\">f1(<span class=\"literal\">undefined</span>); <span class=\"comment\">// undefined</span></span><br><span class=\"line\">f1(<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;null&#x27; is not assignable to parameter of type &#x27;number | undefined&#x27;.</span></span><br><span class=\"line\">f1(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;&quot;a&quot;&#x27; is not assignable to parameter of type &#x27;number | undefined&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>如果是联合类型：<code>undefined | null</code>，那参数是不能省略的<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span>(<span class=\"params\">x: <span class=\"built_in\">number</span> | <span class=\"literal\">undefined</span></span>) </span>&#123; <span class=\"built_in\">console</span>.log(x) &#125;;</span><br><span class=\"line\">f1();</span><br><span class=\"line\"><span class=\"comment\">// Expected 1 arguments, but got 0.</span></span><br><span class=\"line\">f1(<span class=\"number\">1</span>);</span><br><span class=\"line\">f1(<span class=\"literal\">undefined</span>);</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>对象类型</li>\n</ul>\n","site":{"data":{}},"length":1620,"excerpt":"","more":"<h4 id=\"什么是-TypeScript\"><a href=\"#什么是-TypeScript\" class=\"headerlink\" title=\"什么是 TypeScript\"></a>什么是 <code>TypeScript</code></h4><blockquote>\n<p><code>TypeScript</code> 是 <code>JavaScript</code> 的一个超集。</p>\n</blockquote>\n<h4 id=\"学习文档\"><a href=\"#学习文档\" class=\"headerlink\" title=\"学习文档\"></a>学习文档</h4><ul>\n<li><code>TypeScript with React</code> <a href=\"https://react-typescript-cheatsheet.netlify.app/docs/basic/setup/\">Link</a></li>\n<li>进度<ul>\n<li><a href=\"https://2ality.com/2018/04/type-notation-typescript.html#typing-objects\">Link</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"类型注解\"><a href=\"#类型注解\" class=\"headerlink\" title=\"类型注解\"></a>类型注解</h4><ul>\n<li>在变量名后面接着一个冒号，冒号后面跟着类型表达式，表达式描述了这个变量可以具有的值。<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x: <span class=\"built_in\">number</span>;</span><br></pre></td></tr></table></figure></li>\n<li>上述表达式，定义了一个数字类型的变量 <code>x</code>。你也许会有疑问，<code>x</code> 在定义时，没有指定具体的值，按理值应该是 <code>undefined</code>，这就与定义的 <code>number</code> 类型不一样了。<code>TypeScript</code> 针对这种变量定义未赋值的情况，是不允许程序后续读取的。<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">alert(a);</span><br><span class=\"line\"><span class=\"comment\">// Variable &#x27;a&#x27; is used before being assigned.</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"类型表达式\"><a href=\"#类型表达式\" class=\"headerlink\" title=\"类型表达式\"></a>类型表达式</h4><ul>\n<li>针对 <code>JavaScript</code> 设定的类型可选表达式<ul>\n<li><code>undefined</code>、<code>null</code></li>\n<li><code>boolean</code>、<code>number</code>、<code>string</code></li>\n<li><code>symbol</code></li>\n<li><code>object</code></li>\n</ul>\n</li>\n<li><code>TypeScript</code> 特有的<ul>\n<li><code>Array</code></li>\n<li><code>any</code></li>\n<li><code>...</code></li>\n</ul>\n</li>\n<li>除了上述的单一类型，有很多方法可以将这些类型组合成新的<a href=\"#union-type\">联合类型</a>，如使用交并集符号 <code>(U)</code>、<code>(∩)</code>。<a href=\"#\">更多</a></li>\n</ul>\n<h4 id=\"类型别名\"><a href=\"#类型别名\" class=\"headerlink\" title=\"类型别名\"></a>类型别名</h4><ul>\n<li>可以针对某一个类型，使用 <code>type</code> 关键字创建别名<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Age = <span class=\"built_in\">number</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> age: Age = <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"类型推断\"><a href=\"#类型推断\" class=\"headerlink\" title=\"类型推断\"></a>类型推断</h4><ul>\n<li>并不是在任何时候都需要显示地指定定义变量的类型，<code>TypeScript</code> 会依照类型推断的规则，推断出变量的类型<ul>\n<li>如下代码，根据类型推断规则，变量 <code>a</code> 被推断为 <code>number</code> 类型，如果后续更改为其他类型，将报错<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> a);</span><br><span class=\"line\"><span class=\"comment\">// &quot;number&quot;</span></span><br><span class=\"line\">a = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// Type &#x27;string&#x27; is not assignable to type &#x27;number&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"TypeScript-中的类型\"><a href=\"#TypeScript-中的类型\" class=\"headerlink\" title=\"TypeScript 中的类型\"></a><code>TypeScript</code> 中的类型</h4><blockquote>\n<p>&ensp;&ensp;<code>JavaScript</code> 中有8中<a href=\"#\">数据类型</a>，分别是 <code>Undefined</code>、<code>Null</code>、<code>Boolean</code>、<code>String</code>、<code>Number</code>、<code>BigInt</code>、<code>Symbol</code>、<code>Object</code>。所有这些数据的类型是动态的，可以再程序运行时修改数据的类型。</p>\n</blockquote>\n<ul>\n<li>布尔值：使用 <code>boolean</code> 定义的值<ul>\n<li>定义<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> isDone: <span class=\"built_in\">boolean</span> = <span class=\"literal\">false</span>;</span><br></pre></td></tr></table></figure></li>\n<li>当修改成其他类型的值时，会报错<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> isDone: <span class=\"built_in\">boolean</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">isDone = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"comment\">// .code.tio.ts(2,1): error TS2322: Type &#x27;3&#x27; is not assignable to type &#x27;boolean&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>通过构造函数 <code>Boolean</code> 创建的实例对象不是 <code>boolean</code> 类型的值，而是一个 <code>Boolean</code> 对象，因此不能通过 <code>Boolean</code> 创建实例对象赋值给 <code>boolean</code> 定义的变量<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a: <span class=\"built_in\">boolean</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">a = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// Type &#x27;Boolean&#x27; is not assignable to type &#x27;boolean&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">// &#x27;boolean&#x27; is a primitive, but &#x27;Boolean&#x27; is a wrapper object. Prefer using &#x27;boolean&#x27; when possible.</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>数值型：使用 <code>number</code> 定义的值<ul>\n<li>定义<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num: <span class=\"built_in\">number</span> = <span class=\"number\">4</span>;</span><br></pre></td></tr></table></figure></li>\n<li>同样的，无法通过构造函数 <code>Number</code> 创建的实例对象赋值给 <code>number</code> 类型的变量</li>\n<li>特别的，可以将十六进制、二进制、八进制、<code>NaN</code> 及 <code>Infinity</code>【表示无穷大的数值，超出 1.7976931348623157E+103088 的数值】赋值给 <code>number</code> 类型的变量<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num: <span class=\"built_in\">number</span> = <span class=\"number\">4</span>;</span><br><span class=\"line\">num = <span class=\"number\">0xf00d</span>;</span><br><span class=\"line\">num = <span class=\"number\">0b1010</span>;</span><br><span class=\"line\">num = <span class=\"number\">0o744</span>;</span><br><span class=\"line\">num = <span class=\"literal\">NaN</span>;</span><br><span class=\"line\">num = <span class=\"literal\">Infinity</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>字符串类型：使用 <code>string</code> 定义的值<ul>\n<li>定义<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str: <span class=\"built_in\">string</span> = <span class=\"string\">&#x27;2&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> stri = <span class=\"string\">`String is <span class=\"subst\">$&#123;str&#125;</span>`</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>数组<ul>\n<li><code>JavaScript</code> 数组在 <code>TypeScript</code> 中有两种表现形式，<code>List</code> 和 <code>Tuple</code></li>\n<li><code>List</code>：集合捏所有元素的类型相同，但是集合的长度不固定<ul>\n<li>定义<ul>\n<li>两种定义方式<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr1: <span class=\"built_in\">number</span>[] = [];</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2: <span class=\"built_in\">Array</span>&lt;<span class=\"built_in\">number</span>&gt; = [];</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>Tuple</code>：元组内元素的类型不一定都一样，但是元组的长度是固定的<ul>\n<li>定义<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> point: [<span class=\"built_in\">number</span>, <span class=\"built_in\">number</span>] = [<span class=\"number\">7</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> points: [<span class=\"built_in\">string</span>, <span class=\"built_in\">number</span>] = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>函数<ul>\n<li>简写方式<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(num: <span class=\"built_in\">number</span>) =&gt; <span class=\"built_in\">string</span></span><br></pre></td></tr></table></figure></li>\n<li>完整写法<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> func: <span class=\"function\">(<span class=\"params\">num: <span class=\"built_in\">number</span></span>) =&gt;</span> <span class=\"built_in\">string</span> =</span><br><span class=\"line\"><span class=\"function\">(<span class=\"params\">num: <span class=\"built_in\">number</span></span>) =&gt;</span> <span class=\"built_in\">String</span>(num);</span><br></pre></td></tr></table></figure></li>\n<li>复杂的例子<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stringify123</span>(<span class=\"params\">callback: (num: <span class=\"built_in\">number</span>) =&gt; <span class=\"built_in\">string</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> callback(<span class=\"number\">123</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">stringify123();</span><br><span class=\"line\"><span class=\"comment\">// Expected 1 arguments, but got 0.</span></span><br><span class=\"line\">stringify123(<span class=\"number\">123</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;number&#x27; is not assignable to parameter of type &#x27;(num: number) =&gt; string&#x27;.</span></span><br><span class=\"line\">stringify123(<span class=\"string\">&#x27;123&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;number&#x27; is not assignable to parameter of type &#x27;(num: number) =&gt; string&#x27;.</span></span><br><span class=\"line\">stringify123(<span class=\"built_in\">Number</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;NumberConstructor&#x27; is not assignable to parameter of type &#x27;(num: number) =&gt; string&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">// Type &#x27;number&#x27; is not assignable to type &#x27;string&#x27;.</span></span><br><span class=\"line\">stringify123(<span class=\"built_in\">String</span>);</span><br><span class=\"line\">stringify123(<span class=\"function\">() =&gt;</span> <span class=\"string\">&#x27;123&#x27;</span>);</span><br></pre></td></tr></table></figure></li>\n<li>上述 <code>stringify123</code> 函数，返回的是 <code>string</code> 类型，我们没有显示地指定函数的返回类型，大多数情况下，推荐对所有的参数都显示地注明数据类型<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stringify123</span>(<span class=\"params\">callback: (num: <span class=\"built_in\">number</span>) =&gt; <span class=\"built_in\">string</span></span>): <span class=\"title\">string</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> callback(<span class=\"number\">123</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>特殊的类型注解：<code>void</code><blockquote>\n<p>&ensp;&ensp;<code>void</code> 是函数的一种特殊结果类型：它告诉 <code>TypeScript</code> 函数总是返回 <code>undefined</code>（显式或隐式）</p>\n</blockquote>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span>(<span class=\"params\"></span>): <span class=\"title\">void</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span> &#125; <span class=\"comment\">// 显示</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f2</span>(<span class=\"params\"></span>): <span class=\"title\">void</span> </span>&#123; &#125; <span class=\"comment\">// 隐式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f3</span>(<span class=\"params\"></span>): <span class=\"title\">void</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"string\">&#x27;abc&#x27;</span> &#125;</span><br><span class=\"line\"><span class=\"comment\">// Type &#x27;string&#x27; is not assignable to type &#x27;void&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>可选的参数：标识符 <code>?</code>后面的参数表示是可选参数<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stringify123</span>(<span class=\"params\">callback?: (num: <span class=\"built_in\">number</span>) =&gt; <span class=\"built_in\">string</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (callback === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    callback = <span class=\"built_in\">String</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> callback(<span class=\"number\">123</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">stringify123();</span><br><span class=\"line\">stringify123(<span class=\"string\">&#x27;234&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;&quot;234&quot;&#x27; is not assignable to parameter of type &#x27;((num: number) =&gt; string) | undefined&#x27;.</span></span><br><span class=\"line\">stringify123(<span class=\"built_in\">String</span>);</span><br></pre></td></tr></table></figure></li>\n<li>参数默认值：配置了参数默认值，这种情况下，参数的类型注解是可选的，因为 <code>TypeScript</code> 会根据参数默认值推断出参数的类型<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPoint</span>(<span class=\"params\">x=<span class=\"number\">0</span>, y=<span class=\"number\">0</span></span>): [<span class=\"title\">number</span>, <span class=\"title\">number</span>] </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [x, y];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">createPoint();</span><br><span class=\"line\">createPoint(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">createPoint(<span class=\"string\">&#x27;1&#x27;</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;&quot;&quot;&#x27; is not assignable to parameter of type &#x27;number | undefined&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>剩余参数：剩余参数必须是数组类型<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">joinNumbers</span>(<span class=\"params\">a: <span class=\"built_in\">string</span>, ...nums: <span class=\"built_in\">number</span>[]</span>): <span class=\"title\">string</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> nums.join(<span class=\"string\">&#x27;-&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">joinNumbers(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;number&#x27; is not assignable to parameter of type &#x27;string&#x27;.</span></span><br><span class=\"line\">joinNumbers(<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;string&#x27; is not assignable to parameter of type &#x27;number&#x27;.</span></span><br><span class=\"line\">joinNumbers(<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><span id='union-type'>联合类型</span><ul>\n<li>在 <code>JavaScript</code> 中，变量的类型是动态的，一个变量的类型，在程序的运行过程中，可能处于不同的类型，为了描述这些变量，在 <code>TypeScript</code> 中，可以使用联合类型，联合类型使用 <code>|</code> 分割<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScore</span>(<span class=\"params\">numberOrString: <span class=\"built_in\">number</span>|<span class=\"built_in\">string</span></span>): <span class=\"title\">number</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> numberOrString === <span class=\"string\">&#x27;string&#x27;</span></span><br><span class=\"line\">    &amp;&amp; <span class=\"regexp\">/^\\*&#123;1,5&#125;$/</span>.test(numberOrString)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> numberOrString.length;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> numberOrString === <span class=\"string\">&#x27;number&#x27;</span></span><br><span class=\"line\">    &amp;&amp; numberOrString &gt;= <span class=\"number\">1</span> &amp;&amp; numberOrString &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> numberOrString</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;Illegal value: &#x27;</span> + <span class=\"built_in\">JSON</span>.stringify(numberOrString));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">getScore(<span class=\"number\">1</span>);</span><br><span class=\"line\">getScore(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">getScore(<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;boolean&#x27; is not assignable to parameter of type &#x27;string | number&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>默认情况下，除非显示地指定，否则联合类型是不包括 <code>undefined</code> 和 <code>null</code> 的。<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getScore(<span class=\"literal\">undefined</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;undefined&#x27; is not assignable to parameter of type &#x27;string | number&#x27;.</span></span><br><span class=\"line\">getScore(<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;null&#x27; is not assignable to parameter of type &#x27;string | number&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>比较：可选、默认值、联合类型：<code>undefined | null</code><ul>\n<li>如果参数是可选的，那参数可以被省略，省略时值默认为 <code>undefined</code>，不省略，只能传给定类型的值<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span>(<span class=\"params\">x?: <span class=\"built_in\">number</span></span>) </span>&#123; <span class=\"built_in\">console</span>.log(x) &#125;;</span><br><span class=\"line\">f1(); <span class=\"comment\">// undefined</span></span><br><span class=\"line\">f1(<span class=\"number\">1</span>); <span class=\"comment\">// 1</span></span><br><span class=\"line\">f1(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;&quot;a&quot;&#x27; is not assignable to parameter of type &#x27;number | undefined&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>如果参数是有默认值的，参数的值也是可选的，省略时，参数的值为给定的默认值。不省略时，除了传给定类型的值外，还可以指定为 <code>undefined</code><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span>(<span class=\"params\">x = <span class=\"number\">1</span></span>) </span>&#123; <span class=\"built_in\">console</span>.log(x) &#125;;</span><br><span class=\"line\">f1(); <span class=\"comment\">// 1</span></span><br><span class=\"line\">f1(<span class=\"number\">1</span>); <span class=\"comment\">// 1</span></span><br><span class=\"line\">f1(<span class=\"literal\">undefined</span>); <span class=\"comment\">// undefined</span></span><br><span class=\"line\">f1(<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;null&#x27; is not assignable to parameter of type &#x27;number | undefined&#x27;.</span></span><br><span class=\"line\">f1(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Argument of type &#x27;&quot;a&quot;&#x27; is not assignable to parameter of type &#x27;number | undefined&#x27;.</span></span><br></pre></td></tr></table></figure></li>\n<li>如果是联合类型：<code>undefined | null</code>，那参数是不能省略的<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span>(<span class=\"params\">x: <span class=\"built_in\">number</span> | <span class=\"literal\">undefined</span></span>) </span>&#123; <span class=\"built_in\">console</span>.log(x) &#125;;</span><br><span class=\"line\">f1();</span><br><span class=\"line\"><span class=\"comment\">// Expected 1 arguments, but got 0.</span></span><br><span class=\"line\">f1(<span class=\"number\">1</span>);</span><br><span class=\"line\">f1(<span class=\"literal\">undefined</span>);</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>对象类型</li>\n</ul>\n"},{"title":"nodeppt - css","date":"2022-01-14T08:23:10.000Z","_content":"","source":"_posts/nodeppt-css.md","raw":"---\ntitle: nodeppt - css\ndate: 2022-01-14 16:23:10\ntags: [nodeppt]\ncategories: [nodeppt]\n---\n","slug":"nodeppt-css","published":1,"updated":"2022-01-14T08:23:32.120Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbu0013okpc9euofrra","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"webpack - 技巧篇","date":"2022-01-14T01:56:14.000Z","_content":"#### 打包图片资源\n- 安装 `loader`\n```bash\n$ npm install --save-dev file-loader\n```\n- 在 `webpack.config.js` 文件的规则中添加配置\n```yaml\n{\n    test: /\\.(png|svg|jpg|gif)$/,\n    use: ['file-loader']\n}\n```","source":"_posts/webpack-技巧篇.md","raw":"---\ntitle: webpack - 技巧篇\ndate: 2022-01-14 09:56:14\ntags: [webpack]\ncategories: [webpack]\n---\n#### 打包图片资源\n- 安装 `loader`\n```bash\n$ npm install --save-dev file-loader\n```\n- 在 `webpack.config.js` 文件的规则中添加配置\n```yaml\n{\n    test: /\\.(png|svg|jpg|gif)$/,\n    use: ['file-loader']\n}\n```","slug":"webpack-技巧篇","published":1,"updated":"2022-01-14T02:01:15.564Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbv0016okpcbb990hf4","content":"<h4 id=\"打包图片资源\"><a href=\"#打包图片资源\" class=\"headerlink\" title=\"打包图片资源\"></a>打包图片资源</h4><ul>\n<li>安装 <code>loader</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install --save-dev file-loader</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>webpack.config.js</code> 文件的规则中添加配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">test:</span> <span class=\"string\">/\\.(png|svg|jpg|gif)$/</span>,</span><br><span class=\"line\">    <span class=\"attr\">use:</span> [<span class=\"string\">&#x27;file-loader&#x27;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"length":42,"excerpt":"","more":"<h4 id=\"打包图片资源\"><a href=\"#打包图片资源\" class=\"headerlink\" title=\"打包图片资源\"></a>打包图片资源</h4><ul>\n<li>安装 <code>loader</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install --save-dev file-loader</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>webpack.config.js</code> 文件的规则中添加配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">test:</span> <span class=\"string\">/\\.(png|svg|jpg|gif)$/</span>,</span><br><span class=\"line\">    <span class=\"attr\">use:</span> [<span class=\"string\">&#x27;file-loader&#x27;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"工具合集","date":"2022-01-25T06:39:29.000Z","_content":"#### 文件处理\n| 链接 | 描述 |\n| --- | --- |\n| [跳转](https://www.meishuzi.cn/size) | 图片文字处理 |\n| [跳转](http://www.uupoop.com/ps/) | 在线PS |\n| [跳转](https://www.gaitubao.com/jpg-gif-png/) | 图片格式转换 |\n| [跳转](https://www.yasuotu.com/gif) | 图片压缩 |\n| [跳转](https://convertio.co/zh/) | 文件转换器 |\n| [跳转](https://app.xunjiepdf.com/pdf2jpg) | PDF转换器 |\n| [跳转](https://www.sslshopper.com/ssl-checker.html) | SVG转换透明背景 |\n\n#### 资源获取\n| 链接 | 描述 |\n| --- | --- |\n| [跳转](http://www.1ppt.com/xiazai/zongjie/) | PPT模板 |\n| [跳转](https://www.chuangkit.com/sj-pi3-si23-or0-pt0-pn1.html) | 文档模板 |\n\n#### 开发工具\n| 链接 | 描述 |\n| --- | --- |\n| [跳转](http://tool.oschina.net/hexconvert/) | 进制转换 |\n| [跳转](http://www.ku51.net/color/rgb.html) | RGB颜色查询对照表 |\n| [跳转](https://suijimimashengcheng.51240.com/) | 生成随机密码 |\n| [跳转](http://cron.qqe2.com/) | CRON表达式生成 |\n| [跳转](http://jsrun.net/6NXKp/edit) | JavaScript编辑器 |\n| [跳转](https://codesandbox.io/s/) | codesandbox 在线框架编程 |\n| [跳转](https://www.caniuse.com/#search=sticky) | css属性兼容性查看 |\n| [跳转](https://uigradients.com/#Behongo) | 渐变色生成 |\n| [跳转](https://www.typescriptlang.org/play?#code/Aco) | TypeScript编辑器 |\n\n#### 设计\n| 链接 | 描述 |\n| --- | --- |\n| [跳转](http://www.uugai.com/) | Logo设计 |\n| [跳转](https://www.fotor.com.cn/app.html) | 设计 |\n| [跳转](http://shufa.388g.com/?page=4) | 艺术字生成 |\n\n#### 其他\n| 链接 | 描述 |\n| [跳转](https://jiema.wwei.cn/) | 二维码解码 |\n| [跳转](https://zhcn.109876543210.com/) | OCR |\n| [跳转](https://www.sslshopper.com/ssl-checker.html) | SSL安装校验 |\n| [跳转](https://www.myssl.cn/tools/merge-pem-cert.html) | 网站证书文件处理 |\n\n","source":"_posts/工具合集.md","raw":"---\ntitle: 工具合集\ndate: 2022-01-25 14:39:29\ntags: [工具]\ncategories: [工具]\n---\n#### 文件处理\n| 链接 | 描述 |\n| --- | --- |\n| [跳转](https://www.meishuzi.cn/size) | 图片文字处理 |\n| [跳转](http://www.uupoop.com/ps/) | 在线PS |\n| [跳转](https://www.gaitubao.com/jpg-gif-png/) | 图片格式转换 |\n| [跳转](https://www.yasuotu.com/gif) | 图片压缩 |\n| [跳转](https://convertio.co/zh/) | 文件转换器 |\n| [跳转](https://app.xunjiepdf.com/pdf2jpg) | PDF转换器 |\n| [跳转](https://www.sslshopper.com/ssl-checker.html) | SVG转换透明背景 |\n\n#### 资源获取\n| 链接 | 描述 |\n| --- | --- |\n| [跳转](http://www.1ppt.com/xiazai/zongjie/) | PPT模板 |\n| [跳转](https://www.chuangkit.com/sj-pi3-si23-or0-pt0-pn1.html) | 文档模板 |\n\n#### 开发工具\n| 链接 | 描述 |\n| --- | --- |\n| [跳转](http://tool.oschina.net/hexconvert/) | 进制转换 |\n| [跳转](http://www.ku51.net/color/rgb.html) | RGB颜色查询对照表 |\n| [跳转](https://suijimimashengcheng.51240.com/) | 生成随机密码 |\n| [跳转](http://cron.qqe2.com/) | CRON表达式生成 |\n| [跳转](http://jsrun.net/6NXKp/edit) | JavaScript编辑器 |\n| [跳转](https://codesandbox.io/s/) | codesandbox 在线框架编程 |\n| [跳转](https://www.caniuse.com/#search=sticky) | css属性兼容性查看 |\n| [跳转](https://uigradients.com/#Behongo) | 渐变色生成 |\n| [跳转](https://www.typescriptlang.org/play?#code/Aco) | TypeScript编辑器 |\n\n#### 设计\n| 链接 | 描述 |\n| --- | --- |\n| [跳转](http://www.uugai.com/) | Logo设计 |\n| [跳转](https://www.fotor.com.cn/app.html) | 设计 |\n| [跳转](http://shufa.388g.com/?page=4) | 艺术字生成 |\n\n#### 其他\n| 链接 | 描述 |\n| [跳转](https://jiema.wwei.cn/) | 二维码解码 |\n| [跳转](https://zhcn.109876543210.com/) | OCR |\n| [跳转](https://www.sslshopper.com/ssl-checker.html) | SSL安装校验 |\n| [跳转](https://www.myssl.cn/tools/merge-pem-cert.html) | 网站证书文件处理 |\n\n","slug":"工具合集","published":1,"updated":"2022-01-25T07:34:51.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbw0019okpc8wf62e37","content":"<h4 id=\"文件处理\"><a href=\"#文件处理\" class=\"headerlink\" title=\"文件处理\"></a>文件处理</h4><table>\n<thead>\n<tr>\n<th>链接</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://www.meishuzi.cn/size\">跳转</a></td>\n<td>图片文字处理</td>\n</tr>\n<tr>\n<td><a href=\"http://www.uupoop.com/ps/\">跳转</a></td>\n<td>在线PS</td>\n</tr>\n<tr>\n<td><a href=\"https://www.gaitubao.com/jpg-gif-png/\">跳转</a></td>\n<td>图片格式转换</td>\n</tr>\n<tr>\n<td><a href=\"https://www.yasuotu.com/gif\">跳转</a></td>\n<td>图片压缩</td>\n</tr>\n<tr>\n<td><a href=\"https://convertio.co/zh/\">跳转</a></td>\n<td>文件转换器</td>\n</tr>\n<tr>\n<td><a href=\"https://app.xunjiepdf.com/pdf2jpg\">跳转</a></td>\n<td>PDF转换器</td>\n</tr>\n<tr>\n<td><a href=\"https://www.sslshopper.com/ssl-checker.html\">跳转</a></td>\n<td>SVG转换透明背景</td>\n</tr>\n</tbody></table>\n<h4 id=\"资源获取\"><a href=\"#资源获取\" class=\"headerlink\" title=\"资源获取\"></a>资源获取</h4><table>\n<thead>\n<tr>\n<th>链接</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://www.1ppt.com/xiazai/zongjie/\">跳转</a></td>\n<td>PPT模板</td>\n</tr>\n<tr>\n<td><a href=\"https://www.chuangkit.com/sj-pi3-si23-or0-pt0-pn1.html\">跳转</a></td>\n<td>文档模板</td>\n</tr>\n</tbody></table>\n<h4 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\"开发工具\"></a>开发工具</h4><table>\n<thead>\n<tr>\n<th>链接</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://tool.oschina.net/hexconvert/\">跳转</a></td>\n<td>进制转换</td>\n</tr>\n<tr>\n<td><a href=\"http://www.ku51.net/color/rgb.html\">跳转</a></td>\n<td>RGB颜色查询对照表</td>\n</tr>\n<tr>\n<td><a href=\"https://suijimimashengcheng.51240.com/\">跳转</a></td>\n<td>生成随机密码</td>\n</tr>\n<tr>\n<td><a href=\"http://cron.qqe2.com/\">跳转</a></td>\n<td>CRON表达式生成</td>\n</tr>\n<tr>\n<td><a href=\"http://jsrun.net/6NXKp/edit\">跳转</a></td>\n<td>JavaScript编辑器</td>\n</tr>\n<tr>\n<td><a href=\"https://codesandbox.io/s/\">跳转</a></td>\n<td>codesandbox 在线框架编程</td>\n</tr>\n<tr>\n<td><a href=\"https://www.caniuse.com/#search=sticky\">跳转</a></td>\n<td>css属性兼容性查看</td>\n</tr>\n<tr>\n<td><a href=\"https://uigradients.com/#Behongo\">跳转</a></td>\n<td>渐变色生成</td>\n</tr>\n<tr>\n<td><a href=\"https://www.typescriptlang.org/play#code/Aco\">跳转</a></td>\n<td>TypeScript编辑器</td>\n</tr>\n</tbody></table>\n<h4 id=\"设计\"><a href=\"#设计\" class=\"headerlink\" title=\"设计\"></a>设计</h4><table>\n<thead>\n<tr>\n<th>链接</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://www.uugai.com/\">跳转</a></td>\n<td>Logo设计</td>\n</tr>\n<tr>\n<td><a href=\"https://www.fotor.com.cn/app.html\">跳转</a></td>\n<td>设计</td>\n</tr>\n<tr>\n<td><a href=\"http://shufa.388g.com/?page=4\">跳转</a></td>\n<td>艺术字生成</td>\n</tr>\n</tbody></table>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4><p>| 链接 | 描述 |<br>| <a href=\"https://jiema.wwei.cn/\">跳转</a> | 二维码解码 |<br>| <a href=\"https://zhcn.109876543210.com/\">跳转</a> | OCR |<br>| <a href=\"https://www.sslshopper.com/ssl-checker.html\">跳转</a> | SSL安装校验 |<br>| <a href=\"https://www.myssl.cn/tools/merge-pem-cert.html\">跳转</a> | 网站证书文件处理 |</p>\n","site":{"data":{}},"length":273,"excerpt":"","more":"<h4 id=\"文件处理\"><a href=\"#文件处理\" class=\"headerlink\" title=\"文件处理\"></a>文件处理</h4><table>\n<thead>\n<tr>\n<th>链接</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://www.meishuzi.cn/size\">跳转</a></td>\n<td>图片文字处理</td>\n</tr>\n<tr>\n<td><a href=\"http://www.uupoop.com/ps/\">跳转</a></td>\n<td>在线PS</td>\n</tr>\n<tr>\n<td><a href=\"https://www.gaitubao.com/jpg-gif-png/\">跳转</a></td>\n<td>图片格式转换</td>\n</tr>\n<tr>\n<td><a href=\"https://www.yasuotu.com/gif\">跳转</a></td>\n<td>图片压缩</td>\n</tr>\n<tr>\n<td><a href=\"https://convertio.co/zh/\">跳转</a></td>\n<td>文件转换器</td>\n</tr>\n<tr>\n<td><a href=\"https://app.xunjiepdf.com/pdf2jpg\">跳转</a></td>\n<td>PDF转换器</td>\n</tr>\n<tr>\n<td><a href=\"https://www.sslshopper.com/ssl-checker.html\">跳转</a></td>\n<td>SVG转换透明背景</td>\n</tr>\n</tbody></table>\n<h4 id=\"资源获取\"><a href=\"#资源获取\" class=\"headerlink\" title=\"资源获取\"></a>资源获取</h4><table>\n<thead>\n<tr>\n<th>链接</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://www.1ppt.com/xiazai/zongjie/\">跳转</a></td>\n<td>PPT模板</td>\n</tr>\n<tr>\n<td><a href=\"https://www.chuangkit.com/sj-pi3-si23-or0-pt0-pn1.html\">跳转</a></td>\n<td>文档模板</td>\n</tr>\n</tbody></table>\n<h4 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\"开发工具\"></a>开发工具</h4><table>\n<thead>\n<tr>\n<th>链接</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://tool.oschina.net/hexconvert/\">跳转</a></td>\n<td>进制转换</td>\n</tr>\n<tr>\n<td><a href=\"http://www.ku51.net/color/rgb.html\">跳转</a></td>\n<td>RGB颜色查询对照表</td>\n</tr>\n<tr>\n<td><a href=\"https://suijimimashengcheng.51240.com/\">跳转</a></td>\n<td>生成随机密码</td>\n</tr>\n<tr>\n<td><a href=\"http://cron.qqe2.com/\">跳转</a></td>\n<td>CRON表达式生成</td>\n</tr>\n<tr>\n<td><a href=\"http://jsrun.net/6NXKp/edit\">跳转</a></td>\n<td>JavaScript编辑器</td>\n</tr>\n<tr>\n<td><a href=\"https://codesandbox.io/s/\">跳转</a></td>\n<td>codesandbox 在线框架编程</td>\n</tr>\n<tr>\n<td><a href=\"https://www.caniuse.com/#search=sticky\">跳转</a></td>\n<td>css属性兼容性查看</td>\n</tr>\n<tr>\n<td><a href=\"https://uigradients.com/#Behongo\">跳转</a></td>\n<td>渐变色生成</td>\n</tr>\n<tr>\n<td><a href=\"https://www.typescriptlang.org/play#code/Aco\">跳转</a></td>\n<td>TypeScript编辑器</td>\n</tr>\n</tbody></table>\n<h4 id=\"设计\"><a href=\"#设计\" class=\"headerlink\" title=\"设计\"></a>设计</h4><table>\n<thead>\n<tr>\n<th>链接</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://www.uugai.com/\">跳转</a></td>\n<td>Logo设计</td>\n</tr>\n<tr>\n<td><a href=\"https://www.fotor.com.cn/app.html\">跳转</a></td>\n<td>设计</td>\n</tr>\n<tr>\n<td><a href=\"http://shufa.388g.com/?page=4\">跳转</a></td>\n<td>艺术字生成</td>\n</tr>\n</tbody></table>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4><p>| 链接 | 描述 |<br>| <a href=\"https://jiema.wwei.cn/\">跳转</a> | 二维码解码 |<br>| <a href=\"https://zhcn.109876543210.com/\">跳转</a> | OCR |<br>| <a href=\"https://www.sslshopper.com/ssl-checker.html\">跳转</a> | SSL安装校验 |<br>| <a href=\"https://www.myssl.cn/tools/merge-pem-cert.html\">跳转</a> | 网站证书文件处理 |</p>\n"},{"title":"微信小程序 - 开发笔记","date":"2022-01-17T06:13:12.000Z","_content":"#### `data-*` 指令\n> 用于将 `wxml` 页面的数据传递至后台 `js`\n- `wxml` 代码\n```html\n<view class='container'>\n  <view class='nav_left'>\n    <block wx:for=\"{{navLeftItems}}\" wx:key=\"id\">\n      <view class='nav_left_items' bindtap='switchItem' data-id=\"{{item.id}}\">\n        {{item.categoryName}}\n      </view>\n    </block>\n  </view>\n</view>\n```\n- `js` 代码：通过 `event` 参数获取需要传递的 `data-*` 参数\n```javascript\nswitchItem: function(event) {\n    console.log(event.target.dataset.id);\n}\n```\n\n#### 路由跳转方式及区别\n- `wx.switchTab`\n  - 跳转至 `tabBar` 页面，并关闭其他非 `tabBar` 页面\n  - 参数说明\n    \n    | 属性 | 类型 | 默认值 | 是否必须 | 说明 |\n    | --- | --- | --- | --- | --- |\n    | `url` | string | / | 是 | 需要跳转的 `tabBar` 页面的路径（需在 `app.json` 的 `tabBar` 字段定义的页面），<span style=\"color:red;\">路径后不能带参数</span>（传参可用全局变量） |\n    | `success` | function | / | 否 | 接口调用成功的回调函数 |\n    | `fail` | function | / | 否 | 接口调用失败的回调函数 |\n    | `complete` | function | / | 否 | 接口调用结束的回调函数（无论成功或失败，都会执行） |\n  - 代码示例\n    ```javascript\n    // 跳转\n    wx.switchTab({\n        url: '/pages/catagory/catagory',\n    });\n    ```\n- `wx.navigationTo`\n  - <span style=\"color:red;\">保留当前页面</span>，跳转至应用内的某个页面。但是<span style=\"color:red;\">不能跳转至 `tabBar` 页面。</span>调用此方法，页面会被加入堆栈，可以使用 `wx.navigateBack` 执行返回上一页操作。\n  - 参数说明\n\n    | 属性 | 类型 | 默认值 | 是否必须 | 说明 |\n    | --- | --- | --- | --- | --- |\n    | `url` | string | / | 是 | 需要跳转的应用内非 `tabBar` 的页面的路径, 路径后可以带参数。参数与路径之间使用 `?` 分隔，参数键与参数值用 `=` 相连，不同参数用 `&` 分隔；如 `path?key=value&key2=value2` |\n    | `events` | object | / | 否 | 页面间通信接口，用于监听被打开页面发送到当前页面的数据。基础库 `2.7.3` 开始支持 |\n    | `success` | function | / | 否 | 接口调用成功的回调函数 |\n    | `fail` | function | / | 否 | 接口调用失败的回调函数 |\n    | `complete` | function | / | 否 | 接口调用结束的回调函数（无论成功或失败，都会执行） |\n  - 代码示例\n    ```javascript\n    // 跳转\n    confirmSearch: function (event) {\n        wx.navigateTo({\n          url: `/pages/product_list/product_list?name=${event.detail.value}`,\n        })\n    }\n    // 参数接收\n    onLoad: function (options) {\n        const searchName = options.name || '';\n        ...\n      }\n    ```\n- `wx.redirectTo`\n    - <span style=\"color:red;\">关闭当前页面</span>，跳转至应用内的某个页面。但是<span style=\"color:red;\">不能跳转至 `tabBar` 页面。</span>调用此方法，页面不会被加入堆栈，无法使用 `wx.navigateBack` 执行返回上一页操作。\n    - 参数说明\n\n      | 属性 | 类型 | 默认值 | 是否必须 | 说明 |\n      | --- | --- | --- | --- | --- |\n      | `url` | string | / | 是 | 需要跳转的应用内非 `tabBar` 的页面的路径, 路径后可以带参数。参数与路径之间使用 `?` 分隔，参数键与参数值用 `=` 相连，不同参数用 `&` 分隔；如 `path?key=value&key2=value2` |\n      | `success` | function | / | 否 | 接口调用成功的回调函数 |\n      | `fail` | function | / | 否 | 接口调用失败的回调函数 |\n      | `complete` | function | / | 否 | 接口调用结束的回调函数（无论成功或失败，都会执行） |\n    - 使用方法与 `wx.navigateTo` 类似\n- `wx.navigateBack`\n    - 关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages 获取当前的页面栈，决定需要返回几层\n    - 参数说明\n\n      | 属性 | 类型 | 默认值 | 是否必须 | 说明 |\n      | --- | --- | --- | --- | --- |\n      | `delta` | number | / | 是 | 返回的页面数，如果 `delta` 大于现有页面数，则返回到首页 |\n      | `success` | function | / | 否 | 接口调用成功的回调函数 |\n      | `fail` | function | / | 否 | 接口调用失败的回调函数 |\n      | `complete` | function | / | 否 | 接口调用结束的回调函数（无论成功或失败，都会执行） |\n    - 代码示例\n    ```javascript\n    // 此处是A页面\n    wx.navigateTo({\n        url: 'B?id=1'\n    })\n    // 此处是B页面\n    wx.navigateTo({\n        url: 'C?id=1'\n    })\n    // 在C页面内 navigateBack，将返回A页面\n    wx.navigateBack({\n        delta: 2\n    })\n    ```\n- `wx.reLaunch`\n    - 关闭所有页面，打开到应用内的某个页面\n    - 参数说明\n\n      | 属性 | 类型 | 默认值 | 是否必须 | 说明 |\n      | --- | --- | --- | --- | --- |\n      | `url` | string | / | 是 | 需要跳转的页面的路径, 路径后可以带参数。参数与路径之间使用 `?` 分隔，参数键与参数值用 `=` 相连，不同参数用 `&` 分隔；如 `path?key=value&key2=value2` |\n      | `success` | function | / | 否 | 接口调用成功的回调函数 |\n      | `fail` | function | / | 否 | 接口调用失败的回调函数 |\n      | `complete` | function | / | 否 | 接口调用结束的回调函数（无论成功或失败，都会执行） |\n\n#### `wxml` 中使用三目运算符\n```html\n<view class=\"{{activeFilterName==='sale' ? 'active' : ''}}\" bindtap='onClickFilter' data-name='sale'>销量</view>\n<view class=\"{{activeFilterName==='new_product' ? 'active' : ''}}\" bindtap='onClickFilter' data-name='new_product'>新品</view>\n<view class=\"{{activeFilterName==='high_praise' ? 'active' : ''}}\" bindtap='onClickFilter' data-name='high_praise'>好评</view>\n<view class=\"{{activeFilterName==='price' ? 'active' : ''}}\" bindtap='onClickFilter' data-name='price'>\n```\n\n#### 设置和获取全局变量\n> `getApp()` 是一个全局函数，在应用内所有页面可以使用。\n- 设置\n```javascript\n// 用户自定义方法\nhotItemClick: function(event) {\n    getApp().globalData.activeItemName = event.currentTarget.dataset.name;\n    getApp().globalData.activeItemIndex = event.currentTarget.dataset.index;\n    wx.switchTab({\n      url: '/pages/catagory/catagory',\n    });\n}\n```\n- 获取\n```javascript\nonLoad: function (options) {\n    this.getCategory();\n    const activeItemName = getApp().globalData.activeItemName;\n    const activeItemIndex = getApp().globalData.activeItemIndex;\n    if (activeItemName && activeItemIndex) {\n      this.setData({\n        activeItem: activeItemName,\n        activeIndex: activeItemIndex,\n      });\n    }\n  }\n```\n\n#### 页面设置背景色\n- `wxss` 配置\n```less\npage {\n  background-color: #eaeaea;\n}\n```\n\n#### 隐藏与显示元素\n- `wx:if`\n  - `showClass` 为 `true` 时显示，为 `false` 时隐藏。\n```html\n<view class='official_wrapper' wx:if=\"{{showClass}}\">\n  <official-account class=\"official\" bindload=\"loadOfficial\" binderror=\"errorOfficial\"></official-account>\n</view>\n```\n- `hidden`\n  - `faceShow` 为 `true` 时显示，为 `false` 时隐藏。\n```html\n<button hidden=\"{{faceShow}}\" bindtap=\"toFace\">人脸识别</button>\n```\n- 区别\n  - `wx:if` 在隐藏的时候，元素会被销毁不渲染，而 `hidden` 在隐藏时仍然渲染，只是不呈现。\n  - 因此出于对性能的考虑，如果该元素需要频繁的进行显示隐藏操作，则选择使用 `hidden` 属性进行控制。如果该元素只在初始化的时候需要设置其是否显示，则使用 `wx:if` 进行处理。\n    \n#### 阿里云OSS图片缩略图\n- 使用方法\n  - 图片路径后面拼接如下路径：\n    - 格式：`?x-oss-process=image/[处理类型],x_100,y_50[宽高等参数]`\n    - 示例：`?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0`\n- 原图\n  - `https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png`\n    ![原图](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png)\n- 缩略图\n  - `https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0`\n    ![原图](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0)\n- <i class=\"fa fa-link\"></i> [参考文档](https://help.aliyun.com/document_detail/44688.html)\n\n#### 阿里云OSS视频预览图\n- `OSS` 提供的视频截帧功能和 `OSS` 图片服务功能使用的方式是类似的，都是通过传入 `x-oss-process` 参数的方式来实现的。最简单的使用方式就是直接在 `url` 后面拼接处理字符串。比如如下的 `url`：\n`http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast`\n![预览图](http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast)\n  - 指定的就是对 `demo.mp4` 这个文件直接调用视频截图，截图的位置由参数 `t` 指定，后面的单位是 `ms`，因此这个 `url` 的含义就是截取视频文件的第 `10s` 的内容。生成的 `url` 可以直接嵌入在网页提供给用户浏览。\n- 控制图片输出大小\n  - 视频截帧功能支持选择输出图片的大小，使用 `w` 参数指定宽度，`h` 指定长度;\n  - 不指定 `w` 和 `h` 参数，或者 `w` 和 `h` 都指定为 `0`，输出的图片大小为视频的真实长宽;\n  - 单独指定 `w` 或者 `h` 参数，输出的图片大小指定的数值，另外一个没有指定的数值通过视频原始比例自动计算出来;\n  - 同时指定 `w` 和 `h` 参数，输出图片大小为指定的数值，如果长宽比例和原始视频比不相等则强制拉伸;\n- 比如下面这个 `url` 就是将输出的图片大小指定为 `800` 宽度\n  - 输出格式：`OSS` 输出的视频格式支持 `jpg` 和 `png` 两种格式，可以通过 `f` 参数来切换，默认输出的是 `jpg` 格式，对于没有特殊需求的用户无需指定该参数\n    `http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast,w_800`\n    ![预览图](http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast,w_800)\n- <i class=\"fa fa-link\"></i> [参考文档](https://help.aliyun.com/document_detail/64555.html)\n\n#### 保存 `base64` 格式的图片\n```javascript\nconst saveImg = wx.getFileSystemManager()\nconst number = Math.random()\nsaveImg.writeFile({\n    filePath: wx.env.USER_DATA_PATH + '/pic' + number + '.png',\n    data: fileData,\n    encoding: 'base64',\n    success: res => {\n        wx.saveImageToPhotosAlbum({\n            filePath: wx.env.USER_DATA_PATH + '/pic' + number + '.png',\n            success: function (res) {\n                wx.showToast({\n                    title: '保存成功',\n                })\n            },\n            fail: function (err) {\n                console.log(err)\n            }\n        })\n        console.log(res)\n    }, fail: err => {\n        console.log(err)\n    }\n})\n```\n\n#### 小程序列表渲染 `wx:for` 中自定义 `index`,`item`\n```html\n<block wx:for=\"{{array}}\" wx:for-index=\"in\" wx:for-item=\"it\">\n    <view>{{in}}:{{it}}</view>\n</block>\n```\n\n#### 微信开放能力 `open-type` <i class=\"fa fa-link\"></i> [参考文档](https://developers.weixin.qq.com/miniprogram/dev/component/button.html)\n| 合法值 | 说明 | 锚点 |\n| --- | --- | --- |\n| `contact` | 打开客服会话，如果用户在会话中点击消息卡片后返回小程序，可以从 `bindcontact` 回调中获得具体信息 | [跳转](#contact-button) |\n| `share` | 触发用户转发 | [跳转](#) |\n| `getPhoneNumber` | 获取用户手机号，可以从 `bindgetphonenumber` 回调中获取到用户信息 | [跳转](#) |\n| `getUserInfo` | 获取用户信息，可以从 `bindgetuserinfo` 回调中获取到用户信息 | [跳转](#) |\n| `launchApp` | 打开 `APP`，可以通过 `app-parameter` 属性设定向 `APP` 传的参数 | [跳转](#) |\n| `openSetting` | 打开授权设置页 | [跳转](#) |\n| `feedback` | \t打开“意见反馈”页面，用户可提交反馈内容并上传日志，开发者可以登录小程序管理后台后进入左侧菜单“客服反馈”页面获取到反馈内容 | [跳转](#) |\n| `chooseAvatar` | \t获取用户头像，可以从 `bindchooseavatar` 回调中获取到头像信息 | [跳转](#) |\n\n#### <span id=\"contact-button\">微信小程序组件之 `button` 客服会话功能</span>\n- 先登录 [微信公众平台](https://mp.weixin.qq.com/) ，如果没有账户可以去申请一个微信小程序账号.\n- 在微信公众平台启动小程序客服推送，点击客服反馈来添加客服人员(客服人员可以添加100个).\n- 打开 [微信公众平台客服](https://mpkf.weixin.qq.com/) ，使用绑定的微信号扫码登录，点击登录进入微信公众平台客服界面.\n- 那么就开始愉快的敲代码\n```html\n<button open-type=\"contact\" bindcontact=\"handleContact\">客服</button>\n```","source":"_posts/微信小程序-开发笔记.md","raw":"---\ntitle: 微信小程序 - 开发笔记\ndate: 2022-01-17 14:13:12\ntags: [微信小程序，开发笔记]\ncategories: [微信小程序，开发笔记]\n---\n#### `data-*` 指令\n> 用于将 `wxml` 页面的数据传递至后台 `js`\n- `wxml` 代码\n```html\n<view class='container'>\n  <view class='nav_left'>\n    <block wx:for=\"{{navLeftItems}}\" wx:key=\"id\">\n      <view class='nav_left_items' bindtap='switchItem' data-id=\"{{item.id}}\">\n        {{item.categoryName}}\n      </view>\n    </block>\n  </view>\n</view>\n```\n- `js` 代码：通过 `event` 参数获取需要传递的 `data-*` 参数\n```javascript\nswitchItem: function(event) {\n    console.log(event.target.dataset.id);\n}\n```\n\n#### 路由跳转方式及区别\n- `wx.switchTab`\n  - 跳转至 `tabBar` 页面，并关闭其他非 `tabBar` 页面\n  - 参数说明\n    \n    | 属性 | 类型 | 默认值 | 是否必须 | 说明 |\n    | --- | --- | --- | --- | --- |\n    | `url` | string | / | 是 | 需要跳转的 `tabBar` 页面的路径（需在 `app.json` 的 `tabBar` 字段定义的页面），<span style=\"color:red;\">路径后不能带参数</span>（传参可用全局变量） |\n    | `success` | function | / | 否 | 接口调用成功的回调函数 |\n    | `fail` | function | / | 否 | 接口调用失败的回调函数 |\n    | `complete` | function | / | 否 | 接口调用结束的回调函数（无论成功或失败，都会执行） |\n  - 代码示例\n    ```javascript\n    // 跳转\n    wx.switchTab({\n        url: '/pages/catagory/catagory',\n    });\n    ```\n- `wx.navigationTo`\n  - <span style=\"color:red;\">保留当前页面</span>，跳转至应用内的某个页面。但是<span style=\"color:red;\">不能跳转至 `tabBar` 页面。</span>调用此方法，页面会被加入堆栈，可以使用 `wx.navigateBack` 执行返回上一页操作。\n  - 参数说明\n\n    | 属性 | 类型 | 默认值 | 是否必须 | 说明 |\n    | --- | --- | --- | --- | --- |\n    | `url` | string | / | 是 | 需要跳转的应用内非 `tabBar` 的页面的路径, 路径后可以带参数。参数与路径之间使用 `?` 分隔，参数键与参数值用 `=` 相连，不同参数用 `&` 分隔；如 `path?key=value&key2=value2` |\n    | `events` | object | / | 否 | 页面间通信接口，用于监听被打开页面发送到当前页面的数据。基础库 `2.7.3` 开始支持 |\n    | `success` | function | / | 否 | 接口调用成功的回调函数 |\n    | `fail` | function | / | 否 | 接口调用失败的回调函数 |\n    | `complete` | function | / | 否 | 接口调用结束的回调函数（无论成功或失败，都会执行） |\n  - 代码示例\n    ```javascript\n    // 跳转\n    confirmSearch: function (event) {\n        wx.navigateTo({\n          url: `/pages/product_list/product_list?name=${event.detail.value}`,\n        })\n    }\n    // 参数接收\n    onLoad: function (options) {\n        const searchName = options.name || '';\n        ...\n      }\n    ```\n- `wx.redirectTo`\n    - <span style=\"color:red;\">关闭当前页面</span>，跳转至应用内的某个页面。但是<span style=\"color:red;\">不能跳转至 `tabBar` 页面。</span>调用此方法，页面不会被加入堆栈，无法使用 `wx.navigateBack` 执行返回上一页操作。\n    - 参数说明\n\n      | 属性 | 类型 | 默认值 | 是否必须 | 说明 |\n      | --- | --- | --- | --- | --- |\n      | `url` | string | / | 是 | 需要跳转的应用内非 `tabBar` 的页面的路径, 路径后可以带参数。参数与路径之间使用 `?` 分隔，参数键与参数值用 `=` 相连，不同参数用 `&` 分隔；如 `path?key=value&key2=value2` |\n      | `success` | function | / | 否 | 接口调用成功的回调函数 |\n      | `fail` | function | / | 否 | 接口调用失败的回调函数 |\n      | `complete` | function | / | 否 | 接口调用结束的回调函数（无论成功或失败，都会执行） |\n    - 使用方法与 `wx.navigateTo` 类似\n- `wx.navigateBack`\n    - 关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages 获取当前的页面栈，决定需要返回几层\n    - 参数说明\n\n      | 属性 | 类型 | 默认值 | 是否必须 | 说明 |\n      | --- | --- | --- | --- | --- |\n      | `delta` | number | / | 是 | 返回的页面数，如果 `delta` 大于现有页面数，则返回到首页 |\n      | `success` | function | / | 否 | 接口调用成功的回调函数 |\n      | `fail` | function | / | 否 | 接口调用失败的回调函数 |\n      | `complete` | function | / | 否 | 接口调用结束的回调函数（无论成功或失败，都会执行） |\n    - 代码示例\n    ```javascript\n    // 此处是A页面\n    wx.navigateTo({\n        url: 'B?id=1'\n    })\n    // 此处是B页面\n    wx.navigateTo({\n        url: 'C?id=1'\n    })\n    // 在C页面内 navigateBack，将返回A页面\n    wx.navigateBack({\n        delta: 2\n    })\n    ```\n- `wx.reLaunch`\n    - 关闭所有页面，打开到应用内的某个页面\n    - 参数说明\n\n      | 属性 | 类型 | 默认值 | 是否必须 | 说明 |\n      | --- | --- | --- | --- | --- |\n      | `url` | string | / | 是 | 需要跳转的页面的路径, 路径后可以带参数。参数与路径之间使用 `?` 分隔，参数键与参数值用 `=` 相连，不同参数用 `&` 分隔；如 `path?key=value&key2=value2` |\n      | `success` | function | / | 否 | 接口调用成功的回调函数 |\n      | `fail` | function | / | 否 | 接口调用失败的回调函数 |\n      | `complete` | function | / | 否 | 接口调用结束的回调函数（无论成功或失败，都会执行） |\n\n#### `wxml` 中使用三目运算符\n```html\n<view class=\"{{activeFilterName==='sale' ? 'active' : ''}}\" bindtap='onClickFilter' data-name='sale'>销量</view>\n<view class=\"{{activeFilterName==='new_product' ? 'active' : ''}}\" bindtap='onClickFilter' data-name='new_product'>新品</view>\n<view class=\"{{activeFilterName==='high_praise' ? 'active' : ''}}\" bindtap='onClickFilter' data-name='high_praise'>好评</view>\n<view class=\"{{activeFilterName==='price' ? 'active' : ''}}\" bindtap='onClickFilter' data-name='price'>\n```\n\n#### 设置和获取全局变量\n> `getApp()` 是一个全局函数，在应用内所有页面可以使用。\n- 设置\n```javascript\n// 用户自定义方法\nhotItemClick: function(event) {\n    getApp().globalData.activeItemName = event.currentTarget.dataset.name;\n    getApp().globalData.activeItemIndex = event.currentTarget.dataset.index;\n    wx.switchTab({\n      url: '/pages/catagory/catagory',\n    });\n}\n```\n- 获取\n```javascript\nonLoad: function (options) {\n    this.getCategory();\n    const activeItemName = getApp().globalData.activeItemName;\n    const activeItemIndex = getApp().globalData.activeItemIndex;\n    if (activeItemName && activeItemIndex) {\n      this.setData({\n        activeItem: activeItemName,\n        activeIndex: activeItemIndex,\n      });\n    }\n  }\n```\n\n#### 页面设置背景色\n- `wxss` 配置\n```less\npage {\n  background-color: #eaeaea;\n}\n```\n\n#### 隐藏与显示元素\n- `wx:if`\n  - `showClass` 为 `true` 时显示，为 `false` 时隐藏。\n```html\n<view class='official_wrapper' wx:if=\"{{showClass}}\">\n  <official-account class=\"official\" bindload=\"loadOfficial\" binderror=\"errorOfficial\"></official-account>\n</view>\n```\n- `hidden`\n  - `faceShow` 为 `true` 时显示，为 `false` 时隐藏。\n```html\n<button hidden=\"{{faceShow}}\" bindtap=\"toFace\">人脸识别</button>\n```\n- 区别\n  - `wx:if` 在隐藏的时候，元素会被销毁不渲染，而 `hidden` 在隐藏时仍然渲染，只是不呈现。\n  - 因此出于对性能的考虑，如果该元素需要频繁的进行显示隐藏操作，则选择使用 `hidden` 属性进行控制。如果该元素只在初始化的时候需要设置其是否显示，则使用 `wx:if` 进行处理。\n    \n#### 阿里云OSS图片缩略图\n- 使用方法\n  - 图片路径后面拼接如下路径：\n    - 格式：`?x-oss-process=image/[处理类型],x_100,y_50[宽高等参数]`\n    - 示例：`?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0`\n- 原图\n  - `https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png`\n    ![原图](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png)\n- 缩略图\n  - `https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0`\n    ![原图](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0)\n- <i class=\"fa fa-link\"></i> [参考文档](https://help.aliyun.com/document_detail/44688.html)\n\n#### 阿里云OSS视频预览图\n- `OSS` 提供的视频截帧功能和 `OSS` 图片服务功能使用的方式是类似的，都是通过传入 `x-oss-process` 参数的方式来实现的。最简单的使用方式就是直接在 `url` 后面拼接处理字符串。比如如下的 `url`：\n`http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast`\n![预览图](http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast)\n  - 指定的就是对 `demo.mp4` 这个文件直接调用视频截图，截图的位置由参数 `t` 指定，后面的单位是 `ms`，因此这个 `url` 的含义就是截取视频文件的第 `10s` 的内容。生成的 `url` 可以直接嵌入在网页提供给用户浏览。\n- 控制图片输出大小\n  - 视频截帧功能支持选择输出图片的大小，使用 `w` 参数指定宽度，`h` 指定长度;\n  - 不指定 `w` 和 `h` 参数，或者 `w` 和 `h` 都指定为 `0`，输出的图片大小为视频的真实长宽;\n  - 单独指定 `w` 或者 `h` 参数，输出的图片大小指定的数值，另外一个没有指定的数值通过视频原始比例自动计算出来;\n  - 同时指定 `w` 和 `h` 参数，输出图片大小为指定的数值，如果长宽比例和原始视频比不相等则强制拉伸;\n- 比如下面这个 `url` 就是将输出的图片大小指定为 `800` 宽度\n  - 输出格式：`OSS` 输出的视频格式支持 `jpg` 和 `png` 两种格式，可以通过 `f` 参数来切换，默认输出的是 `jpg` 格式，对于没有特殊需求的用户无需指定该参数\n    `http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast,w_800`\n    ![预览图](http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast,w_800)\n- <i class=\"fa fa-link\"></i> [参考文档](https://help.aliyun.com/document_detail/64555.html)\n\n#### 保存 `base64` 格式的图片\n```javascript\nconst saveImg = wx.getFileSystemManager()\nconst number = Math.random()\nsaveImg.writeFile({\n    filePath: wx.env.USER_DATA_PATH + '/pic' + number + '.png',\n    data: fileData,\n    encoding: 'base64',\n    success: res => {\n        wx.saveImageToPhotosAlbum({\n            filePath: wx.env.USER_DATA_PATH + '/pic' + number + '.png',\n            success: function (res) {\n                wx.showToast({\n                    title: '保存成功',\n                })\n            },\n            fail: function (err) {\n                console.log(err)\n            }\n        })\n        console.log(res)\n    }, fail: err => {\n        console.log(err)\n    }\n})\n```\n\n#### 小程序列表渲染 `wx:for` 中自定义 `index`,`item`\n```html\n<block wx:for=\"{{array}}\" wx:for-index=\"in\" wx:for-item=\"it\">\n    <view>{{in}}:{{it}}</view>\n</block>\n```\n\n#### 微信开放能力 `open-type` <i class=\"fa fa-link\"></i> [参考文档](https://developers.weixin.qq.com/miniprogram/dev/component/button.html)\n| 合法值 | 说明 | 锚点 |\n| --- | --- | --- |\n| `contact` | 打开客服会话，如果用户在会话中点击消息卡片后返回小程序，可以从 `bindcontact` 回调中获得具体信息 | [跳转](#contact-button) |\n| `share` | 触发用户转发 | [跳转](#) |\n| `getPhoneNumber` | 获取用户手机号，可以从 `bindgetphonenumber` 回调中获取到用户信息 | [跳转](#) |\n| `getUserInfo` | 获取用户信息，可以从 `bindgetuserinfo` 回调中获取到用户信息 | [跳转](#) |\n| `launchApp` | 打开 `APP`，可以通过 `app-parameter` 属性设定向 `APP` 传的参数 | [跳转](#) |\n| `openSetting` | 打开授权设置页 | [跳转](#) |\n| `feedback` | \t打开“意见反馈”页面，用户可提交反馈内容并上传日志，开发者可以登录小程序管理后台后进入左侧菜单“客服反馈”页面获取到反馈内容 | [跳转](#) |\n| `chooseAvatar` | \t获取用户头像，可以从 `bindchooseavatar` 回调中获取到头像信息 | [跳转](#) |\n\n#### <span id=\"contact-button\">微信小程序组件之 `button` 客服会话功能</span>\n- 先登录 [微信公众平台](https://mp.weixin.qq.com/) ，如果没有账户可以去申请一个微信小程序账号.\n- 在微信公众平台启动小程序客服推送，点击客服反馈来添加客服人员(客服人员可以添加100个).\n- 打开 [微信公众平台客服](https://mpkf.weixin.qq.com/) ，使用绑定的微信号扫码登录，点击登录进入微信公众平台客服界面.\n- 那么就开始愉快的敲代码\n```html\n<button open-type=\"contact\" bindcontact=\"handleContact\">客服</button>\n```","slug":"微信小程序-开发笔记","published":1,"updated":"2022-01-17T08:21:58.424Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbw001cokpc4fbtefkk","content":"<h4 id=\"data-指令\"><a href=\"#data-指令\" class=\"headerlink\" title=\"data-* 指令\"></a><code>data-*</code> 指令</h4><blockquote>\n<p>用于将 <code>wxml</code> 页面的数据传递至后台 <code>js</code></p>\n</blockquote>\n<ul>\n<li><code>wxml</code> 代码<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;container&#x27;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;nav_left&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;navLeftItems&#125;&#125;&quot;</span> <span class=\"attr\">wx:key</span>=<span class=\"string\">&quot;id&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;nav_left_items&#x27;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&#x27;switchItem&#x27;</span> <span class=\"attr\">data-id</span>=<span class=\"string\">&quot;&#123;&#123;item.id&#125;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">        &#123;&#123;item.categoryName&#125;&#125;</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><code>js</code> 代码：通过 <code>event</code> 参数获取需要传递的 <code>data-*</code> 参数<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">switchItem: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(event.target.dataset.id);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"路由跳转方式及区别\"><a href=\"#路由跳转方式及区别\" class=\"headerlink\" title=\"路由跳转方式及区别\"></a>路由跳转方式及区别</h4><ul>\n<li><p><code>wx.switchTab</code></p>\n<ul>\n<li>跳转至 <code>tabBar</code> 页面，并关闭其他非 <code>tabBar</code> 页面</li>\n<li>参数说明<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>url</code></td>\n<td>string</td>\n<td>/</td>\n<td>是</td>\n<td>需要跳转的 <code>tabBar</code> 页面的路径（需在 <code>app.json</code> 的 <code>tabBar</code> 字段定义的页面），<span style=\"color:red;\">路径后不能带参数</span>（传参可用全局变量）</td>\n</tr>\n<tr>\n<td><code>success</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td><code>fail</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td><code>complete</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用结束的回调函数（无论成功或失败，都会执行）</td>\n</tr>\n</tbody></table>\n</li>\n<li>代码示例<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 跳转</span></span><br><span class=\"line\">wx.switchTab(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/catagory/catagory&#x27;</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><code>wx.navigationTo</code></p>\n<ul>\n<li><p><span style=\"color:red;\">保留当前页面</span>，跳转至应用内的某个页面。但是<span style=\"color:red;\">不能跳转至 <code>tabBar</code> 页面。</span>调用此方法，页面会被加入堆栈，可以使用 <code>wx.navigateBack</code> 执行返回上一页操作。</p>\n</li>\n<li><p>参数说明</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>url</code></td>\n<td>string</td>\n<td>/</td>\n<td>是</td>\n<td>需要跳转的应用内非 <code>tabBar</code> 的页面的路径, 路径后可以带参数。参数与路径之间使用 <code>?</code> 分隔，参数键与参数值用 <code>=</code> 相连，不同参数用 <code>&amp;</code> 分隔；如 <code>path?key=value&amp;key2=value2</code></td>\n</tr>\n<tr>\n<td><code>events</code></td>\n<td>object</td>\n<td>/</td>\n<td>否</td>\n<td>页面间通信接口，用于监听被打开页面发送到当前页面的数据。基础库 <code>2.7.3</code> 开始支持</td>\n</tr>\n<tr>\n<td><code>success</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td><code>fail</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td><code>complete</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用结束的回调函数（无论成功或失败，都会执行）</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>代码示例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 跳转</span></span><br><span class=\"line\"><span class=\"attr\">confirmSearch</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    wx.navigateTo(&#123;</span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">`/pages/product_list/product_list?name=<span class=\"subst\">$&#123;event.detail.value&#125;</span>`</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 参数接收</span></span><br><span class=\"line\"><span class=\"attr\">onLoad</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> searchName = options.name || <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><code>wx.redirectTo</code></p>\n<ul>\n<li><p><span style=\"color:red;\">关闭当前页面</span>，跳转至应用内的某个页面。但是<span style=\"color:red;\">不能跳转至 <code>tabBar</code> 页面。</span>调用此方法，页面不会被加入堆栈，无法使用 <code>wx.navigateBack</code> 执行返回上一页操作。</p>\n</li>\n<li><p>参数说明</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>url</code></td>\n<td>string</td>\n<td>/</td>\n<td>是</td>\n<td>需要跳转的应用内非 <code>tabBar</code> 的页面的路径, 路径后可以带参数。参数与路径之间使用 <code>?</code> 分隔，参数键与参数值用 <code>=</code> 相连，不同参数用 <code>&amp;</code> 分隔；如 <code>path?key=value&amp;key2=value2</code></td>\n</tr>\n<tr>\n<td><code>success</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td><code>fail</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td><code>complete</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用结束的回调函数（无论成功或失败，都会执行）</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>使用方法与 <code>wx.navigateTo</code> 类似</p>\n</li>\n</ul>\n</li>\n<li><p><code>wx.navigateBack</code></p>\n<ul>\n<li><p>关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages 获取当前的页面栈，决定需要返回几层</p>\n</li>\n<li><p>参数说明</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>delta</code></td>\n<td>number</td>\n<td>/</td>\n<td>是</td>\n<td>返回的页面数，如果 <code>delta</code> 大于现有页面数，则返回到首页</td>\n</tr>\n<tr>\n<td><code>success</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td><code>fail</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td><code>complete</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用结束的回调函数（无论成功或失败，都会执行）</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>代码示例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 此处是A页面</span></span><br><span class=\"line\">wx.navigateTo(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;B?id=1&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 此处是B页面</span></span><br><span class=\"line\">wx.navigateTo(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;C?id=1&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 在C页面内 navigateBack，将返回A页面</span></span><br><span class=\"line\">wx.navigateBack(&#123;</span><br><span class=\"line\">    <span class=\"attr\">delta</span>: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><code>wx.reLaunch</code></p>\n<ul>\n<li><p>关闭所有页面，打开到应用内的某个页面</p>\n</li>\n<li><p>参数说明</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>url</code></td>\n<td>string</td>\n<td>/</td>\n<td>是</td>\n<td>需要跳转的页面的路径, 路径后可以带参数。参数与路径之间使用 <code>?</code> 分隔，参数键与参数值用 <code>=</code> 相连，不同参数用 <code>&amp;</code> 分隔；如 <code>path?key=value&amp;key2=value2</code></td>\n</tr>\n<tr>\n<td><code>success</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td><code>fail</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td><code>complete</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用结束的回调函数（无论成功或失败，都会执行）</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"wxml-中使用三目运算符\"><a href=\"#wxml-中使用三目运算符\" class=\"headerlink\" title=\"wxml 中使用三目运算符\"></a><code>wxml</code> 中使用三目运算符</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&#123;&#123;activeFilterName===&#x27;sale&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&#x27;onClickFilter&#x27;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&#x27;sale&#x27;</span>&gt;</span>销量<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&#123;&#123;activeFilterName===&#x27;new_product&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&#x27;onClickFilter&#x27;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&#x27;new_product&#x27;</span>&gt;</span>新品<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&#123;&#123;activeFilterName===&#x27;high_praise&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&#x27;onClickFilter&#x27;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&#x27;high_praise&#x27;</span>&gt;</span>好评<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&#123;&#123;activeFilterName===&#x27;price&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&#x27;onClickFilter&#x27;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&#x27;price&#x27;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"设置和获取全局变量\"><a href=\"#设置和获取全局变量\" class=\"headerlink\" title=\"设置和获取全局变量\"></a>设置和获取全局变量</h4><blockquote>\n<p><code>getApp()</code> 是一个全局函数，在应用内所有页面可以使用。</p>\n</blockquote>\n<ul>\n<li>设置<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 用户自定义方法</span></span><br><span class=\"line\"><span class=\"attr\">hotItemClick</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    getApp().globalData.activeItemName = event.currentTarget.dataset.name;</span><br><span class=\"line\">    getApp().globalData.activeItemIndex = event.currentTarget.dataset.index;</span><br><span class=\"line\">    wx.switchTab(&#123;</span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/catagory/catagory&#x27;</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>获取<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onLoad: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getCategory();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> activeItemName = getApp().globalData.activeItemName;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> activeItemIndex = getApp().globalData.activeItemIndex;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (activeItemName &amp;&amp; activeItemIndex) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">        <span class=\"attr\">activeItem</span>: activeItemName,</span><br><span class=\"line\">        <span class=\"attr\">activeIndex</span>: activeItemIndex,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"页面设置背景色\"><a href=\"#页面设置背景色\" class=\"headerlink\" title=\"页面设置背景色\"></a>页面设置背景色</h4><ul>\n<li><code>wxss</code> 配置<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">page</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#eaeaea</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"隐藏与显示元素\"><a href=\"#隐藏与显示元素\" class=\"headerlink\" title=\"隐藏与显示元素\"></a>隐藏与显示元素</h4><ul>\n<li><code>wx:if</code><ul>\n<li><code>showClass</code> 为 <code>true</code> 时显示，为 <code>false</code> 时隐藏。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;official_wrapper&#x27;</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">&quot;&#123;&#123;showClass&#125;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">official-account</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;official&quot;</span> <span class=\"attr\">bindload</span>=<span class=\"string\">&quot;loadOfficial&quot;</span> <span class=\"attr\">binderror</span>=<span class=\"string\">&quot;errorOfficial&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">official-account</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><code>hidden</code><ul>\n<li><code>faceShow</code> 为 <code>true</code> 时显示，为 <code>false</code> 时隐藏。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">hidden</span>=<span class=\"string\">&quot;&#123;&#123;faceShow&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;toFace&quot;</span>&gt;</span>人脸识别<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>区别<ul>\n<li><code>wx:if</code> 在隐藏的时候，元素会被销毁不渲染，而 <code>hidden</code> 在隐藏时仍然渲染，只是不呈现。</li>\n<li>因此出于对性能的考虑，如果该元素需要频繁的进行显示隐藏操作，则选择使用 <code>hidden</code> 属性进行控制。如果该元素只在初始化的时候需要设置其是否显示，则使用 <code>wx:if</code> 进行处理。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"阿里云OSS图片缩略图\"><a href=\"#阿里云OSS图片缩略图\" class=\"headerlink\" title=\"阿里云OSS图片缩略图\"></a>阿里云OSS图片缩略图</h4><ul>\n<li>使用方法<ul>\n<li>图片路径后面拼接如下路径：<ul>\n<li>格式：<code>?x-oss-process=image/[处理类型],x_100,y_50[宽高等参数]</code></li>\n<li>示例：<code>?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>原图<ul>\n<li><code>https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png</code><br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png\" alt=\"原图\"></li>\n</ul>\n</li>\n<li>缩略图<ul>\n<li><code>https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0</code><br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0\" alt=\"原图\"></li>\n</ul>\n</li>\n<li><i class=\"fa fa-link\"></i> <a href=\"https://help.aliyun.com/document_detail/44688.html\">参考文档</a></li>\n</ul>\n<h4 id=\"阿里云OSS视频预览图\"><a href=\"#阿里云OSS视频预览图\" class=\"headerlink\" title=\"阿里云OSS视频预览图\"></a>阿里云OSS视频预览图</h4><ul>\n<li><code>OSS</code> 提供的视频截帧功能和 <code>OSS</code> 图片服务功能使用的方式是类似的，都是通过传入 <code>x-oss-process</code> 参数的方式来实现的。最简单的使用方式就是直接在 <code>url</code> 后面拼接处理字符串。比如如下的 <code>url</code>：<br><code>http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast</code><br><img src=\"http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast\" alt=\"预览图\"><ul>\n<li>指定的就是对 <code>demo.mp4</code> 这个文件直接调用视频截图，截图的位置由参数 <code>t</code> 指定，后面的单位是 <code>ms</code>，因此这个 <code>url</code> 的含义就是截取视频文件的第 <code>10s</code> 的内容。生成的 <code>url</code> 可以直接嵌入在网页提供给用户浏览。</li>\n</ul>\n</li>\n<li>控制图片输出大小<ul>\n<li>视频截帧功能支持选择输出图片的大小，使用 <code>w</code> 参数指定宽度，<code>h</code> 指定长度;</li>\n<li>不指定 <code>w</code> 和 <code>h</code> 参数，或者 <code>w</code> 和 <code>h</code> 都指定为 <code>0</code>，输出的图片大小为视频的真实长宽;</li>\n<li>单独指定 <code>w</code> 或者 <code>h</code> 参数，输出的图片大小指定的数值，另外一个没有指定的数值通过视频原始比例自动计算出来;</li>\n<li>同时指定 <code>w</code> 和 <code>h</code> 参数，输出图片大小为指定的数值，如果长宽比例和原始视频比不相等则强制拉伸;</li>\n</ul>\n</li>\n<li>比如下面这个 <code>url</code> 就是将输出的图片大小指定为 <code>800</code> 宽度<ul>\n<li>输出格式：<code>OSS</code> 输出的视频格式支持 <code>jpg</code> 和 <code>png</code> 两种格式，可以通过 <code>f</code> 参数来切换，默认输出的是 <code>jpg</code> 格式，对于没有特殊需求的用户无需指定该参数<br><code>http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast,w_800</code><br><img src=\"http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast,w_800\" alt=\"预览图\"></li>\n</ul>\n</li>\n<li><i class=\"fa fa-link\"></i> <a href=\"https://help.aliyun.com/document_detail/64555.html\">参考文档</a></li>\n</ul>\n<h4 id=\"保存-base64-格式的图片\"><a href=\"#保存-base64-格式的图片\" class=\"headerlink\" title=\"保存 base64 格式的图片\"></a>保存 <code>base64</code> 格式的图片</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> saveImg = wx.getFileSystemManager()</span><br><span class=\"line\"><span class=\"keyword\">const</span> number = <span class=\"built_in\">Math</span>.random()</span><br><span class=\"line\">saveImg.writeFile(&#123;</span><br><span class=\"line\">    <span class=\"attr\">filePath</span>: wx.env.USER_DATA_PATH + <span class=\"string\">&#x27;/pic&#x27;</span> + number + <span class=\"string\">&#x27;.png&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: fileData,</span><br><span class=\"line\">    <span class=\"attr\">encoding</span>: <span class=\"string\">&#x27;base64&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        wx.saveImageToPhotosAlbum(&#123;</span><br><span class=\"line\">            <span class=\"attr\">filePath</span>: wx.env.USER_DATA_PATH + <span class=\"string\">&#x27;/pic&#x27;</span> + number + <span class=\"string\">&#x27;.png&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">                wx.showToast(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;保存成功&#x27;</span>,</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">fail</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">    &#125;, <span class=\"attr\">fail</span>: <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"小程序列表渲染-wx-for-中自定义-index-item\"><a href=\"#小程序列表渲染-wx-for-中自定义-index-item\" class=\"headerlink\" title=\"小程序列表渲染 wx:for 中自定义 index,item\"></a>小程序列表渲染 <code>wx:for</code> 中自定义 <code>index</code>,<code>item</code></h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;array&#125;&#125;&quot;</span> <span class=\"attr\">wx:for-index</span>=<span class=\"string\">&quot;in&quot;</span> <span class=\"attr\">wx:for-item</span>=<span class=\"string\">&quot;it&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span>&#123;&#123;in&#125;&#125;:&#123;&#123;it&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"微信开放能力-open-type-参考文档\"><a href=\"#微信开放能力-open-type-参考文档\" class=\"headerlink\" title=\"微信开放能力 open-type  参考文档\"></a>微信开放能力 <code>open-type</code> <i class=\"fa fa-link\"></i> <a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/button.html\">参考文档</a></h4><table>\n<thead>\n<tr>\n<th>合法值</th>\n<th>说明</th>\n<th>锚点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>contact</code></td>\n<td>打开客服会话，如果用户在会话中点击消息卡片后返回小程序，可以从 <code>bindcontact</code> 回调中获得具体信息</td>\n<td><a href=\"#contact-button\">跳转</a></td>\n</tr>\n<tr>\n<td><code>share</code></td>\n<td>触发用户转发</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>getPhoneNumber</code></td>\n<td>获取用户手机号，可以从 <code>bindgetphonenumber</code> 回调中获取到用户信息</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>getUserInfo</code></td>\n<td>获取用户信息，可以从 <code>bindgetuserinfo</code> 回调中获取到用户信息</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>launchApp</code></td>\n<td>打开 <code>APP</code>，可以通过 <code>app-parameter</code> 属性设定向 <code>APP</code> 传的参数</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>openSetting</code></td>\n<td>打开授权设置页</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>feedback</code></td>\n<td>打开“意见反馈”页面，用户可提交反馈内容并上传日志，开发者可以登录小程序管理后台后进入左侧菜单“客服反馈”页面获取到反馈内容</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>chooseAvatar</code></td>\n<td>获取用户头像，可以从 <code>bindchooseavatar</code> 回调中获取到头像信息</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n</tbody></table>\n<h4 id=\"微信小程序组件之-button-客服会话功能\"><a href=\"#微信小程序组件之-button-客服会话功能\" class=\"headerlink\" title=\"微信小程序组件之 button 客服会话功能\"></a><span id=\"contact-button\">微信小程序组件之 <code>button</code> 客服会话功能</span></h4><ul>\n<li>先登录 <a href=\"https://mp.weixin.qq.com/\">微信公众平台</a> ，如果没有账户可以去申请一个微信小程序账号.</li>\n<li>在微信公众平台启动小程序客服推送，点击客服反馈来添加客服人员(客服人员可以添加100个).</li>\n<li>打开 <a href=\"https://mpkf.weixin.qq.com/\">微信公众平台客服</a> ，使用绑定的微信号扫码登录，点击登录进入微信公众平台客服界面.</li>\n<li>那么就开始愉快的敲代码<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;contact&quot;</span> <span class=\"attr\">bindcontact</span>=<span class=\"string\">&quot;handleContact&quot;</span>&gt;</span>客服<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"length":3450,"excerpt":"","more":"<h4 id=\"data-指令\"><a href=\"#data-指令\" class=\"headerlink\" title=\"data-* 指令\"></a><code>data-*</code> 指令</h4><blockquote>\n<p>用于将 <code>wxml</code> 页面的数据传递至后台 <code>js</code></p>\n</blockquote>\n<ul>\n<li><code>wxml</code> 代码<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;container&#x27;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;nav_left&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;navLeftItems&#125;&#125;&quot;</span> <span class=\"attr\">wx:key</span>=<span class=\"string\">&quot;id&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;nav_left_items&#x27;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&#x27;switchItem&#x27;</span> <span class=\"attr\">data-id</span>=<span class=\"string\">&quot;&#123;&#123;item.id&#125;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">        &#123;&#123;item.categoryName&#125;&#125;</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><code>js</code> 代码：通过 <code>event</code> 参数获取需要传递的 <code>data-*</code> 参数<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">switchItem: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(event.target.dataset.id);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"路由跳转方式及区别\"><a href=\"#路由跳转方式及区别\" class=\"headerlink\" title=\"路由跳转方式及区别\"></a>路由跳转方式及区别</h4><ul>\n<li><p><code>wx.switchTab</code></p>\n<ul>\n<li>跳转至 <code>tabBar</code> 页面，并关闭其他非 <code>tabBar</code> 页面</li>\n<li>参数说明<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>url</code></td>\n<td>string</td>\n<td>/</td>\n<td>是</td>\n<td>需要跳转的 <code>tabBar</code> 页面的路径（需在 <code>app.json</code> 的 <code>tabBar</code> 字段定义的页面），<span style=\"color:red;\">路径后不能带参数</span>（传参可用全局变量）</td>\n</tr>\n<tr>\n<td><code>success</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td><code>fail</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td><code>complete</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用结束的回调函数（无论成功或失败，都会执行）</td>\n</tr>\n</tbody></table>\n</li>\n<li>代码示例<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 跳转</span></span><br><span class=\"line\">wx.switchTab(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/catagory/catagory&#x27;</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><code>wx.navigationTo</code></p>\n<ul>\n<li><p><span style=\"color:red;\">保留当前页面</span>，跳转至应用内的某个页面。但是<span style=\"color:red;\">不能跳转至 <code>tabBar</code> 页面。</span>调用此方法，页面会被加入堆栈，可以使用 <code>wx.navigateBack</code> 执行返回上一页操作。</p>\n</li>\n<li><p>参数说明</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>url</code></td>\n<td>string</td>\n<td>/</td>\n<td>是</td>\n<td>需要跳转的应用内非 <code>tabBar</code> 的页面的路径, 路径后可以带参数。参数与路径之间使用 <code>?</code> 分隔，参数键与参数值用 <code>=</code> 相连，不同参数用 <code>&amp;</code> 分隔；如 <code>path?key=value&amp;key2=value2</code></td>\n</tr>\n<tr>\n<td><code>events</code></td>\n<td>object</td>\n<td>/</td>\n<td>否</td>\n<td>页面间通信接口，用于监听被打开页面发送到当前页面的数据。基础库 <code>2.7.3</code> 开始支持</td>\n</tr>\n<tr>\n<td><code>success</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td><code>fail</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td><code>complete</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用结束的回调函数（无论成功或失败，都会执行）</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>代码示例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 跳转</span></span><br><span class=\"line\"><span class=\"attr\">confirmSearch</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    wx.navigateTo(&#123;</span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">`/pages/product_list/product_list?name=<span class=\"subst\">$&#123;event.detail.value&#125;</span>`</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 参数接收</span></span><br><span class=\"line\"><span class=\"attr\">onLoad</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> searchName = options.name || <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><code>wx.redirectTo</code></p>\n<ul>\n<li><p><span style=\"color:red;\">关闭当前页面</span>，跳转至应用内的某个页面。但是<span style=\"color:red;\">不能跳转至 <code>tabBar</code> 页面。</span>调用此方法，页面不会被加入堆栈，无法使用 <code>wx.navigateBack</code> 执行返回上一页操作。</p>\n</li>\n<li><p>参数说明</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>url</code></td>\n<td>string</td>\n<td>/</td>\n<td>是</td>\n<td>需要跳转的应用内非 <code>tabBar</code> 的页面的路径, 路径后可以带参数。参数与路径之间使用 <code>?</code> 分隔，参数键与参数值用 <code>=</code> 相连，不同参数用 <code>&amp;</code> 分隔；如 <code>path?key=value&amp;key2=value2</code></td>\n</tr>\n<tr>\n<td><code>success</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td><code>fail</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td><code>complete</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用结束的回调函数（无论成功或失败，都会执行）</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>使用方法与 <code>wx.navigateTo</code> 类似</p>\n</li>\n</ul>\n</li>\n<li><p><code>wx.navigateBack</code></p>\n<ul>\n<li><p>关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages 获取当前的页面栈，决定需要返回几层</p>\n</li>\n<li><p>参数说明</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>delta</code></td>\n<td>number</td>\n<td>/</td>\n<td>是</td>\n<td>返回的页面数，如果 <code>delta</code> 大于现有页面数，则返回到首页</td>\n</tr>\n<tr>\n<td><code>success</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td><code>fail</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td><code>complete</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用结束的回调函数（无论成功或失败，都会执行）</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>代码示例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 此处是A页面</span></span><br><span class=\"line\">wx.navigateTo(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;B?id=1&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 此处是B页面</span></span><br><span class=\"line\">wx.navigateTo(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;C?id=1&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 在C页面内 navigateBack，将返回A页面</span></span><br><span class=\"line\">wx.navigateBack(&#123;</span><br><span class=\"line\">    <span class=\"attr\">delta</span>: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><code>wx.reLaunch</code></p>\n<ul>\n<li><p>关闭所有页面，打开到应用内的某个页面</p>\n</li>\n<li><p>参数说明</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>url</code></td>\n<td>string</td>\n<td>/</td>\n<td>是</td>\n<td>需要跳转的页面的路径, 路径后可以带参数。参数与路径之间使用 <code>?</code> 分隔，参数键与参数值用 <code>=</code> 相连，不同参数用 <code>&amp;</code> 分隔；如 <code>path?key=value&amp;key2=value2</code></td>\n</tr>\n<tr>\n<td><code>success</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td><code>fail</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td><code>complete</code></td>\n<td>function</td>\n<td>/</td>\n<td>否</td>\n<td>接口调用结束的回调函数（无论成功或失败，都会执行）</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"wxml-中使用三目运算符\"><a href=\"#wxml-中使用三目运算符\" class=\"headerlink\" title=\"wxml 中使用三目运算符\"></a><code>wxml</code> 中使用三目运算符</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&#123;&#123;activeFilterName===&#x27;sale&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&#x27;onClickFilter&#x27;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&#x27;sale&#x27;</span>&gt;</span>销量<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&#123;&#123;activeFilterName===&#x27;new_product&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&#x27;onClickFilter&#x27;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&#x27;new_product&#x27;</span>&gt;</span>新品<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&#123;&#123;activeFilterName===&#x27;high_praise&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&#x27;onClickFilter&#x27;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&#x27;high_praise&#x27;</span>&gt;</span>好评<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&#123;&#123;activeFilterName===&#x27;price&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&#x27;onClickFilter&#x27;</span> <span class=\"attr\">data-name</span>=<span class=\"string\">&#x27;price&#x27;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"设置和获取全局变量\"><a href=\"#设置和获取全局变量\" class=\"headerlink\" title=\"设置和获取全局变量\"></a>设置和获取全局变量</h4><blockquote>\n<p><code>getApp()</code> 是一个全局函数，在应用内所有页面可以使用。</p>\n</blockquote>\n<ul>\n<li>设置<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 用户自定义方法</span></span><br><span class=\"line\"><span class=\"attr\">hotItemClick</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    getApp().globalData.activeItemName = event.currentTarget.dataset.name;</span><br><span class=\"line\">    getApp().globalData.activeItemIndex = event.currentTarget.dataset.index;</span><br><span class=\"line\">    wx.switchTab(&#123;</span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/pages/catagory/catagory&#x27;</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>获取<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onLoad: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getCategory();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> activeItemName = getApp().globalData.activeItemName;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> activeItemIndex = getApp().globalData.activeItemIndex;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (activeItemName &amp;&amp; activeItemIndex) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">        <span class=\"attr\">activeItem</span>: activeItemName,</span><br><span class=\"line\">        <span class=\"attr\">activeIndex</span>: activeItemIndex,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"页面设置背景色\"><a href=\"#页面设置背景色\" class=\"headerlink\" title=\"页面设置背景色\"></a>页面设置背景色</h4><ul>\n<li><code>wxss</code> 配置<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">page</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#eaeaea</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"隐藏与显示元素\"><a href=\"#隐藏与显示元素\" class=\"headerlink\" title=\"隐藏与显示元素\"></a>隐藏与显示元素</h4><ul>\n<li><code>wx:if</code><ul>\n<li><code>showClass</code> 为 <code>true</code> 时显示，为 <code>false</code> 时隐藏。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;official_wrapper&#x27;</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">&quot;&#123;&#123;showClass&#125;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">official-account</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;official&quot;</span> <span class=\"attr\">bindload</span>=<span class=\"string\">&quot;loadOfficial&quot;</span> <span class=\"attr\">binderror</span>=<span class=\"string\">&quot;errorOfficial&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">official-account</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><code>hidden</code><ul>\n<li><code>faceShow</code> 为 <code>true</code> 时显示，为 <code>false</code> 时隐藏。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">hidden</span>=<span class=\"string\">&quot;&#123;&#123;faceShow&#125;&#125;&quot;</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;toFace&quot;</span>&gt;</span>人脸识别<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>区别<ul>\n<li><code>wx:if</code> 在隐藏的时候，元素会被销毁不渲染，而 <code>hidden</code> 在隐藏时仍然渲染，只是不呈现。</li>\n<li>因此出于对性能的考虑，如果该元素需要频繁的进行显示隐藏操作，则选择使用 <code>hidden</code> 属性进行控制。如果该元素只在初始化的时候需要设置其是否显示，则使用 <code>wx:if</code> 进行处理。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"阿里云OSS图片缩略图\"><a href=\"#阿里云OSS图片缩略图\" class=\"headerlink\" title=\"阿里云OSS图片缩略图\"></a>阿里云OSS图片缩略图</h4><ul>\n<li>使用方法<ul>\n<li>图片路径后面拼接如下路径：<ul>\n<li>格式：<code>?x-oss-process=image/[处理类型],x_100,y_50[宽高等参数]</code></li>\n<li>示例：<code>?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>原图<ul>\n<li><code>https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png</code><br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png\" alt=\"原图\"></li>\n</ul>\n</li>\n<li>缩略图<ul>\n<li><code>https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0</code><br><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0\" alt=\"原图\"></li>\n</ul>\n</li>\n<li><i class=\"fa fa-link\"></i> <a href=\"https://help.aliyun.com/document_detail/44688.html\">参考文档</a></li>\n</ul>\n<h4 id=\"阿里云OSS视频预览图\"><a href=\"#阿里云OSS视频预览图\" class=\"headerlink\" title=\"阿里云OSS视频预览图\"></a>阿里云OSS视频预览图</h4><ul>\n<li><code>OSS</code> 提供的视频截帧功能和 <code>OSS</code> 图片服务功能使用的方式是类似的，都是通过传入 <code>x-oss-process</code> 参数的方式来实现的。最简单的使用方式就是直接在 <code>url</code> 后面拼接处理字符串。比如如下的 <code>url</code>：<br><code>http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast</code><br><img src=\"http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast\" alt=\"预览图\"><ul>\n<li>指定的就是对 <code>demo.mp4</code> 这个文件直接调用视频截图，截图的位置由参数 <code>t</code> 指定，后面的单位是 <code>ms</code>，因此这个 <code>url</code> 的含义就是截取视频文件的第 <code>10s</code> 的内容。生成的 <code>url</code> 可以直接嵌入在网页提供给用户浏览。</li>\n</ul>\n</li>\n<li>控制图片输出大小<ul>\n<li>视频截帧功能支持选择输出图片的大小，使用 <code>w</code> 参数指定宽度，<code>h</code> 指定长度;</li>\n<li>不指定 <code>w</code> 和 <code>h</code> 参数，或者 <code>w</code> 和 <code>h</code> 都指定为 <code>0</code>，输出的图片大小为视频的真实长宽;</li>\n<li>单独指定 <code>w</code> 或者 <code>h</code> 参数，输出的图片大小指定的数值，另外一个没有指定的数值通过视频原始比例自动计算出来;</li>\n<li>同时指定 <code>w</code> 和 <code>h</code> 参数，输出图片大小为指定的数值，如果长宽比例和原始视频比不相等则强制拉伸;</li>\n</ul>\n</li>\n<li>比如下面这个 <code>url</code> 就是将输出的图片大小指定为 <code>800</code> 宽度<ul>\n<li>输出格式：<code>OSS</code> 输出的视频格式支持 <code>jpg</code> 和 <code>png</code> 两种格式，可以通过 <code>f</code> 参数来切换，默认输出的是 <code>jpg</code> 格式，对于没有特殊需求的用户无需指定该参数<br><code>http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast,w_800</code><br><img src=\"http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast,w_800\" alt=\"预览图\"></li>\n</ul>\n</li>\n<li><i class=\"fa fa-link\"></i> <a href=\"https://help.aliyun.com/document_detail/64555.html\">参考文档</a></li>\n</ul>\n<h4 id=\"保存-base64-格式的图片\"><a href=\"#保存-base64-格式的图片\" class=\"headerlink\" title=\"保存 base64 格式的图片\"></a>保存 <code>base64</code> 格式的图片</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> saveImg = wx.getFileSystemManager()</span><br><span class=\"line\"><span class=\"keyword\">const</span> number = <span class=\"built_in\">Math</span>.random()</span><br><span class=\"line\">saveImg.writeFile(&#123;</span><br><span class=\"line\">    <span class=\"attr\">filePath</span>: wx.env.USER_DATA_PATH + <span class=\"string\">&#x27;/pic&#x27;</span> + number + <span class=\"string\">&#x27;.png&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: fileData,</span><br><span class=\"line\">    <span class=\"attr\">encoding</span>: <span class=\"string\">&#x27;base64&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        wx.saveImageToPhotosAlbum(&#123;</span><br><span class=\"line\">            <span class=\"attr\">filePath</span>: wx.env.USER_DATA_PATH + <span class=\"string\">&#x27;/pic&#x27;</span> + number + <span class=\"string\">&#x27;.png&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">                wx.showToast(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;保存成功&#x27;</span>,</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">fail</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">    &#125;, <span class=\"attr\">fail</span>: <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"小程序列表渲染-wx-for-中自定义-index-item\"><a href=\"#小程序列表渲染-wx-for-中自定义-index-item\" class=\"headerlink\" title=\"小程序列表渲染 wx:for 中自定义 index,item\"></a>小程序列表渲染 <code>wx:for</code> 中自定义 <code>index</code>,<code>item</code></h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;array&#125;&#125;&quot;</span> <span class=\"attr\">wx:for-index</span>=<span class=\"string\">&quot;in&quot;</span> <span class=\"attr\">wx:for-item</span>=<span class=\"string\">&quot;it&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span>&#123;&#123;in&#125;&#125;:&#123;&#123;it&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"微信开放能力-open-type-参考文档\"><a href=\"#微信开放能力-open-type-参考文档\" class=\"headerlink\" title=\"微信开放能力 open-type  参考文档\"></a>微信开放能力 <code>open-type</code> <i class=\"fa fa-link\"></i> <a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/button.html\">参考文档</a></h4><table>\n<thead>\n<tr>\n<th>合法值</th>\n<th>说明</th>\n<th>锚点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>contact</code></td>\n<td>打开客服会话，如果用户在会话中点击消息卡片后返回小程序，可以从 <code>bindcontact</code> 回调中获得具体信息</td>\n<td><a href=\"#contact-button\">跳转</a></td>\n</tr>\n<tr>\n<td><code>share</code></td>\n<td>触发用户转发</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>getPhoneNumber</code></td>\n<td>获取用户手机号，可以从 <code>bindgetphonenumber</code> 回调中获取到用户信息</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>getUserInfo</code></td>\n<td>获取用户信息，可以从 <code>bindgetuserinfo</code> 回调中获取到用户信息</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>launchApp</code></td>\n<td>打开 <code>APP</code>，可以通过 <code>app-parameter</code> 属性设定向 <code>APP</code> 传的参数</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>openSetting</code></td>\n<td>打开授权设置页</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>feedback</code></td>\n<td>打开“意见反馈”页面，用户可提交反馈内容并上传日志，开发者可以登录小程序管理后台后进入左侧菜单“客服反馈”页面获取到反馈内容</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n<tr>\n<td><code>chooseAvatar</code></td>\n<td>获取用户头像，可以从 <code>bindchooseavatar</code> 回调中获取到头像信息</td>\n<td><a href=\"#\">跳转</a></td>\n</tr>\n</tbody></table>\n<h4 id=\"微信小程序组件之-button-客服会话功能\"><a href=\"#微信小程序组件之-button-客服会话功能\" class=\"headerlink\" title=\"微信小程序组件之 button 客服会话功能\"></a><span id=\"contact-button\">微信小程序组件之 <code>button</code> 客服会话功能</span></h4><ul>\n<li>先登录 <a href=\"https://mp.weixin.qq.com/\">微信公众平台</a> ，如果没有账户可以去申请一个微信小程序账号.</li>\n<li>在微信公众平台启动小程序客服推送，点击客服反馈来添加客服人员(客服人员可以添加100个).</li>\n<li>打开 <a href=\"https://mpkf.weixin.qq.com/\">微信公众平台客服</a> ，使用绑定的微信号扫码登录，点击登录进入微信公众平台客服界面.</li>\n<li>那么就开始愉快的敲代码<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;contact&quot;</span> <span class=\"attr\">bindcontact</span>=<span class=\"string\">&quot;handleContact&quot;</span>&gt;</span>客服<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"生成PPT - nodeppt","date":"2022-01-14T07:25:16.000Z","_content":"#### 全局安装脚本\n```bash\n$ npm install -g nodeppt\n```\n- [github](https://github.com/ksky521/nodeppt)\n\n#### 使用方法\n- 命令\n  - `new`：使用线上模板创建一个md文件\n    - `nodeppt new demo.md` # 根据官方模板创建一个新的 `slide` 板块\n    - `nodeppt new demo.md -t username/repo` # 根据 `github` 指定模板创建新的 `slide`板块\n  - `serve`：启动一个指定的md文件预览\n  - `build`：编译产出一个md文件\n  \n#### 快捷键\n```yaml\nPage: ↑/↓/←/→ Space Home End\nFullscreen: F\nOverview: -/+\nSpeaker Note: N\nGrid Background: Enter\n```\n#### 配置\n```yaml\ntitle: nodeppt markdown 演示\nspeaker: 三水清\nurl: https://github.com/ksky521/nodeppt\njs:\n    - https://www.echartsjs.com/asset/theme/shine.js\nprismTheme: solarizedlight\nplugins:\n    - echarts\n    - mermaid\n    - katex\n```\n- `title`：演讲主题\n- `speaker`：演讲人\n- `url`：地址\n- `js`：需要加载的 `js` 文件数组，将被放在 `body` 标签之前\n- `css`：需要加载的 `css` 文件数组，将被放在 `head` 标签内\n- `prismTheme`：`prism` 配色，取值范围 `['dark', 'coy', 'funky', 'okaidia', 'tomorrow', 'solarizedlight', 'twilight']`\n- `plugins`：主题配色插件，目前支持的有 [echarts](https://github.com/ksky521/nodeppt/blob/master/site/echarts.md) 、[mermaid](https://github.com/ksky521/nodeppt/blob/master/site/mermaid.md) 、[katex](https://www.npmjs.com/package/markdown-it-katex)\n\n#### <slide> 语法","source":"_posts/生成PPT-nodeppt.md","raw":"---\ntitle: 生成PPT - nodeppt\ndate: 2022-01-14 15:25:16\ntags: [nodeppt, PPT]\ncategories: [PPT, nodeppt]\n---\n#### 全局安装脚本\n```bash\n$ npm install -g nodeppt\n```\n- [github](https://github.com/ksky521/nodeppt)\n\n#### 使用方法\n- 命令\n  - `new`：使用线上模板创建一个md文件\n    - `nodeppt new demo.md` # 根据官方模板创建一个新的 `slide` 板块\n    - `nodeppt new demo.md -t username/repo` # 根据 `github` 指定模板创建新的 `slide`板块\n  - `serve`：启动一个指定的md文件预览\n  - `build`：编译产出一个md文件\n  \n#### 快捷键\n```yaml\nPage: ↑/↓/←/→ Space Home End\nFullscreen: F\nOverview: -/+\nSpeaker Note: N\nGrid Background: Enter\n```\n#### 配置\n```yaml\ntitle: nodeppt markdown 演示\nspeaker: 三水清\nurl: https://github.com/ksky521/nodeppt\njs:\n    - https://www.echartsjs.com/asset/theme/shine.js\nprismTheme: solarizedlight\nplugins:\n    - echarts\n    - mermaid\n    - katex\n```\n- `title`：演讲主题\n- `speaker`：演讲人\n- `url`：地址\n- `js`：需要加载的 `js` 文件数组，将被放在 `body` 标签之前\n- `css`：需要加载的 `css` 文件数组，将被放在 `head` 标签内\n- `prismTheme`：`prism` 配色，取值范围 `['dark', 'coy', 'funky', 'okaidia', 'tomorrow', 'solarizedlight', 'twilight']`\n- `plugins`：主题配色插件，目前支持的有 [echarts](https://github.com/ksky521/nodeppt/blob/master/site/echarts.md) 、[mermaid](https://github.com/ksky521/nodeppt/blob/master/site/mermaid.md) 、[katex](https://www.npmjs.com/package/markdown-it-katex)\n\n#### <slide> 语法","slug":"生成PPT-nodeppt","published":1,"updated":"2022-01-14T08:22:29.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchbx001fokpcce6dbndw","content":"<h4 id=\"全局安装脚本\"><a href=\"#全局安装脚本\" class=\"headerlink\" title=\"全局安装脚本\"></a>全局安装脚本</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g nodeppt</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://github.com/ksky521/nodeppt\">github</a></li>\n</ul>\n<h4 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h4><ul>\n<li>命令<ul>\n<li><code>new</code>：使用线上模板创建一个md文件<ul>\n<li><code>nodeppt new demo.md</code> # 根据官方模板创建一个新的 <code>slide</code> 板块</li>\n<li><code>nodeppt new demo.md -t username/repo</code> # 根据 <code>github</code> 指定模板创建新的 <code>slide</code>板块</li>\n</ul>\n</li>\n<li><code>serve</code>：启动一个指定的md文件预览</li>\n<li><code>build</code>：编译产出一个md文件</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Page:</span> <span class=\"string\">↑/↓/←/→</span> <span class=\"string\">Space</span> <span class=\"string\">Home</span> <span class=\"string\">End</span></span><br><span class=\"line\"><span class=\"attr\">Fullscreen:</span> <span class=\"string\">F</span></span><br><span class=\"line\"><span class=\"attr\">Overview:</span> <span class=\"string\">-/+</span></span><br><span class=\"line\"><span class=\"attr\">Speaker Note:</span> <span class=\"string\">N</span></span><br><span class=\"line\"><span class=\"attr\">Grid Background:</span> <span class=\"string\">Enter</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">nodeppt</span> <span class=\"string\">markdown</span> <span class=\"string\">演示</span></span><br><span class=\"line\"><span class=\"attr\">speaker:</span> <span class=\"string\">三水清</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://github.com/ksky521/nodeppt</span></span><br><span class=\"line\"><span class=\"attr\">js:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">https://www.echartsjs.com/asset/theme/shine.js</span></span><br><span class=\"line\"><span class=\"attr\">prismTheme:</span> <span class=\"string\">solarizedlight</span></span><br><span class=\"line\"><span class=\"attr\">plugins:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">echarts</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">mermaid</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">katex</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>title</code>：演讲主题</li>\n<li><code>speaker</code>：演讲人</li>\n<li><code>url</code>：地址</li>\n<li><code>js</code>：需要加载的 <code>js</code> 文件数组，将被放在 <code>body</code> 标签之前</li>\n<li><code>css</code>：需要加载的 <code>css</code> 文件数组，将被放在 <code>head</code> 标签内</li>\n<li><code>prismTheme</code>：<code>prism</code> 配色，取值范围 <code>[&#39;dark&#39;, &#39;coy&#39;, &#39;funky&#39;, &#39;okaidia&#39;, &#39;tomorrow&#39;, &#39;solarizedlight&#39;, &#39;twilight&#39;]</code></li>\n<li><code>plugins</code>：主题配色插件，目前支持的有 <a href=\"https://github.com/ksky521/nodeppt/blob/master/site/echarts.md\">echarts</a> 、<a href=\"https://github.com/ksky521/nodeppt/blob/master/site/mermaid.md\">mermaid</a> 、<a href=\"https://www.npmjs.com/package/markdown-it-katex\">katex</a></li>\n</ul>\n<h4 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\" 语法\"></a><slide> 语法</h4>","site":{"data":{}},"length":445,"excerpt":"","more":"<h4 id=\"全局安装脚本\"><a href=\"#全局安装脚本\" class=\"headerlink\" title=\"全局安装脚本\"></a>全局安装脚本</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g nodeppt</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://github.com/ksky521/nodeppt\">github</a></li>\n</ul>\n<h4 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h4><ul>\n<li>命令<ul>\n<li><code>new</code>：使用线上模板创建一个md文件<ul>\n<li><code>nodeppt new demo.md</code> # 根据官方模板创建一个新的 <code>slide</code> 板块</li>\n<li><code>nodeppt new demo.md -t username/repo</code> # 根据 <code>github</code> 指定模板创建新的 <code>slide</code>板块</li>\n</ul>\n</li>\n<li><code>serve</code>：启动一个指定的md文件预览</li>\n<li><code>build</code>：编译产出一个md文件</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Page:</span> <span class=\"string\">↑/↓/←/→</span> <span class=\"string\">Space</span> <span class=\"string\">Home</span> <span class=\"string\">End</span></span><br><span class=\"line\"><span class=\"attr\">Fullscreen:</span> <span class=\"string\">F</span></span><br><span class=\"line\"><span class=\"attr\">Overview:</span> <span class=\"string\">-/+</span></span><br><span class=\"line\"><span class=\"attr\">Speaker Note:</span> <span class=\"string\">N</span></span><br><span class=\"line\"><span class=\"attr\">Grid Background:</span> <span class=\"string\">Enter</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">nodeppt</span> <span class=\"string\">markdown</span> <span class=\"string\">演示</span></span><br><span class=\"line\"><span class=\"attr\">speaker:</span> <span class=\"string\">三水清</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://github.com/ksky521/nodeppt</span></span><br><span class=\"line\"><span class=\"attr\">js:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">https://www.echartsjs.com/asset/theme/shine.js</span></span><br><span class=\"line\"><span class=\"attr\">prismTheme:</span> <span class=\"string\">solarizedlight</span></span><br><span class=\"line\"><span class=\"attr\">plugins:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">echarts</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">mermaid</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">katex</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>title</code>：演讲主题</li>\n<li><code>speaker</code>：演讲人</li>\n<li><code>url</code>：地址</li>\n<li><code>js</code>：需要加载的 <code>js</code> 文件数组，将被放在 <code>body</code> 标签之前</li>\n<li><code>css</code>：需要加载的 <code>css</code> 文件数组，将被放在 <code>head</code> 标签内</li>\n<li><code>prismTheme</code>：<code>prism</code> 配色，取值范围 <code>[&#39;dark&#39;, &#39;coy&#39;, &#39;funky&#39;, &#39;okaidia&#39;, &#39;tomorrow&#39;, &#39;solarizedlight&#39;, &#39;twilight&#39;]</code></li>\n<li><code>plugins</code>：主题配色插件，目前支持的有 <a href=\"https://github.com/ksky521/nodeppt/blob/master/site/echarts.md\">echarts</a> 、<a href=\"https://github.com/ksky521/nodeppt/blob/master/site/mermaid.md\">mermaid</a> 、<a href=\"https://www.npmjs.com/package/markdown-it-katex\">katex</a></li>\n</ul>\n<h4 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\" 语法\"></a><slide> 语法</h4>"},{"title":"Hexo Note - 使用NexT主题","date":"2022-01-10T02:08:41.000Z","_content":"#### 简介\n> &ensp;&ensp;«NexT» is a high quality elegant Hexo theme. It is crafted from scratch with love.\n### 安装\n#### 安装\n- 进入hexo项目根目录，执行以下代码，将主题克隆至themes文件夹：\n```bash\n$ cd hexo\n$ git clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n- 在项目的根配置文件 `_config.yml` 中，将 `theme` 的配置值修改为  `next` 应用主题，重新执行构建命令更新程序。\n```yaml\ntheme: next\n```\n- `Tips`：每次更新项目需要执行 `hexo clean && hexo g && hexo s` 才能应用本地更新，略显麻烦，可以在 `package.json` 文件中添加 `start` 命令，有改动只需要执行 `npm start` 就可以了\n```yaml\n\"start\": \"hexo clean && hexo g && gulp && hexo s\"\n```\n\n### 配置\n#### 主题切换\n- NexT默认集成了4中主题模式，`Gemini`、`Mist`、`Muse`、`Pisces`。在项目配置文件中修改 `scheme` 来应用不同的主题模式。\n\n#### 隐藏网站页面底部的 `powered by`\n- 在文件 `themes/next/layout/_partials/footer.swig` 中，将 `footer.powered` 代码块使用 `<!-- -->` 注释掉。\n```bash\n<!--\n{%- if theme.footer.powered %}\n  <div class=\"powered-by\">\n    {%- set next_site = 'https://theme-next.org' %}\n    {%- if theme.scheme !== 'Gemini' %}\n      {%- set next_site = 'https://' + theme.scheme | lower + '.theme-next.org' %}\n    {%- endif %}\n    {{- __('footer.powered', next_url('https://hexo.io', 'Hexo', {class: 'theme-link'}) + ' & ' + next_url(next_site, 'NexT.' + theme.scheme, {class: 'theme-link'})) }}\n  </div>\n{%- endif %}\n-->\n```\n\n#### 文章添加阴影\n- 在文件 `themes/next/source/css/_common/components/post/post.styl` 中添加如下样式：\n```css\n.post {\n  margin-top: 20px;\n  -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);\n  -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);\n}\n```\n\n#### 设置各板块的背景透明度\n- 在文件 `themes/next/source/css/_schemes/Pisces/_layout.styl` 中可以看到，板块的 `background` 属性，配置的都是 `--content-bg-color` 变量，因此我们只需找到这个变量所在的位置进行修改既可以了。\n- 在项目中搜索，可以找到是在 `themes/next/source/css/_variables/base.styl` 文件中进行配置的，将其值修改如下\n```scss\n$body-bg-color = rgba(255,255,255,.8);\n$content-bg-color = rgba(255,255,255,.8);\n```\n\n#### 设置网站图标 `favicon.ico`\n- 在文件夹 `/themes/next/source/images` 中，有不同场景不同格式的网站图标，根据格式进行替换。\n- 其他可自定义配置图标\n  - `avatar.gif`：网站个人介绍logo\n- ![网站图标](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/favicon.png)\n\n#### 修改博客底部标签样式\n- 在文件 `/themes/next/layout/_macro/post.swig` 中，搜索 `rel=\"tag\"`，将`#`替换成 `<i class=\"fa fa-tag\"></i>`\n- ![文章底部标签](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/article_tag.png)\n\n#### 显示当前页面的浏览进度\n- NexT默认已经集成该功能，在主题配置文件中，将 `scrollpercent` 的配置值设置为 `true`，在页面右下角即可看到图标。\n```yaml\nback2top:\n  enable: true\n  # Back to top in sidebar.\n  sidebar: false\n  # Scroll percent label in b2t button.\n  scrollpercent: true\n```\n\n#### 修改链接文字样式\n- 在文件 `themes/next/source/css/_common/components/post/post.styl` 中，添加以下代码\n```less\n.post-body a{\n  color: #0593d3;\n  border-bottom: none;\n  &:hover {\n    color: #ff106c;\n    text-decoration: underline;\n  }\n}\n```\n\n#### 设置引用块样式\n- 在文件 `themes/next/source/css/_common/scaffolding/base.styl` 中添加如下样式\n```css\nblockquote {\n  border-left: 4px solid #f39406;\n  box-shadow: 0 0 3px 3px #6e6d6d91;\n  border-radius: 3px;\n}\n```\n\n#### 设置可折叠内容样式\n- 在 `themes/next/source/css/_custom` 路径下新建文件 `default.css`\n```css\ndetails {\n  padding: 4px 6px;\n  box-shadow: 0 0 3px 3px #666565ad;\n  border-radius: 5px;\n}\ndetails:hover {\n  box-shadow: 0 0 3px 3px rgba(101, 243, 243, 0.71);\n}\ndetails > summary {\n  cursor: pointer;\n  text-decoration: underline;\n}\ndetails > summary:hover {\n  text-decoration: none;\n}\n```\n- 在 `themes/next/source/css/main.styl` 文件底部引入上述新增样式文件\n```less\n@import \"_custom/default.css\";\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/details-style.gif)\n\n#### 设置头像的悬停效果\n- 在主题配置文件中，找到 `avatar` 配置，将其 `rotated` 属性设置为 `true`\n```yaml\n# Sidebar Avatar\navatar:\n  # Replace the default image and set the url here.\n  url: /images/avatar.gif\n  # If true, the avatar will be dispalyed in circle.\n  rounded: true\n  # If true, the avatar will be rotated with the cursor.\n  rotated: true\n```\n\n#### 根据发布的博客自动生成首页\n- 根目录执行代码，安装插件 [hexo-excerpt](https://github.com/chekun/hexo-excerpt)\n```bash\n$ npm install hexo-excerpt --save\n```\n- 在主题配置文件中将 `excerpt_description` 的配置值设置为true，另外在根项目中增加以下内容：\n```yaml\n# 首页\nexcerpt:\n  depth: 2  #按层来算，也就是按代码块来算，截取博文多少层的内容来显示在主页\n  excerpt_excludes: []\n  more_excludes: []\n  hideWholePostExcerpts: true\n```\n- [在线预览](https://hushaoyu.github.io/blog/)\n- ![首页](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png)\n\n#### 首页阅读更多按钮样式更改\n- 在文件 `themes/next/source/css/_common/components/post/post.styl` 中添加如下样式：\n```css\n.post-button .btn:hover {\n  color: rgb(255, 255, 255) !important;\n  border-radius: 3px;\n  font-size: 15px;\n  box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35);\n  background-image: linear-gradient(90deg, #a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);\n}\n```\n\n#### 暗黑模式切换\n- 根目录执行代码，安装插件 [Hexo NexT Darkmode](https://github.com/rqh656418510/hexo-next-darkmode/blob/main/README_CN.md)\n```bash\n$ npm install hexo-next-darkmode --save\n```\n- 在主题配置文件中，首先将NexT默认的暗黑主题设置为 `false` ：\n  - ```darkmode: false```\n- 之后添加如下配置：\n```yaml\ndarkmode_js:\n  enable: true\n  bottom: '64px' # default: '32px'\n  right: '100px' # default: '32px'\n  left: 'unset' # default: 'unset'\n  time: '0.5s' # default: '0.3s'\n  mixColor: 'transparent' # default: '#fff'\n  backgroundColor: 'transparent' # default: '#fff'\n  buttonColorDark: '#100f2c' # default: '#100f2c'\n  buttonColorLight: '#fff' # default: '#fff'\n  isActivated: true # default false\n  saveInCookies: true # default: true\n  label: '🌓' # default: ''\n  autoMatchOsTheme: true # default: true\n  libUrl: # Set custom library cdn url for Darkmode.js\n```\n- 默认激活暗黑/夜间模式，请始终与 `saveInCookies: false`、`autoMatchOsTheme: false` 一起使用\n- ![主题暗黑模式切换](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/theme_mode.png)\n\n#### 博文加密访问\n- NexT默认集成加密访问功能，在文件 `themes/next/layout/_partials/head/head.swig` 中添加如下代码：\n```bash\n#JavaScript\n<script>\n    (function(){\n        if('{{ page.password }}'){\n            if (prompt('请输入密码') !== '{{ page.password }}'){\n                alert('密码错误');\n                history.back();\n            }\n        }\n    })();\n</script>\n```\n- 之后在需要加密访问的博客中，在头部添加 `password` 配置即可开启：\n```bash\npassword: 123456\n```\n- 默认的加密访问功能，在样式上并不优美，我们可以使用第三方的插件来实现这个功能。根项目安装插件\n```bash\n$ npm install --save hexo-blog-encrypt\n```\n- [hexo-blog-encrypt](https://github.com/D0n9X1n/hexo-blog-encrypt)\n- 在根项目的配置文件中增加如下配置\n```yaml\nencrypt:\n    enable: true\n```\n- 然后和之前一样，在需要进行加密的博文中，配置相应的 `password` 属性即可生效。\n- 这种将密码配置到博文中的方式，灵活性不足，如果需要统一配置和更改密码，需要在每个博文中修改一遍。为解决这种问题，插件允许通过指定 `tag` 来进行加密，并且不同的 `tag` 可以指定不同的密码。同样在根项目的配置文件中，修改之前的 `encrypt` 配置\n```yaml\n# 文章加密访问\nencrypt:\n  enable: true\n  silent: true\n  theme: surge\n  tags:\n    - {name: encrypt, password: 123456}\n  abstract: 博文已加密，请提供密码查看！\n  message: 输入密码，查看文章\n  wrong_pass_message: 密码验证失败，请提供正确的密码.\n  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n```\n- 设置 `tags` 属性，指定 `tag` 的 `name` 和 `password` 属性，同时在需要进行加密的博文中，设置此 `tag` 值\n```yaml\ntags: [web, ThreeJS, React, encrypt]\n```\n- ![需要加密访问](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/password_needed.png)\n- ![确认密码](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/password_confirm.png)\n\n#### 增加文章字数统计及阅读时长功能\n- 根项目中安装插件 [hexo-symbols-count-time](https://github.com/theme-next/hexo-symbols-count-time)\n```bash\n$ npm install hexo-symbols-count-time --save\n```\n- 在主题配置文件中，搜索 `symbols_count_time` 配置，NexT默认已经集成此配置，安装插件后重新构建部署即可生效\n```yaml\nsymbols_count_time:\n  separated_meta: true\n  item_text_post: true\n  item_text_total: false\n```\n- ![博文字数及阅读时长统计](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/word_count.png)\n\n#### 代码复制成功反馈\n- NexT默认已经集成代码复制功能，但是复制成功的反馈默认是禁用的，在主题配置文件中，搜索 `codeblock` ，将其 `show_result` 值设置为 `true`\n```yaml\ncodeblock:\n  highlight_theme: 'night eighties'\n  copy_button:\n    enable: true\n    # Show text copy result.\n    show_result: false\n    style: flat\n```\n\n#### 开启页面加载进度条\n- 进入到next主题文件目录下执行命令，将插件克隆至主题文件中，[文档](https://github.com/theme-next/theme-next-pace)\n```bash\n$ git clone https://github.com/theme-next/theme-next-pace source/lib/pace\n```\n- 在主题配置文件中，修改 `pace` 的配置，可以通过修改 `theme` 以应用不同的进度条主题样式。\n```yaml\npace:\n  enable: true\n  # Themes list:\n  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple\n  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal\n  theme: minimal\n```\n\n#### 博文支持评论\n- NexT支持多种评论插件，可选值有：`changyan` 、 `disqus` 、 `disqusjs` 、 `gitalk` | `livere` | `valine`，本文使用的是 [valine](https://valine.js.org/quickstart.html)\n- 根据文档提示操作，注册账号、应用，获取到 `appId` 和 `appKey`，在主题配置文件中修改配置\n  - 设置当前评论模块使用的插件\n  ```yaml\n  comments:\n    # Available values: tabs | buttons\n    style: tabs\n    # Choose a comment system to be displayed by default.\n    # Available values: changyan | disqus | disqusjs | gitalk | livere | valine\n    active: valine\n  ```\n  - `valine` 配置 `appId` 和 `appKey`，其他更多的配置参考官方文档说明\n  ```yaml\n  valine:\n    enable: true\n    appid: xxxx # Your leancloud application appid\n    appkey: xxxx # Your leancloud application appkey\n  ```\n- ![评论区](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/comment.png)\n#### 集成网易云音乐\n- 打开网易云网页版，搜索需要添加的歌曲，复制歌曲的外链信息，将其添加到 `themes/next/layout/_macro/sidebar.swig` 文件中，代码放置位置取决于你想让面板显示在哪个位置\n```html\n<!-- 网易云音乐 -->\n<div id=\"music163player\">\n    <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1901049671&auto=1&height=66\"></iframe>\n</div>\n```\n- ![网易云音乐](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/wyy_music.png)\n\n#### 标签页美化\n- 在 `/themes/next/layout/` 目录下新建文件 `tag-color.swig` 文件，、填入以下代码\n```html\n<script type=\"text/javascript\">\n     var alltags = document.getElementsByClassName('tag-cloud-tags');\n     var tags = alltags[0].getElementsByTagName('a');\n     for (var i = tags.length - 1; i >= 0; i--) {\n       var r=Math.floor(Math.random()*75+130);\n       var g=Math.floor(Math.random()*75+100);\n       var b=Math.floor(Math.random()*75+80);\n       tags[i].style.background = \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n     }\n</script>\n\n<style>\n  .tag-cloud-tags{\n    /*font-family: Helvetica, Tahoma, Arial;*/\n    /*font-weight: 100;*/\n    text-align: center;\n    counter-reset: tags;\n  }\n  .tag-cloud-tags a{\n    border-radius: 6px;\n    padding-right: 5px;\n    padding-left: 5px;\n    margin: 8px 5px 0px 0px;\n  }\n  .tag-cloud-tags a:before{\n    content: \"\";\n  }\n\n  .tag-cloud-tags a:hover{\n     box-shadow: 0px 5px 15px 0px rgba(0,0,0,.4);\n     transform: scale(1.1);\n     /*box-shadow: 10px 10px 15px 2px rgba(0,0,0,.12), 0 0 6px 0 rgba(104, 104, 105, 0.1);*/\n     transition-duration: 0.15s;\n  }\n</style>\n```\n- 在 `/themes/next/layout/page.swig` 文件中引入上面新增的文件\n```html\n{%- if page.type === 'tags' %}\n<div class=\"tag-cloud\">\n  <div class=\"tag-cloud-tags\" id=\"tags\">\n    {{ tagcloud({min_font: 16, max_font: 16, amount: 300, color: true, start_color: '#FFF', end_color: '#FFF'}) }}\n  </div>\n</div>\n{% include 'tag-color.swig' %}\n```\n- 重新构建部署项目，即可查看效果。[在线预览](https://hushaoyu.github.io/blog/tags/)\n- ![标签页](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/tag_page.png)\n\n#### 标签云\n- 使用插件 [hexo-tag-cloud](https://github.com/D0n9X1n/hexo-tag-cloud/blob/master/README.ZH.md)\n```bash\n$ npm install hexo-tag-cloud --save\n```\n- 在 `themes/next/layout/_macro/sidebar.swig` 文件中添加如下代码，重新执行 `npm start` 可查看效果\n```html\n<!-- 标签云 -->\n{% if site.tags.length > 1 %}\n<script type=\"text/javascript\" charset=\"utf-8\" src=\"{{ url_for('/js/tagcloud.js') }}\"></script>\n<script type=\"text/javascript\" charset=\"utf-8\" src=\"{{ url_for('/js/tagcanvas.js') }}\"></script>\n<div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Tag Cloud</h3>\n    <div id=\"myCanvasContainer\" class=\"widget tagcloud\">\n        <canvas width=\"250\" height=\"250\" id=\"resCanvas\" style=\"width:100%\">\n            {{ list_tags() }}\n        </canvas>\n    </div>\n</div>\n{% endif %}\n```\n- 在根项目的配置文件中，增加对标签云的属性配置\n```yaml\n# 标签云\ntag_cloud:\n  textFont: Trebuchet MS, Helvetica     # 字体\n  textColor: '#333'                     # 字体颜色\n  textHeight: 25                        # 字体大小\n  outlineColor: '#E2E1D1'\n  maxSpeed: 0.3                         # 旋转速度\n  pauseOnSelected: false                # 当选中对应标签时，是否停止转动\n```\n- ![标签云](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/tag_cloud.png)\n\n#### 搜索\n- 在根项目安装插件\n```bash\n$ npm install hexo-algolia --save\n```\n- NexT主题已经默认集成了一部分参数配置，并且在页面的左侧 `Slider` 区域也有搜索的快捷菜单，在主题配置文件中，搜索 `algolia_search`，将 `enable` 值设置为 `true`，启用该搜索功能。`hits.per_page` 表示搜索结果分页大小，`labels` 可以设置搜索匹配提示文本。\n- 需要让搜索功能真正生效，还需要在根项目配置文件中增加 `algolia` 的账号配置信息\n```yaml\n# search\nalgolia:\n  applicationID: \"xxx\"\n  apiKey: \"xxxxx\"\n  indexName: \"indexName\"\n```\n- 配置的信息需要注册 `algolia` 账号才能获取。可点击 [algolia](https://www.algolia.com/) 跳转进行注册。\n  - 注册账号后，注册一个应用，应用选择免费版本的。创建应用后在左侧菜单点击 `Data Source`，选择 `Indices`，创建一个新的索引，索引名称是博客网站需要配置的一个值，后面会用到。\n  - ![创建索引](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/create_index.png)\n  - 回到 `Overview` 总览面板，点击 `API Keys`，在面板可以看到注册的应用的 `application ID`。创建新的key，其中的 `Indices` 选择之前创建的索引，下方的 `ACL` 权限控制，设置值为：`search`、`addObject`、`deleteObject`、`addInde`、`deleteIndex`，其他值默认，然后点击确认创建。\n  - ![application ID](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_appId.png)\n  - ![创建API Keys](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_apiKey.png)\n  - 将上述生成的 `application ID`、`apiKey`、`indexName` 填入到配置文件中。\n- 执行以下命令，将网站的博文生成可搜索的静态资源\n  - **每次博文有更新，需要部署时，都需要先执行以下命令，再执行构建部署命令，否则更新后的内容，在搜索数据库中是没有更新的。**\n```bash\n$ export HEXO_ALGOLIA_INDEXING_KEY='0f04bd99beb506cc014d144974134458'\n$ export HEXO_ALGOLIA_INDEXING_KEY\n$ hexo algolia\n```\n- 重新运行项目，点击左侧的搜索，正常情况下，会出现弹框，输入任意内容，即可显示出搜索结果\n- ![搜索结果](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_search_result.png)","source":"_posts/Hexo-Note-使用NexT主题.md","raw":"---\ntitle: Hexo Note - 使用NexT主题\ndate: 2022-01-10 10:08:41\ntags: [Hexo]\ncategories: [Hexo]\n---\n#### 简介\n> &ensp;&ensp;«NexT» is a high quality elegant Hexo theme. It is crafted from scratch with love.\n### 安装\n#### 安装\n- 进入hexo项目根目录，执行以下代码，将主题克隆至themes文件夹：\n```bash\n$ cd hexo\n$ git clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n- 在项目的根配置文件 `_config.yml` 中，将 `theme` 的配置值修改为  `next` 应用主题，重新执行构建命令更新程序。\n```yaml\ntheme: next\n```\n- `Tips`：每次更新项目需要执行 `hexo clean && hexo g && hexo s` 才能应用本地更新，略显麻烦，可以在 `package.json` 文件中添加 `start` 命令，有改动只需要执行 `npm start` 就可以了\n```yaml\n\"start\": \"hexo clean && hexo g && gulp && hexo s\"\n```\n\n### 配置\n#### 主题切换\n- NexT默认集成了4中主题模式，`Gemini`、`Mist`、`Muse`、`Pisces`。在项目配置文件中修改 `scheme` 来应用不同的主题模式。\n\n#### 隐藏网站页面底部的 `powered by`\n- 在文件 `themes/next/layout/_partials/footer.swig` 中，将 `footer.powered` 代码块使用 `<!-- -->` 注释掉。\n```bash\n<!--\n{%- if theme.footer.powered %}\n  <div class=\"powered-by\">\n    {%- set next_site = 'https://theme-next.org' %}\n    {%- if theme.scheme !== 'Gemini' %}\n      {%- set next_site = 'https://' + theme.scheme | lower + '.theme-next.org' %}\n    {%- endif %}\n    {{- __('footer.powered', next_url('https://hexo.io', 'Hexo', {class: 'theme-link'}) + ' & ' + next_url(next_site, 'NexT.' + theme.scheme, {class: 'theme-link'})) }}\n  </div>\n{%- endif %}\n-->\n```\n\n#### 文章添加阴影\n- 在文件 `themes/next/source/css/_common/components/post/post.styl` 中添加如下样式：\n```css\n.post {\n  margin-top: 20px;\n  -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);\n  -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);\n}\n```\n\n#### 设置各板块的背景透明度\n- 在文件 `themes/next/source/css/_schemes/Pisces/_layout.styl` 中可以看到，板块的 `background` 属性，配置的都是 `--content-bg-color` 变量，因此我们只需找到这个变量所在的位置进行修改既可以了。\n- 在项目中搜索，可以找到是在 `themes/next/source/css/_variables/base.styl` 文件中进行配置的，将其值修改如下\n```scss\n$body-bg-color = rgba(255,255,255,.8);\n$content-bg-color = rgba(255,255,255,.8);\n```\n\n#### 设置网站图标 `favicon.ico`\n- 在文件夹 `/themes/next/source/images` 中，有不同场景不同格式的网站图标，根据格式进行替换。\n- 其他可自定义配置图标\n  - `avatar.gif`：网站个人介绍logo\n- ![网站图标](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/favicon.png)\n\n#### 修改博客底部标签样式\n- 在文件 `/themes/next/layout/_macro/post.swig` 中，搜索 `rel=\"tag\"`，将`#`替换成 `<i class=\"fa fa-tag\"></i>`\n- ![文章底部标签](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/article_tag.png)\n\n#### 显示当前页面的浏览进度\n- NexT默认已经集成该功能，在主题配置文件中，将 `scrollpercent` 的配置值设置为 `true`，在页面右下角即可看到图标。\n```yaml\nback2top:\n  enable: true\n  # Back to top in sidebar.\n  sidebar: false\n  # Scroll percent label in b2t button.\n  scrollpercent: true\n```\n\n#### 修改链接文字样式\n- 在文件 `themes/next/source/css/_common/components/post/post.styl` 中，添加以下代码\n```less\n.post-body a{\n  color: #0593d3;\n  border-bottom: none;\n  &:hover {\n    color: #ff106c;\n    text-decoration: underline;\n  }\n}\n```\n\n#### 设置引用块样式\n- 在文件 `themes/next/source/css/_common/scaffolding/base.styl` 中添加如下样式\n```css\nblockquote {\n  border-left: 4px solid #f39406;\n  box-shadow: 0 0 3px 3px #6e6d6d91;\n  border-radius: 3px;\n}\n```\n\n#### 设置可折叠内容样式\n- 在 `themes/next/source/css/_custom` 路径下新建文件 `default.css`\n```css\ndetails {\n  padding: 4px 6px;\n  box-shadow: 0 0 3px 3px #666565ad;\n  border-radius: 5px;\n}\ndetails:hover {\n  box-shadow: 0 0 3px 3px rgba(101, 243, 243, 0.71);\n}\ndetails > summary {\n  cursor: pointer;\n  text-decoration: underline;\n}\ndetails > summary:hover {\n  text-decoration: none;\n}\n```\n- 在 `themes/next/source/css/main.styl` 文件底部引入上述新增样式文件\n```less\n@import \"_custom/default.css\";\n```\n![预览](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/details-style.gif)\n\n#### 设置头像的悬停效果\n- 在主题配置文件中，找到 `avatar` 配置，将其 `rotated` 属性设置为 `true`\n```yaml\n# Sidebar Avatar\navatar:\n  # Replace the default image and set the url here.\n  url: /images/avatar.gif\n  # If true, the avatar will be dispalyed in circle.\n  rounded: true\n  # If true, the avatar will be rotated with the cursor.\n  rotated: true\n```\n\n#### 根据发布的博客自动生成首页\n- 根目录执行代码，安装插件 [hexo-excerpt](https://github.com/chekun/hexo-excerpt)\n```bash\n$ npm install hexo-excerpt --save\n```\n- 在主题配置文件中将 `excerpt_description` 的配置值设置为true，另外在根项目中增加以下内容：\n```yaml\n# 首页\nexcerpt:\n  depth: 2  #按层来算，也就是按代码块来算，截取博文多少层的内容来显示在主页\n  excerpt_excludes: []\n  more_excludes: []\n  hideWholePostExcerpts: true\n```\n- [在线预览](https://hushaoyu.github.io/blog/)\n- ![首页](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png)\n\n#### 首页阅读更多按钮样式更改\n- 在文件 `themes/next/source/css/_common/components/post/post.styl` 中添加如下样式：\n```css\n.post-button .btn:hover {\n  color: rgb(255, 255, 255) !important;\n  border-radius: 3px;\n  font-size: 15px;\n  box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35);\n  background-image: linear-gradient(90deg, #a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);\n}\n```\n\n#### 暗黑模式切换\n- 根目录执行代码，安装插件 [Hexo NexT Darkmode](https://github.com/rqh656418510/hexo-next-darkmode/blob/main/README_CN.md)\n```bash\n$ npm install hexo-next-darkmode --save\n```\n- 在主题配置文件中，首先将NexT默认的暗黑主题设置为 `false` ：\n  - ```darkmode: false```\n- 之后添加如下配置：\n```yaml\ndarkmode_js:\n  enable: true\n  bottom: '64px' # default: '32px'\n  right: '100px' # default: '32px'\n  left: 'unset' # default: 'unset'\n  time: '0.5s' # default: '0.3s'\n  mixColor: 'transparent' # default: '#fff'\n  backgroundColor: 'transparent' # default: '#fff'\n  buttonColorDark: '#100f2c' # default: '#100f2c'\n  buttonColorLight: '#fff' # default: '#fff'\n  isActivated: true # default false\n  saveInCookies: true # default: true\n  label: '🌓' # default: ''\n  autoMatchOsTheme: true # default: true\n  libUrl: # Set custom library cdn url for Darkmode.js\n```\n- 默认激活暗黑/夜间模式，请始终与 `saveInCookies: false`、`autoMatchOsTheme: false` 一起使用\n- ![主题暗黑模式切换](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/theme_mode.png)\n\n#### 博文加密访问\n- NexT默认集成加密访问功能，在文件 `themes/next/layout/_partials/head/head.swig` 中添加如下代码：\n```bash\n#JavaScript\n<script>\n    (function(){\n        if('{{ page.password }}'){\n            if (prompt('请输入密码') !== '{{ page.password }}'){\n                alert('密码错误');\n                history.back();\n            }\n        }\n    })();\n</script>\n```\n- 之后在需要加密访问的博客中，在头部添加 `password` 配置即可开启：\n```bash\npassword: 123456\n```\n- 默认的加密访问功能，在样式上并不优美，我们可以使用第三方的插件来实现这个功能。根项目安装插件\n```bash\n$ npm install --save hexo-blog-encrypt\n```\n- [hexo-blog-encrypt](https://github.com/D0n9X1n/hexo-blog-encrypt)\n- 在根项目的配置文件中增加如下配置\n```yaml\nencrypt:\n    enable: true\n```\n- 然后和之前一样，在需要进行加密的博文中，配置相应的 `password` 属性即可生效。\n- 这种将密码配置到博文中的方式，灵活性不足，如果需要统一配置和更改密码，需要在每个博文中修改一遍。为解决这种问题，插件允许通过指定 `tag` 来进行加密，并且不同的 `tag` 可以指定不同的密码。同样在根项目的配置文件中，修改之前的 `encrypt` 配置\n```yaml\n# 文章加密访问\nencrypt:\n  enable: true\n  silent: true\n  theme: surge\n  tags:\n    - {name: encrypt, password: 123456}\n  abstract: 博文已加密，请提供密码查看！\n  message: 输入密码，查看文章\n  wrong_pass_message: 密码验证失败，请提供正确的密码.\n  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n```\n- 设置 `tags` 属性，指定 `tag` 的 `name` 和 `password` 属性，同时在需要进行加密的博文中，设置此 `tag` 值\n```yaml\ntags: [web, ThreeJS, React, encrypt]\n```\n- ![需要加密访问](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/password_needed.png)\n- ![确认密码](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/password_confirm.png)\n\n#### 增加文章字数统计及阅读时长功能\n- 根项目中安装插件 [hexo-symbols-count-time](https://github.com/theme-next/hexo-symbols-count-time)\n```bash\n$ npm install hexo-symbols-count-time --save\n```\n- 在主题配置文件中，搜索 `symbols_count_time` 配置，NexT默认已经集成此配置，安装插件后重新构建部署即可生效\n```yaml\nsymbols_count_time:\n  separated_meta: true\n  item_text_post: true\n  item_text_total: false\n```\n- ![博文字数及阅读时长统计](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/word_count.png)\n\n#### 代码复制成功反馈\n- NexT默认已经集成代码复制功能，但是复制成功的反馈默认是禁用的，在主题配置文件中，搜索 `codeblock` ，将其 `show_result` 值设置为 `true`\n```yaml\ncodeblock:\n  highlight_theme: 'night eighties'\n  copy_button:\n    enable: true\n    # Show text copy result.\n    show_result: false\n    style: flat\n```\n\n#### 开启页面加载进度条\n- 进入到next主题文件目录下执行命令，将插件克隆至主题文件中，[文档](https://github.com/theme-next/theme-next-pace)\n```bash\n$ git clone https://github.com/theme-next/theme-next-pace source/lib/pace\n```\n- 在主题配置文件中，修改 `pace` 的配置，可以通过修改 `theme` 以应用不同的进度条主题样式。\n```yaml\npace:\n  enable: true\n  # Themes list:\n  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple\n  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal\n  theme: minimal\n```\n\n#### 博文支持评论\n- NexT支持多种评论插件，可选值有：`changyan` 、 `disqus` 、 `disqusjs` 、 `gitalk` | `livere` | `valine`，本文使用的是 [valine](https://valine.js.org/quickstart.html)\n- 根据文档提示操作，注册账号、应用，获取到 `appId` 和 `appKey`，在主题配置文件中修改配置\n  - 设置当前评论模块使用的插件\n  ```yaml\n  comments:\n    # Available values: tabs | buttons\n    style: tabs\n    # Choose a comment system to be displayed by default.\n    # Available values: changyan | disqus | disqusjs | gitalk | livere | valine\n    active: valine\n  ```\n  - `valine` 配置 `appId` 和 `appKey`，其他更多的配置参考官方文档说明\n  ```yaml\n  valine:\n    enable: true\n    appid: xxxx # Your leancloud application appid\n    appkey: xxxx # Your leancloud application appkey\n  ```\n- ![评论区](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/comment.png)\n#### 集成网易云音乐\n- 打开网易云网页版，搜索需要添加的歌曲，复制歌曲的外链信息，将其添加到 `themes/next/layout/_macro/sidebar.swig` 文件中，代码放置位置取决于你想让面板显示在哪个位置\n```html\n<!-- 网易云音乐 -->\n<div id=\"music163player\">\n    <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1901049671&auto=1&height=66\"></iframe>\n</div>\n```\n- ![网易云音乐](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/wyy_music.png)\n\n#### 标签页美化\n- 在 `/themes/next/layout/` 目录下新建文件 `tag-color.swig` 文件，、填入以下代码\n```html\n<script type=\"text/javascript\">\n     var alltags = document.getElementsByClassName('tag-cloud-tags');\n     var tags = alltags[0].getElementsByTagName('a');\n     for (var i = tags.length - 1; i >= 0; i--) {\n       var r=Math.floor(Math.random()*75+130);\n       var g=Math.floor(Math.random()*75+100);\n       var b=Math.floor(Math.random()*75+80);\n       tags[i].style.background = \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n     }\n</script>\n\n<style>\n  .tag-cloud-tags{\n    /*font-family: Helvetica, Tahoma, Arial;*/\n    /*font-weight: 100;*/\n    text-align: center;\n    counter-reset: tags;\n  }\n  .tag-cloud-tags a{\n    border-radius: 6px;\n    padding-right: 5px;\n    padding-left: 5px;\n    margin: 8px 5px 0px 0px;\n  }\n  .tag-cloud-tags a:before{\n    content: \"\";\n  }\n\n  .tag-cloud-tags a:hover{\n     box-shadow: 0px 5px 15px 0px rgba(0,0,0,.4);\n     transform: scale(1.1);\n     /*box-shadow: 10px 10px 15px 2px rgba(0,0,0,.12), 0 0 6px 0 rgba(104, 104, 105, 0.1);*/\n     transition-duration: 0.15s;\n  }\n</style>\n```\n- 在 `/themes/next/layout/page.swig` 文件中引入上面新增的文件\n```html\n{%- if page.type === 'tags' %}\n<div class=\"tag-cloud\">\n  <div class=\"tag-cloud-tags\" id=\"tags\">\n    {{ tagcloud({min_font: 16, max_font: 16, amount: 300, color: true, start_color: '#FFF', end_color: '#FFF'}) }}\n  </div>\n</div>\n{% include 'tag-color.swig' %}\n```\n- 重新构建部署项目，即可查看效果。[在线预览](https://hushaoyu.github.io/blog/tags/)\n- ![标签页](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/tag_page.png)\n\n#### 标签云\n- 使用插件 [hexo-tag-cloud](https://github.com/D0n9X1n/hexo-tag-cloud/blob/master/README.ZH.md)\n```bash\n$ npm install hexo-tag-cloud --save\n```\n- 在 `themes/next/layout/_macro/sidebar.swig` 文件中添加如下代码，重新执行 `npm start` 可查看效果\n```html\n<!-- 标签云 -->\n{% if site.tags.length > 1 %}\n<script type=\"text/javascript\" charset=\"utf-8\" src=\"{{ url_for('/js/tagcloud.js') }}\"></script>\n<script type=\"text/javascript\" charset=\"utf-8\" src=\"{{ url_for('/js/tagcanvas.js') }}\"></script>\n<div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Tag Cloud</h3>\n    <div id=\"myCanvasContainer\" class=\"widget tagcloud\">\n        <canvas width=\"250\" height=\"250\" id=\"resCanvas\" style=\"width:100%\">\n            {{ list_tags() }}\n        </canvas>\n    </div>\n</div>\n{% endif %}\n```\n- 在根项目的配置文件中，增加对标签云的属性配置\n```yaml\n# 标签云\ntag_cloud:\n  textFont: Trebuchet MS, Helvetica     # 字体\n  textColor: '#333'                     # 字体颜色\n  textHeight: 25                        # 字体大小\n  outlineColor: '#E2E1D1'\n  maxSpeed: 0.3                         # 旋转速度\n  pauseOnSelected: false                # 当选中对应标签时，是否停止转动\n```\n- ![标签云](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/tag_cloud.png)\n\n#### 搜索\n- 在根项目安装插件\n```bash\n$ npm install hexo-algolia --save\n```\n- NexT主题已经默认集成了一部分参数配置，并且在页面的左侧 `Slider` 区域也有搜索的快捷菜单，在主题配置文件中，搜索 `algolia_search`，将 `enable` 值设置为 `true`，启用该搜索功能。`hits.per_page` 表示搜索结果分页大小，`labels` 可以设置搜索匹配提示文本。\n- 需要让搜索功能真正生效，还需要在根项目配置文件中增加 `algolia` 的账号配置信息\n```yaml\n# search\nalgolia:\n  applicationID: \"xxx\"\n  apiKey: \"xxxxx\"\n  indexName: \"indexName\"\n```\n- 配置的信息需要注册 `algolia` 账号才能获取。可点击 [algolia](https://www.algolia.com/) 跳转进行注册。\n  - 注册账号后，注册一个应用，应用选择免费版本的。创建应用后在左侧菜单点击 `Data Source`，选择 `Indices`，创建一个新的索引，索引名称是博客网站需要配置的一个值，后面会用到。\n  - ![创建索引](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/create_index.png)\n  - 回到 `Overview` 总览面板，点击 `API Keys`，在面板可以看到注册的应用的 `application ID`。创建新的key，其中的 `Indices` 选择之前创建的索引，下方的 `ACL` 权限控制，设置值为：`search`、`addObject`、`deleteObject`、`addInde`、`deleteIndex`，其他值默认，然后点击确认创建。\n  - ![application ID](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_appId.png)\n  - ![创建API Keys](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_apiKey.png)\n  - 将上述生成的 `application ID`、`apiKey`、`indexName` 填入到配置文件中。\n- 执行以下命令，将网站的博文生成可搜索的静态资源\n  - **每次博文有更新，需要部署时，都需要先执行以下命令，再执行构建部署命令，否则更新后的内容，在搜索数据库中是没有更新的。**\n```bash\n$ export HEXO_ALGOLIA_INDEXING_KEY='0f04bd99beb506cc014d144974134458'\n$ export HEXO_ALGOLIA_INDEXING_KEY\n$ hexo algolia\n```\n- 重新运行项目，点击左侧的搜索，正常情况下，会出现弹框，输入任意内容，即可显示出搜索结果\n- ![搜索结果](https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_search_result.png)","slug":"Hexo-Note-使用NexT主题","published":1,"updated":"2022-02-13T03:18:49.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckzktchcb003vokpc4dsh0a89","content":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><blockquote>\n<p>&ensp;&ensp;«NexT» is a high quality elegant Hexo theme. It is crafted from scratch with love.</p>\n</blockquote>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li>进入hexo项目根目录，执行以下代码，将主题克隆至themes文件夹：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li>\n<li>在项目的根配置文件 <code>_config.yml</code> 中，将 <code>theme</code> 的配置值修改为  <code>next</code> 应用主题，重新执行构建命令更新程序。<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">next</span></span><br></pre></td></tr></table></figure></li>\n<li><code>Tips</code>：每次更新项目需要执行 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 才能应用本地更新，略显麻烦，可以在 <code>package.json</code> 文件中添加 <code>start</code> 命令，有改动只需要执行 <code>npm start</code> 就可以了<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;start&quot;:</span> <span class=\"string\">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo s&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><h4 id=\"主题切换\"><a href=\"#主题切换\" class=\"headerlink\" title=\"主题切换\"></a>主题切换</h4><ul>\n<li>NexT默认集成了4中主题模式，<code>Gemini</code>、<code>Mist</code>、<code>Muse</code>、<code>Pisces</code>。在项目配置文件中修改 <code>scheme</code> 来应用不同的主题模式。</li>\n</ul>\n<h4 id=\"隐藏网站页面底部的-powered-by\"><a href=\"#隐藏网站页面底部的-powered-by\" class=\"headerlink\" title=\"隐藏网站页面底部的 powered by\"></a>隐藏网站页面底部的 <code>powered by</code></h4><ul>\n<li>在文件 <code>themes/next/layout/_partials/footer.swig</code> 中，将 <code>footer.powered</code> 代码块使用 <code>&lt;!-- --&gt;</code> 注释掉。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--</span><br><span class=\"line\">&#123;%- <span class=\"keyword\">if</span> theme.footer.powered %&#125;</span><br><span class=\"line\">  &lt;div class=<span class=\"string\">&quot;powered-by&quot;</span>&gt;</span><br><span class=\"line\">    &#123;%- <span class=\"built_in\">set</span> next_site = <span class=\"string\">&#x27;https://theme-next.org&#x27;</span> %&#125;</span><br><span class=\"line\">    &#123;%- <span class=\"keyword\">if</span> theme.scheme !== <span class=\"string\">&#x27;Gemini&#x27;</span> %&#125;</span><br><span class=\"line\">      &#123;%- <span class=\"built_in\">set</span> next_site = <span class=\"string\">&#x27;https://&#x27;</span> + theme.scheme | lower + <span class=\"string\">&#x27;.theme-next.org&#x27;</span> %&#125;</span><br><span class=\"line\">    &#123;%- endif %&#125;</span><br><span class=\"line\">    &#123;&#123;- __(<span class=\"string\">&#x27;footer.powered&#x27;</span>, next_url(<span class=\"string\">&#x27;https://hexo.io&#x27;</span>, <span class=\"string\">&#x27;Hexo&#x27;</span>, &#123;class: <span class=\"string\">&#x27;theme-link&#x27;</span>&#125;) + <span class=\"string\">&#x27; &amp; &#x27;</span> + next_url(next_site, <span class=\"string\">&#x27;NexT.&#x27;</span> + theme.scheme, &#123;class: <span class=\"string\">&#x27;theme-link&#x27;</span>&#125;)) &#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;%- endif %&#125;</span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"文章添加阴影\"><a href=\"#文章添加阴影\" class=\"headerlink\" title=\"文章添加阴影\"></a>文章添加阴影</h4><ul>\n<li>在文件 <code>themes/next/source/css/_common/components/post/post.styl</code> 中添加如下样式：<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.post</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  -webkit-<span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">202</span>, <span class=\"number\">203</span>, <span class=\"number\">203</span>, .<span class=\"number\">5</span>);</span><br><span class=\"line\">  -moz-<span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">202</span>, <span class=\"number\">203</span>, <span class=\"number\">204</span>, .<span class=\"number\">5</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"设置各板块的背景透明度\"><a href=\"#设置各板块的背景透明度\" class=\"headerlink\" title=\"设置各板块的背景透明度\"></a>设置各板块的背景透明度</h4><ul>\n<li>在文件 <code>themes/next/source/css/_schemes/Pisces/_layout.styl</code> 中可以看到，板块的 <code>background</code> 属性，配置的都是 <code>--content-bg-color</code> 变量，因此我们只需找到这个变量所在的位置进行修改既可以了。</li>\n<li>在项目中搜索，可以找到是在 <code>themes/next/source/css/_variables/base.styl</code> 文件中进行配置的，将其值修改如下<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$body-bg-color</span> = rgba(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">8</span>);</span><br><span class=\"line\"><span class=\"variable\">$content-bg-color</span> = rgba(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">8</span>);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"设置网站图标-favicon-ico\"><a href=\"#设置网站图标-favicon-ico\" class=\"headerlink\" title=\"设置网站图标 favicon.ico\"></a>设置网站图标 <code>favicon.ico</code></h4><ul>\n<li>在文件夹 <code>/themes/next/source/images</code> 中，有不同场景不同格式的网站图标，根据格式进行替换。</li>\n<li>其他可自定义配置图标<ul>\n<li><code>avatar.gif</code>：网站个人介绍logo</li>\n</ul>\n</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/favicon.png\" alt=\"网站图标\"></li>\n</ul>\n<h4 id=\"修改博客底部标签样式\"><a href=\"#修改博客底部标签样式\" class=\"headerlink\" title=\"修改博客底部标签样式\"></a>修改博客底部标签样式</h4><ul>\n<li>在文件 <code>/themes/next/layout/_macro/post.swig</code> 中，搜索 <code>rel=&quot;tag&quot;</code>，将<code>#</code>替换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/article_tag.png\" alt=\"文章底部标签\"></li>\n</ul>\n<h4 id=\"显示当前页面的浏览进度\"><a href=\"#显示当前页面的浏览进度\" class=\"headerlink\" title=\"显示当前页面的浏览进度\"></a>显示当前页面的浏览进度</h4><ul>\n<li>NexT默认已经集成该功能，在主题配置文件中，将 <code>scrollpercent</code> 的配置值设置为 <code>true</code>，在页面右下角即可看到图标。<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">back2top:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Back to top in sidebar.</span></span><br><span class=\"line\">  <span class=\"attr\">sidebar:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Scroll percent label in b2t button.</span></span><br><span class=\"line\">  <span class=\"attr\">scrollpercent:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"修改链接文字样式\"><a href=\"#修改链接文字样式\" class=\"headerlink\" title=\"修改链接文字样式\"></a>修改链接文字样式</h4><ul>\n<li>在文件 <code>themes/next/source/css/_common/components/post/post.styl</code> 中，添加以下代码<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.post-body</span> <span class=\"selector-tag\">a</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#0593d3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: none;</span><br><span class=\"line\">  <span class=\"selector-tag\">&amp;</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#ff106c</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"设置引用块样式\"><a href=\"#设置引用块样式\" class=\"headerlink\" title=\"设置引用块样式\"></a>设置引用块样式</h4><ul>\n<li>在文件 <code>themes/next/source/css/_common/scaffolding/base.styl</code> 中添加如下样式<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">blockquote</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#f39406</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">3px</span> <span class=\"number\">3px</span> <span class=\"number\">#6e6d6d</span>91;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"设置可折叠内容样式\"><a href=\"#设置可折叠内容样式\" class=\"headerlink\" title=\"设置可折叠内容样式\"></a>设置可折叠内容样式</h4><ul>\n<li>在 <code>themes/next/source/css/_custom</code> 路径下新建文件 <code>default.css</code><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">details</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">4px</span> <span class=\"number\">6px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">3px</span> <span class=\"number\">3px</span> <span class=\"number\">#666565</span>ad;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">details</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">3px</span> <span class=\"number\">3px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">101</span>, <span class=\"number\">243</span>, <span class=\"number\">243</span>, <span class=\"number\">0.71</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">details</span> &gt; <span class=\"selector-tag\">summary</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">details</span> &gt; <span class=\"selector-tag\">summary</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>themes/next/source/css/main.styl</code> 文件底部引入上述新增样式文件<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">&quot;_custom/default.css&quot;</span>;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/details-style.gif\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"设置头像的悬停效果\"><a href=\"#设置头像的悬停效果\" class=\"headerlink\" title=\"设置头像的悬停效果\"></a>设置头像的悬停效果</h4><ul>\n<li>在主题配置文件中，找到 <code>avatar</code> 配置，将其 <code>rotated</code> 属性设置为 <code>true</code><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Sidebar Avatar</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span></span><br><span class=\"line\">  <span class=\"comment\"># Replace the default image and set the url here.</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"string\">/images/avatar.gif</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, the avatar will be dispalyed in circle.</span></span><br><span class=\"line\">  <span class=\"attr\">rounded:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, the avatar will be rotated with the cursor.</span></span><br><span class=\"line\">  <span class=\"attr\">rotated:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"根据发布的博客自动生成首页\"><a href=\"#根据发布的博客自动生成首页\" class=\"headerlink\" title=\"根据发布的博客自动生成首页\"></a>根据发布的博客自动生成首页</h4><ul>\n<li>根目录执行代码，安装插件 <a href=\"https://github.com/chekun/hexo-excerpt\">hexo-excerpt</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure></li>\n<li>在主题配置文件中将 <code>excerpt_description</code> 的配置值设置为true，另外在根项目中增加以下内容：<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 首页</span></span><br><span class=\"line\"><span class=\"attr\">excerpt:</span></span><br><span class=\"line\">  <span class=\"attr\">depth:</span> <span class=\"number\">2</span>  <span class=\"comment\">#按层来算，也就是按代码块来算，截取博文多少层的内容来显示在主页</span></span><br><span class=\"line\">  <span class=\"attr\">excerpt_excludes:</span> []</span><br><span class=\"line\">  <span class=\"attr\">more_excludes:</span> []</span><br><span class=\"line\">  <span class=\"attr\">hideWholePostExcerpts:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></li>\n<li><a href=\"https://hushaoyu.github.io/blog/\">在线预览</a></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png\" alt=\"首页\"></li>\n</ul>\n<h4 id=\"首页阅读更多按钮样式更改\"><a href=\"#首页阅读更多按钮样式更改\" class=\"headerlink\" title=\"首页阅读更多按钮样式更改\"></a>首页阅读更多按钮样式更改</h4><ul>\n<li>在文件 <code>themes/next/source/css/_common/components/post/post.styl</code> 中添加如下样式：<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.post-button</span> <span class=\"selector-class\">.btn</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>) <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: inset <span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">10px</span> <span class=\"number\">0px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.35</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">linear-gradient</span>(<span class=\"number\">90deg</span>, <span class=\"number\">#a166ab</span> <span class=\"number\">0%</span>, <span class=\"number\">#ef4e7b</span> <span class=\"number\">25%</span>, <span class=\"number\">#f37055</span> <span class=\"number\">50%</span>, <span class=\"number\">#ef4e7b</span> <span class=\"number\">75%</span>, <span class=\"number\">#a166ab</span> <span class=\"number\">100%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"暗黑模式切换\"><a href=\"#暗黑模式切换\" class=\"headerlink\" title=\"暗黑模式切换\"></a>暗黑模式切换</h4><ul>\n<li>根目录执行代码，安装插件 <a href=\"https://github.com/rqh656418510/hexo-next-darkmode/blob/main/README_CN.md\">Hexo NexT Darkmode</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-next-darkmode --save</span><br></pre></td></tr></table></figure></li>\n<li>在主题配置文件中，首先将NexT默认的暗黑主题设置为 <code>false</code> ：<ul>\n<li><code>darkmode: false</code></li>\n</ul>\n</li>\n<li>之后添加如下配置：<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">darkmode_js:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">bottom:</span> <span class=\"string\">&#x27;64px&#x27;</span> <span class=\"comment\"># default: &#x27;32px&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">right:</span> <span class=\"string\">&#x27;100px&#x27;</span> <span class=\"comment\"># default: &#x27;32px&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">left:</span> <span class=\"string\">&#x27;unset&#x27;</span> <span class=\"comment\"># default: &#x27;unset&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">time:</span> <span class=\"string\">&#x27;0.5s&#x27;</span> <span class=\"comment\"># default: &#x27;0.3s&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">mixColor:</span> <span class=\"string\">&#x27;transparent&#x27;</span> <span class=\"comment\"># default: &#x27;#fff&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">backgroundColor:</span> <span class=\"string\">&#x27;transparent&#x27;</span> <span class=\"comment\"># default: &#x27;#fff&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">buttonColorDark:</span> <span class=\"string\">&#x27;#100f2c&#x27;</span> <span class=\"comment\"># default: &#x27;#100f2c&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">buttonColorLight:</span> <span class=\"string\">&#x27;#fff&#x27;</span> <span class=\"comment\"># default: &#x27;#fff&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">isActivated:</span> <span class=\"literal\">true</span> <span class=\"comment\"># default false</span></span><br><span class=\"line\">  <span class=\"attr\">saveInCookies:</span> <span class=\"literal\">true</span> <span class=\"comment\"># default: true</span></span><br><span class=\"line\">  <span class=\"attr\">label:</span> <span class=\"string\">&#x27;🌓&#x27;</span> <span class=\"comment\"># default: &#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">autoMatchOsTheme:</span> <span class=\"literal\">true</span> <span class=\"comment\"># default: true</span></span><br><span class=\"line\">  <span class=\"attr\">libUrl:</span> <span class=\"comment\"># Set custom library cdn url for Darkmode.js</span></span><br></pre></td></tr></table></figure></li>\n<li>默认激活暗黑/夜间模式，请始终与 <code>saveInCookies: false</code>、<code>autoMatchOsTheme: false</code> 一起使用</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/theme_mode.png\" alt=\"主题暗黑模式切换\"></li>\n</ul>\n<h4 id=\"博文加密访问\"><a href=\"#博文加密访问\" class=\"headerlink\" title=\"博文加密访问\"></a>博文加密访问</h4><ul>\n<li>NexT默认集成加密访问功能，在文件 <code>themes/next/layout/_partials/head/head.swig</code> 中添加如下代码：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#JavaScript</span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"string\">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (prompt(<span class=\"string\">&#x27;请输入密码&#x27;</span>) !== <span class=\"string\">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class=\"line\">                alert(<span class=\"string\">&#x27;密码错误&#x27;</span>);</span><br><span class=\"line\">                history.back();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n<li>之后在需要加密访问的博客中，在头部添加 <code>password</code> 配置即可开启：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password: 123456</span><br></pre></td></tr></table></figure></li>\n<li>默认的加密访问功能，在样式上并不优美，我们可以使用第三方的插件来实现这个功能。根项目安装插件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li>\n<li><a href=\"https://github.com/D0n9X1n/hexo-blog-encrypt\">hexo-blog-encrypt</a></li>\n<li>在根项目的配置文件中增加如下配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">encrypt:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></li>\n<li>然后和之前一样，在需要进行加密的博文中，配置相应的 <code>password</code> 属性即可生效。</li>\n<li>这种将密码配置到博文中的方式，灵活性不足，如果需要统一配置和更改密码，需要在每个博文中修改一遍。为解决这种问题，插件允许通过指定 <code>tag</code> 来进行加密，并且不同的 <code>tag</code> 可以指定不同的密码。同样在根项目的配置文件中，修改之前的 <code>encrypt</code> 配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 文章加密访问</span></span><br><span class=\"line\"><span class=\"attr\">encrypt:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">silent:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">surge</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> &#123;<span class=\"attr\">name:</span> <span class=\"string\">encrypt</span>, <span class=\"attr\">password:</span> <span class=\"number\">123456</span>&#125;</span><br><span class=\"line\">  <span class=\"attr\">abstract:</span> <span class=\"string\">博文已加密，请提供密码查看！</span></span><br><span class=\"line\">  <span class=\"attr\">message:</span> <span class=\"string\">输入密码，查看文章</span></span><br><span class=\"line\">  <span class=\"attr\">wrong_pass_message:</span> <span class=\"string\">密码验证失败，请提供正确的密码.</span></span><br><span class=\"line\">  <span class=\"attr\">wrong_hash_message:</span> <span class=\"string\">抱歉,</span> <span class=\"string\">这个文章不能被校验,</span> <span class=\"string\">不过您还是能看看解密后的内容.</span></span><br></pre></td></tr></table></figure></li>\n<li>设置 <code>tags</code> 属性，指定 <code>tag</code> 的 <code>name</code> 和 <code>password</code> 属性，同时在需要进行加密的博文中，设置此 <code>tag</code> 值<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">tags:</span> [<span class=\"string\">web</span>, <span class=\"string\">ThreeJS</span>, <span class=\"string\">React</span>, <span class=\"string\">encrypt</span>]</span><br></pre></td></tr></table></figure></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/password_needed.png\" alt=\"需要加密访问\"></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/password_confirm.png\" alt=\"确认密码\"></li>\n</ul>\n<h4 id=\"增加文章字数统计及阅读时长功能\"><a href=\"#增加文章字数统计及阅读时长功能\" class=\"headerlink\" title=\"增加文章字数统计及阅读时长功能\"></a>增加文章字数统计及阅读时长功能</h4><ul>\n<li>根项目中安装插件 <a href=\"https://github.com/theme-next/hexo-symbols-count-time\">hexo-symbols-count-time</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></li>\n<li>在主题配置文件中，搜索 <code>symbols_count_time</code> 配置，NexT默认已经集成此配置，安装插件后重新构建部署即可生效<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">separated_meta:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">item_text_post:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">item_text_total:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/word_count.png\" alt=\"博文字数及阅读时长统计\"></li>\n</ul>\n<h4 id=\"代码复制成功反馈\"><a href=\"#代码复制成功反馈\" class=\"headerlink\" title=\"代码复制成功反馈\"></a>代码复制成功反馈</h4><ul>\n<li>NexT默认已经集成代码复制功能，但是复制成功的反馈默认是禁用的，在主题配置文件中，搜索 <code>codeblock</code> ，将其 <code>show_result</code> 值设置为 <code>true</code><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"attr\">highlight_theme:</span> <span class=\"string\">&#x27;night eighties&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Show text copy result.</span></span><br><span class=\"line\">    <span class=\"attr\">show_result:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">style:</span> <span class=\"string\">flat</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"开启页面加载进度条\"><a href=\"#开启页面加载进度条\" class=\"headerlink\" title=\"开启页面加载进度条\"></a>开启页面加载进度条</h4><ul>\n<li>进入到next主题文件目录下执行命令，将插件克隆至主题文件中，<a href=\"https://github.com/theme-next/theme-next-pace\">文档</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/theme-next/theme-next-pace <span class=\"built_in\">source</span>/lib/pace</span><br></pre></td></tr></table></figure></li>\n<li>在主题配置文件中，修改 <code>pace</code> 的配置，可以通过修改 <code>theme</code> 以应用不同的进度条主题样式。<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pace:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Themes list:</span></span><br><span class=\"line\">  <span class=\"comment\"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class=\"line\">  <span class=\"comment\"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">minimal</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"博文支持评论\"><a href=\"#博文支持评论\" class=\"headerlink\" title=\"博文支持评论\"></a>博文支持评论</h4><ul>\n<li>NexT支持多种评论插件，可选值有：<code>changyan</code> 、 <code>disqus</code> 、 <code>disqusjs</code> 、 <code>gitalk</code> | <code>livere</code> | <code>valine</code>，本文使用的是 <a href=\"https://valine.js.org/quickstart.html\">valine</a></li>\n<li>根据文档提示操作，注册账号、应用，获取到 <code>appId</code> 和 <code>appKey</code>，在主题配置文件中修改配置<ul>\n<li>设置当前评论模块使用的插件<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">comments:</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: tabs | buttons</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">tabs</span></span><br><span class=\"line\">  <span class=\"comment\"># Choose a comment system to be displayed by default.</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: changyan | disqus | disqusjs | gitalk | livere | valine</span></span><br><span class=\"line\">  <span class=\"attr\">active:</span> <span class=\"string\">valine</span></span><br></pre></td></tr></table></figure></li>\n<li><code>valine</code> 配置 <code>appId</code> 和 <code>appKey</code>，其他更多的配置参考官方文档说明<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">valine:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">appid:</span> <span class=\"string\">xxxx</span> <span class=\"comment\"># Your leancloud application appid</span></span><br><span class=\"line\">  <span class=\"attr\">appkey:</span> <span class=\"string\">xxxx</span> <span class=\"comment\"># Your leancloud application appkey</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/comment.png\" alt=\"评论区\"><h4 id=\"集成网易云音乐\"><a href=\"#集成网易云音乐\" class=\"headerlink\" title=\"集成网易云音乐\"></a>集成网易云音乐</h4></li>\n<li>打开网易云网页版，搜索需要添加的歌曲，复制歌曲的外链信息，将其添加到 <code>themes/next/layout/_macro/sidebar.swig</code> 文件中，代码放置位置取决于你想让面板显示在哪个位置<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 网易云音乐 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;music163player&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;no&quot;</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//music.163.com/outchain/player?type=2&amp;id=1901049671&amp;auto=1&amp;height=66&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/wyy_music.png\" alt=\"网易云音乐\"></li>\n</ul>\n<h4 id=\"标签页美化\"><a href=\"#标签页美化\" class=\"headerlink\" title=\"标签页美化\"></a>标签页美化</h4><ul>\n<li>在 <code>/themes/next/layout/</code> 目录下新建文件 <code>tag-color.swig</code> 文件，、填入以下代码<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"keyword\">var</span> alltags = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&#x27;tag-cloud-tags&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"keyword\">var</span> tags = alltags[<span class=\"number\">0</span>].getElementsByTagName(<span class=\"string\">&#x27;a&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = tags.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">       <span class=\"keyword\">var</span> r=<span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">75</span>+<span class=\"number\">130</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">       <span class=\"keyword\">var</span> g=<span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">75</span>+<span class=\"number\">100</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">       <span class=\"keyword\">var</span> b=<span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">75</span>+<span class=\"number\">80</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">       tags[i].style.background = <span class=\"string\">&quot;rgb(&quot;</span>+r+<span class=\"string\">&quot;,&quot;</span>+g+<span class=\"string\">&quot;,&quot;</span>+b+<span class=\"string\">&quot;)&quot;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">     &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.tag-cloud-tags</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"comment\">/*font-family: Helvetica, Tahoma, Arial;*/</span></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"comment\">/*font-weight: 100;*/</span></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">counter-reset</span>: tags;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.tag-cloud-tags</span> <span class=\"selector-tag\">a</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">6px</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">padding-right</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">padding-left</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">margin</span>: <span class=\"number\">8px</span> <span class=\"number\">5px</span> <span class=\"number\">0px</span> <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.tag-cloud-tags</span> <span class=\"selector-tag\">a</span>:before&#123;</span></span><br><span class=\"line\"><span class=\"css\">    content: <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.tag-cloud-tags</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">     <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">5px</span> <span class=\"number\">15px</span> <span class=\"number\">0px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,.<span class=\"number\">4</span>);</span></span><br><span class=\"line\"><span class=\"css\">     <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(<span class=\"number\">1.1</span>);</span></span><br><span class=\"line\"><span class=\"css\">     <span class=\"comment\">/*box-shadow: 10px 10px 15px 2px rgba(0,0,0,.12), 0 0 6px 0 rgba(104, 104, 105, 0.1);*/</span></span></span><br><span class=\"line\"><span class=\"css\">     <span class=\"attribute\">transition-duration</span>: <span class=\"number\">0.15s</span>;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>在 <code>/themes/next/layout/page.swig</code> 文件中引入上面新增的文件<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%- if page.type === &#x27;tags&#x27; %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tag-cloud&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tag-cloud-tags&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;tags&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; tagcloud(&#123;min_font: 16, max_font: 16, amount: 300, color: true, start_color: &#x27;#FFF&#x27;, end_color: &#x27;#FFF&#x27;&#125;) &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&#123;% include &#x27;tag-color.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure></li>\n<li>重新构建部署项目，即可查看效果。<a href=\"https://hushaoyu.github.io/blog/tags/\">在线预览</a></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/tag_page.png\" alt=\"标签页\"></li>\n</ul>\n<h4 id=\"标签云\"><a href=\"#标签云\" class=\"headerlink\" title=\"标签云\"></a>标签云</h4><ul>\n<li>使用插件 <a href=\"https://github.com/D0n9X1n/hexo-tag-cloud/blob/master/README.ZH.md\">hexo-tag-cloud</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-tag-cloud --save</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>themes/next/layout/_macro/sidebar.swig</code> 文件中添加如下代码，重新执行 <code>npm start</code> 可查看效果<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 标签云 --&gt;</span></span><br><span class=\"line\">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;/js/tagcloud.js&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;/js/tagcanvas.js&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;widget-wrap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;widget-title&quot;</span>&gt;</span>Tag Cloud<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myCanvasContainer&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;widget tagcloud&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;250&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;resCanvas&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%&quot;</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123; list_tags() &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li>\n<li>在根项目的配置文件中，增加对标签云的属性配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 标签云</span></span><br><span class=\"line\"><span class=\"attr\">tag_cloud:</span></span><br><span class=\"line\">  <span class=\"attr\">textFont:</span> <span class=\"string\">Trebuchet</span> <span class=\"string\">MS,</span> <span class=\"string\">Helvetica</span>     <span class=\"comment\"># 字体</span></span><br><span class=\"line\">  <span class=\"attr\">textColor:</span> <span class=\"string\">&#x27;#333&#x27;</span>                     <span class=\"comment\"># 字体颜色</span></span><br><span class=\"line\">  <span class=\"attr\">textHeight:</span> <span class=\"number\">25</span>                        <span class=\"comment\"># 字体大小</span></span><br><span class=\"line\">  <span class=\"attr\">outlineColor:</span> <span class=\"string\">&#x27;#E2E1D1&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">maxSpeed:</span> <span class=\"number\">0.3</span>                         <span class=\"comment\"># 旋转速度</span></span><br><span class=\"line\">  <span class=\"attr\">pauseOnSelected:</span> <span class=\"literal\">false</span>                <span class=\"comment\"># 当选中对应标签时，是否停止转动</span></span><br></pre></td></tr></table></figure></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/tag_cloud.png\" alt=\"标签云\"></li>\n</ul>\n<h4 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h4><ul>\n<li>在根项目安装插件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-algolia --save</span><br></pre></td></tr></table></figure></li>\n<li>NexT主题已经默认集成了一部分参数配置，并且在页面的左侧 <code>Slider</code> 区域也有搜索的快捷菜单，在主题配置文件中，搜索 <code>algolia_search</code>，将 <code>enable</code> 值设置为 <code>true</code>，启用该搜索功能。<code>hits.per_page</code> 表示搜索结果分页大小，<code>labels</code> 可以设置搜索匹配提示文本。</li>\n<li>需要让搜索功能真正生效，还需要在根项目配置文件中增加 <code>algolia</code> 的账号配置信息<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># search</span></span><br><span class=\"line\"><span class=\"attr\">algolia:</span></span><br><span class=\"line\">  <span class=\"attr\">applicationID:</span> <span class=\"string\">&quot;xxx&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">apiKey:</span> <span class=\"string\">&quot;xxxxx&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">indexName:</span> <span class=\"string\">&quot;indexName&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>配置的信息需要注册 <code>algolia</code> 账号才能获取。可点击 <a href=\"https://www.algolia.com/\">algolia</a> 跳转进行注册。<ul>\n<li>注册账号后，注册一个应用，应用选择免费版本的。创建应用后在左侧菜单点击 <code>Data Source</code>，选择 <code>Indices</code>，创建一个新的索引，索引名称是博客网站需要配置的一个值，后面会用到。</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/create_index.png\" alt=\"创建索引\"></li>\n<li>回到 <code>Overview</code> 总览面板，点击 <code>API Keys</code>，在面板可以看到注册的应用的 <code>application ID</code>。创建新的key，其中的 <code>Indices</code> 选择之前创建的索引，下方的 <code>ACL</code> 权限控制，设置值为：<code>search</code>、<code>addObject</code>、<code>deleteObject</code>、<code>addInde</code>、<code>deleteIndex</code>，其他值默认，然后点击确认创建。</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_appId.png\" alt=\"application ID\"></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_apiKey.png\" alt=\"创建API Keys\"></li>\n<li>将上述生成的 <code>application ID</code>、<code>apiKey</code>、<code>indexName</code> 填入到配置文件中。</li>\n</ul>\n</li>\n<li>执行以下命令，将网站的博文生成可搜索的静态资源<ul>\n<li><strong>每次博文有更新，需要部署时，都需要先执行以下命令，再执行构建部署命令，否则更新后的内容，在搜索数据库中是没有更新的。</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">export</span> HEXO_ALGOLIA_INDEXING_KEY=<span class=\"string\">&#x27;0f04bd99beb506cc014d144974134458&#x27;</span></span><br><span class=\"line\">$ <span class=\"built_in\">export</span> HEXO_ALGOLIA_INDEXING_KEY</span><br><span class=\"line\">$ hexo algolia</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>重新运行项目，点击左侧的搜索，正常情况下，会出现弹框，输入任意内容，即可显示出搜索结果</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_search_result.png\" alt=\"搜索结果\"></li>\n</ul>\n","site":{"data":{}},"length":3503,"excerpt":"","more":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><blockquote>\n<p>&ensp;&ensp;«NexT» is a high quality elegant Hexo theme. It is crafted from scratch with love.</p>\n</blockquote>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li>进入hexo项目根目录，执行以下代码，将主题克隆至themes文件夹：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li>\n<li>在项目的根配置文件 <code>_config.yml</code> 中，将 <code>theme</code> 的配置值修改为  <code>next</code> 应用主题，重新执行构建命令更新程序。<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">next</span></span><br></pre></td></tr></table></figure></li>\n<li><code>Tips</code>：每次更新项目需要执行 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 才能应用本地更新，略显麻烦，可以在 <code>package.json</code> 文件中添加 <code>start</code> 命令，有改动只需要执行 <code>npm start</code> 就可以了<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;start&quot;:</span> <span class=\"string\">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo s&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><h4 id=\"主题切换\"><a href=\"#主题切换\" class=\"headerlink\" title=\"主题切换\"></a>主题切换</h4><ul>\n<li>NexT默认集成了4中主题模式，<code>Gemini</code>、<code>Mist</code>、<code>Muse</code>、<code>Pisces</code>。在项目配置文件中修改 <code>scheme</code> 来应用不同的主题模式。</li>\n</ul>\n<h4 id=\"隐藏网站页面底部的-powered-by\"><a href=\"#隐藏网站页面底部的-powered-by\" class=\"headerlink\" title=\"隐藏网站页面底部的 powered by\"></a>隐藏网站页面底部的 <code>powered by</code></h4><ul>\n<li>在文件 <code>themes/next/layout/_partials/footer.swig</code> 中，将 <code>footer.powered</code> 代码块使用 <code>&lt;!-- --&gt;</code> 注释掉。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--</span><br><span class=\"line\">&#123;%- <span class=\"keyword\">if</span> theme.footer.powered %&#125;</span><br><span class=\"line\">  &lt;div class=<span class=\"string\">&quot;powered-by&quot;</span>&gt;</span><br><span class=\"line\">    &#123;%- <span class=\"built_in\">set</span> next_site = <span class=\"string\">&#x27;https://theme-next.org&#x27;</span> %&#125;</span><br><span class=\"line\">    &#123;%- <span class=\"keyword\">if</span> theme.scheme !== <span class=\"string\">&#x27;Gemini&#x27;</span> %&#125;</span><br><span class=\"line\">      &#123;%- <span class=\"built_in\">set</span> next_site = <span class=\"string\">&#x27;https://&#x27;</span> + theme.scheme | lower + <span class=\"string\">&#x27;.theme-next.org&#x27;</span> %&#125;</span><br><span class=\"line\">    &#123;%- endif %&#125;</span><br><span class=\"line\">    &#123;&#123;- __(<span class=\"string\">&#x27;footer.powered&#x27;</span>, next_url(<span class=\"string\">&#x27;https://hexo.io&#x27;</span>, <span class=\"string\">&#x27;Hexo&#x27;</span>, &#123;class: <span class=\"string\">&#x27;theme-link&#x27;</span>&#125;) + <span class=\"string\">&#x27; &amp; &#x27;</span> + next_url(next_site, <span class=\"string\">&#x27;NexT.&#x27;</span> + theme.scheme, &#123;class: <span class=\"string\">&#x27;theme-link&#x27;</span>&#125;)) &#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;%- endif %&#125;</span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"文章添加阴影\"><a href=\"#文章添加阴影\" class=\"headerlink\" title=\"文章添加阴影\"></a>文章添加阴影</h4><ul>\n<li>在文件 <code>themes/next/source/css/_common/components/post/post.styl</code> 中添加如下样式：<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.post</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  -webkit-<span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">202</span>, <span class=\"number\">203</span>, <span class=\"number\">203</span>, .<span class=\"number\">5</span>);</span><br><span class=\"line\">  -moz-<span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">202</span>, <span class=\"number\">203</span>, <span class=\"number\">204</span>, .<span class=\"number\">5</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"设置各板块的背景透明度\"><a href=\"#设置各板块的背景透明度\" class=\"headerlink\" title=\"设置各板块的背景透明度\"></a>设置各板块的背景透明度</h4><ul>\n<li>在文件 <code>themes/next/source/css/_schemes/Pisces/_layout.styl</code> 中可以看到，板块的 <code>background</code> 属性，配置的都是 <code>--content-bg-color</code> 变量，因此我们只需找到这个变量所在的位置进行修改既可以了。</li>\n<li>在项目中搜索，可以找到是在 <code>themes/next/source/css/_variables/base.styl</code> 文件中进行配置的，将其值修改如下<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$body-bg-color</span> = rgba(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">8</span>);</span><br><span class=\"line\"><span class=\"variable\">$content-bg-color</span> = rgba(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">8</span>);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"设置网站图标-favicon-ico\"><a href=\"#设置网站图标-favicon-ico\" class=\"headerlink\" title=\"设置网站图标 favicon.ico\"></a>设置网站图标 <code>favicon.ico</code></h4><ul>\n<li>在文件夹 <code>/themes/next/source/images</code> 中，有不同场景不同格式的网站图标，根据格式进行替换。</li>\n<li>其他可自定义配置图标<ul>\n<li><code>avatar.gif</code>：网站个人介绍logo</li>\n</ul>\n</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/favicon.png\" alt=\"网站图标\"></li>\n</ul>\n<h4 id=\"修改博客底部标签样式\"><a href=\"#修改博客底部标签样式\" class=\"headerlink\" title=\"修改博客底部标签样式\"></a>修改博客底部标签样式</h4><ul>\n<li>在文件 <code>/themes/next/layout/_macro/post.swig</code> 中，搜索 <code>rel=&quot;tag&quot;</code>，将<code>#</code>替换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/article_tag.png\" alt=\"文章底部标签\"></li>\n</ul>\n<h4 id=\"显示当前页面的浏览进度\"><a href=\"#显示当前页面的浏览进度\" class=\"headerlink\" title=\"显示当前页面的浏览进度\"></a>显示当前页面的浏览进度</h4><ul>\n<li>NexT默认已经集成该功能，在主题配置文件中，将 <code>scrollpercent</code> 的配置值设置为 <code>true</code>，在页面右下角即可看到图标。<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">back2top:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Back to top in sidebar.</span></span><br><span class=\"line\">  <span class=\"attr\">sidebar:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Scroll percent label in b2t button.</span></span><br><span class=\"line\">  <span class=\"attr\">scrollpercent:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"修改链接文字样式\"><a href=\"#修改链接文字样式\" class=\"headerlink\" title=\"修改链接文字样式\"></a>修改链接文字样式</h4><ul>\n<li>在文件 <code>themes/next/source/css/_common/components/post/post.styl</code> 中，添加以下代码<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.post-body</span> <span class=\"selector-tag\">a</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#0593d3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: none;</span><br><span class=\"line\">  <span class=\"selector-tag\">&amp;</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#ff106c</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"设置引用块样式\"><a href=\"#设置引用块样式\" class=\"headerlink\" title=\"设置引用块样式\"></a>设置引用块样式</h4><ul>\n<li>在文件 <code>themes/next/source/css/_common/scaffolding/base.styl</code> 中添加如下样式<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">blockquote</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#f39406</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">3px</span> <span class=\"number\">3px</span> <span class=\"number\">#6e6d6d</span>91;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"设置可折叠内容样式\"><a href=\"#设置可折叠内容样式\" class=\"headerlink\" title=\"设置可折叠内容样式\"></a>设置可折叠内容样式</h4><ul>\n<li>在 <code>themes/next/source/css/_custom</code> 路径下新建文件 <code>default.css</code><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">details</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">4px</span> <span class=\"number\">6px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">3px</span> <span class=\"number\">3px</span> <span class=\"number\">#666565</span>ad;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">details</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">3px</span> <span class=\"number\">3px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">101</span>, <span class=\"number\">243</span>, <span class=\"number\">243</span>, <span class=\"number\">0.71</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">details</span> &gt; <span class=\"selector-tag\">summary</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">details</span> &gt; <span class=\"selector-tag\">summary</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>themes/next/source/css/main.styl</code> 文件底部引入上述新增样式文件<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">&quot;_custom/default.css&quot;</span>;</span><br></pre></td></tr></table></figure>\n<img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/details-style.gif\" alt=\"预览\"></li>\n</ul>\n<h4 id=\"设置头像的悬停效果\"><a href=\"#设置头像的悬停效果\" class=\"headerlink\" title=\"设置头像的悬停效果\"></a>设置头像的悬停效果</h4><ul>\n<li>在主题配置文件中，找到 <code>avatar</code> 配置，将其 <code>rotated</code> 属性设置为 <code>true</code><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Sidebar Avatar</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span></span><br><span class=\"line\">  <span class=\"comment\"># Replace the default image and set the url here.</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"string\">/images/avatar.gif</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, the avatar will be dispalyed in circle.</span></span><br><span class=\"line\">  <span class=\"attr\">rounded:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, the avatar will be rotated with the cursor.</span></span><br><span class=\"line\">  <span class=\"attr\">rotated:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"根据发布的博客自动生成首页\"><a href=\"#根据发布的博客自动生成首页\" class=\"headerlink\" title=\"根据发布的博客自动生成首页\"></a>根据发布的博客自动生成首页</h4><ul>\n<li>根目录执行代码，安装插件 <a href=\"https://github.com/chekun/hexo-excerpt\">hexo-excerpt</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure></li>\n<li>在主题配置文件中将 <code>excerpt_description</code> 的配置值设置为true，另外在根项目中增加以下内容：<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 首页</span></span><br><span class=\"line\"><span class=\"attr\">excerpt:</span></span><br><span class=\"line\">  <span class=\"attr\">depth:</span> <span class=\"number\">2</span>  <span class=\"comment\">#按层来算，也就是按代码块来算，截取博文多少层的内容来显示在主页</span></span><br><span class=\"line\">  <span class=\"attr\">excerpt_excludes:</span> []</span><br><span class=\"line\">  <span class=\"attr\">more_excludes:</span> []</span><br><span class=\"line\">  <span class=\"attr\">hideWholePostExcerpts:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></li>\n<li><a href=\"https://hushaoyu.github.io/blog/\">在线预览</a></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png\" alt=\"首页\"></li>\n</ul>\n<h4 id=\"首页阅读更多按钮样式更改\"><a href=\"#首页阅读更多按钮样式更改\" class=\"headerlink\" title=\"首页阅读更多按钮样式更改\"></a>首页阅读更多按钮样式更改</h4><ul>\n<li>在文件 <code>themes/next/source/css/_common/components/post/post.styl</code> 中添加如下样式：<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.post-button</span> <span class=\"selector-class\">.btn</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>) <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: inset <span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">10px</span> <span class=\"number\">0px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.35</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">linear-gradient</span>(<span class=\"number\">90deg</span>, <span class=\"number\">#a166ab</span> <span class=\"number\">0%</span>, <span class=\"number\">#ef4e7b</span> <span class=\"number\">25%</span>, <span class=\"number\">#f37055</span> <span class=\"number\">50%</span>, <span class=\"number\">#ef4e7b</span> <span class=\"number\">75%</span>, <span class=\"number\">#a166ab</span> <span class=\"number\">100%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"暗黑模式切换\"><a href=\"#暗黑模式切换\" class=\"headerlink\" title=\"暗黑模式切换\"></a>暗黑模式切换</h4><ul>\n<li>根目录执行代码，安装插件 <a href=\"https://github.com/rqh656418510/hexo-next-darkmode/blob/main/README_CN.md\">Hexo NexT Darkmode</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-next-darkmode --save</span><br></pre></td></tr></table></figure></li>\n<li>在主题配置文件中，首先将NexT默认的暗黑主题设置为 <code>false</code> ：<ul>\n<li><code>darkmode: false</code></li>\n</ul>\n</li>\n<li>之后添加如下配置：<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">darkmode_js:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">bottom:</span> <span class=\"string\">&#x27;64px&#x27;</span> <span class=\"comment\"># default: &#x27;32px&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">right:</span> <span class=\"string\">&#x27;100px&#x27;</span> <span class=\"comment\"># default: &#x27;32px&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">left:</span> <span class=\"string\">&#x27;unset&#x27;</span> <span class=\"comment\"># default: &#x27;unset&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">time:</span> <span class=\"string\">&#x27;0.5s&#x27;</span> <span class=\"comment\"># default: &#x27;0.3s&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">mixColor:</span> <span class=\"string\">&#x27;transparent&#x27;</span> <span class=\"comment\"># default: &#x27;#fff&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">backgroundColor:</span> <span class=\"string\">&#x27;transparent&#x27;</span> <span class=\"comment\"># default: &#x27;#fff&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">buttonColorDark:</span> <span class=\"string\">&#x27;#100f2c&#x27;</span> <span class=\"comment\"># default: &#x27;#100f2c&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">buttonColorLight:</span> <span class=\"string\">&#x27;#fff&#x27;</span> <span class=\"comment\"># default: &#x27;#fff&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">isActivated:</span> <span class=\"literal\">true</span> <span class=\"comment\"># default false</span></span><br><span class=\"line\">  <span class=\"attr\">saveInCookies:</span> <span class=\"literal\">true</span> <span class=\"comment\"># default: true</span></span><br><span class=\"line\">  <span class=\"attr\">label:</span> <span class=\"string\">&#x27;🌓&#x27;</span> <span class=\"comment\"># default: &#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">autoMatchOsTheme:</span> <span class=\"literal\">true</span> <span class=\"comment\"># default: true</span></span><br><span class=\"line\">  <span class=\"attr\">libUrl:</span> <span class=\"comment\"># Set custom library cdn url for Darkmode.js</span></span><br></pre></td></tr></table></figure></li>\n<li>默认激活暗黑/夜间模式，请始终与 <code>saveInCookies: false</code>、<code>autoMatchOsTheme: false</code> 一起使用</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/theme_mode.png\" alt=\"主题暗黑模式切换\"></li>\n</ul>\n<h4 id=\"博文加密访问\"><a href=\"#博文加密访问\" class=\"headerlink\" title=\"博文加密访问\"></a>博文加密访问</h4><ul>\n<li>NexT默认集成加密访问功能，在文件 <code>themes/next/layout/_partials/head/head.swig</code> 中添加如下代码：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#JavaScript</span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"string\">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (prompt(<span class=\"string\">&#x27;请输入密码&#x27;</span>) !== <span class=\"string\">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class=\"line\">                alert(<span class=\"string\">&#x27;密码错误&#x27;</span>);</span><br><span class=\"line\">                history.back();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n<li>之后在需要加密访问的博客中，在头部添加 <code>password</code> 配置即可开启：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password: 123456</span><br></pre></td></tr></table></figure></li>\n<li>默认的加密访问功能，在样式上并不优美，我们可以使用第三方的插件来实现这个功能。根项目安装插件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li>\n<li><a href=\"https://github.com/D0n9X1n/hexo-blog-encrypt\">hexo-blog-encrypt</a></li>\n<li>在根项目的配置文件中增加如下配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">encrypt:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></li>\n<li>然后和之前一样，在需要进行加密的博文中，配置相应的 <code>password</code> 属性即可生效。</li>\n<li>这种将密码配置到博文中的方式，灵活性不足，如果需要统一配置和更改密码，需要在每个博文中修改一遍。为解决这种问题，插件允许通过指定 <code>tag</code> 来进行加密，并且不同的 <code>tag</code> 可以指定不同的密码。同样在根项目的配置文件中，修改之前的 <code>encrypt</code> 配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 文章加密访问</span></span><br><span class=\"line\"><span class=\"attr\">encrypt:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">silent:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">surge</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> &#123;<span class=\"attr\">name:</span> <span class=\"string\">encrypt</span>, <span class=\"attr\">password:</span> <span class=\"number\">123456</span>&#125;</span><br><span class=\"line\">  <span class=\"attr\">abstract:</span> <span class=\"string\">博文已加密，请提供密码查看！</span></span><br><span class=\"line\">  <span class=\"attr\">message:</span> <span class=\"string\">输入密码，查看文章</span></span><br><span class=\"line\">  <span class=\"attr\">wrong_pass_message:</span> <span class=\"string\">密码验证失败，请提供正确的密码.</span></span><br><span class=\"line\">  <span class=\"attr\">wrong_hash_message:</span> <span class=\"string\">抱歉,</span> <span class=\"string\">这个文章不能被校验,</span> <span class=\"string\">不过您还是能看看解密后的内容.</span></span><br></pre></td></tr></table></figure></li>\n<li>设置 <code>tags</code> 属性，指定 <code>tag</code> 的 <code>name</code> 和 <code>password</code> 属性，同时在需要进行加密的博文中，设置此 <code>tag</code> 值<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">tags:</span> [<span class=\"string\">web</span>, <span class=\"string\">ThreeJS</span>, <span class=\"string\">React</span>, <span class=\"string\">encrypt</span>]</span><br></pre></td></tr></table></figure></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/password_needed.png\" alt=\"需要加密访问\"></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/password_confirm.png\" alt=\"确认密码\"></li>\n</ul>\n<h4 id=\"增加文章字数统计及阅读时长功能\"><a href=\"#增加文章字数统计及阅读时长功能\" class=\"headerlink\" title=\"增加文章字数统计及阅读时长功能\"></a>增加文章字数统计及阅读时长功能</h4><ul>\n<li>根项目中安装插件 <a href=\"https://github.com/theme-next/hexo-symbols-count-time\">hexo-symbols-count-time</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></li>\n<li>在主题配置文件中，搜索 <code>symbols_count_time</code> 配置，NexT默认已经集成此配置，安装插件后重新构建部署即可生效<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">separated_meta:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">item_text_post:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">item_text_total:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/word_count.png\" alt=\"博文字数及阅读时长统计\"></li>\n</ul>\n<h4 id=\"代码复制成功反馈\"><a href=\"#代码复制成功反馈\" class=\"headerlink\" title=\"代码复制成功反馈\"></a>代码复制成功反馈</h4><ul>\n<li>NexT默认已经集成代码复制功能，但是复制成功的反馈默认是禁用的，在主题配置文件中，搜索 <code>codeblock</code> ，将其 <code>show_result</code> 值设置为 <code>true</code><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"attr\">highlight_theme:</span> <span class=\"string\">&#x27;night eighties&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Show text copy result.</span></span><br><span class=\"line\">    <span class=\"attr\">show_result:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">style:</span> <span class=\"string\">flat</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"开启页面加载进度条\"><a href=\"#开启页面加载进度条\" class=\"headerlink\" title=\"开启页面加载进度条\"></a>开启页面加载进度条</h4><ul>\n<li>进入到next主题文件目录下执行命令，将插件克隆至主题文件中，<a href=\"https://github.com/theme-next/theme-next-pace\">文档</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/theme-next/theme-next-pace <span class=\"built_in\">source</span>/lib/pace</span><br></pre></td></tr></table></figure></li>\n<li>在主题配置文件中，修改 <code>pace</code> 的配置，可以通过修改 <code>theme</code> 以应用不同的进度条主题样式。<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pace:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Themes list:</span></span><br><span class=\"line\">  <span class=\"comment\"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class=\"line\">  <span class=\"comment\"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">minimal</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"博文支持评论\"><a href=\"#博文支持评论\" class=\"headerlink\" title=\"博文支持评论\"></a>博文支持评论</h4><ul>\n<li>NexT支持多种评论插件，可选值有：<code>changyan</code> 、 <code>disqus</code> 、 <code>disqusjs</code> 、 <code>gitalk</code> | <code>livere</code> | <code>valine</code>，本文使用的是 <a href=\"https://valine.js.org/quickstart.html\">valine</a></li>\n<li>根据文档提示操作，注册账号、应用，获取到 <code>appId</code> 和 <code>appKey</code>，在主题配置文件中修改配置<ul>\n<li>设置当前评论模块使用的插件<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">comments:</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: tabs | buttons</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">tabs</span></span><br><span class=\"line\">  <span class=\"comment\"># Choose a comment system to be displayed by default.</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: changyan | disqus | disqusjs | gitalk | livere | valine</span></span><br><span class=\"line\">  <span class=\"attr\">active:</span> <span class=\"string\">valine</span></span><br></pre></td></tr></table></figure></li>\n<li><code>valine</code> 配置 <code>appId</code> 和 <code>appKey</code>，其他更多的配置参考官方文档说明<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">valine:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">appid:</span> <span class=\"string\">xxxx</span> <span class=\"comment\"># Your leancloud application appid</span></span><br><span class=\"line\">  <span class=\"attr\">appkey:</span> <span class=\"string\">xxxx</span> <span class=\"comment\"># Your leancloud application appkey</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/comment.png\" alt=\"评论区\"><h4 id=\"集成网易云音乐\"><a href=\"#集成网易云音乐\" class=\"headerlink\" title=\"集成网易云音乐\"></a>集成网易云音乐</h4></li>\n<li>打开网易云网页版，搜索需要添加的歌曲，复制歌曲的外链信息，将其添加到 <code>themes/next/layout/_macro/sidebar.swig</code> 文件中，代码放置位置取决于你想让面板显示在哪个位置<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 网易云音乐 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;music163player&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;no&quot;</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//music.163.com/outchain/player?type=2&amp;id=1901049671&amp;auto=1&amp;height=66&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/wyy_music.png\" alt=\"网易云音乐\"></li>\n</ul>\n<h4 id=\"标签页美化\"><a href=\"#标签页美化\" class=\"headerlink\" title=\"标签页美化\"></a>标签页美化</h4><ul>\n<li>在 <code>/themes/next/layout/</code> 目录下新建文件 <code>tag-color.swig</code> 文件，、填入以下代码<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"keyword\">var</span> alltags = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&#x27;tag-cloud-tags&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"keyword\">var</span> tags = alltags[<span class=\"number\">0</span>].getElementsByTagName(<span class=\"string\">&#x27;a&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = tags.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">       <span class=\"keyword\">var</span> r=<span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">75</span>+<span class=\"number\">130</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">       <span class=\"keyword\">var</span> g=<span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">75</span>+<span class=\"number\">100</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">       <span class=\"keyword\">var</span> b=<span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">75</span>+<span class=\"number\">80</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">       tags[i].style.background = <span class=\"string\">&quot;rgb(&quot;</span>+r+<span class=\"string\">&quot;,&quot;</span>+g+<span class=\"string\">&quot;,&quot;</span>+b+<span class=\"string\">&quot;)&quot;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">     &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.tag-cloud-tags</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"comment\">/*font-family: Helvetica, Tahoma, Arial;*/</span></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"comment\">/*font-weight: 100;*/</span></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">counter-reset</span>: tags;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.tag-cloud-tags</span> <span class=\"selector-tag\">a</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">6px</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">padding-right</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">padding-left</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"attribute\">margin</span>: <span class=\"number\">8px</span> <span class=\"number\">5px</span> <span class=\"number\">0px</span> <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.tag-cloud-tags</span> <span class=\"selector-tag\">a</span>:before&#123;</span></span><br><span class=\"line\"><span class=\"css\">    content: <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.tag-cloud-tags</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">     <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">5px</span> <span class=\"number\">15px</span> <span class=\"number\">0px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,.<span class=\"number\">4</span>);</span></span><br><span class=\"line\"><span class=\"css\">     <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(<span class=\"number\">1.1</span>);</span></span><br><span class=\"line\"><span class=\"css\">     <span class=\"comment\">/*box-shadow: 10px 10px 15px 2px rgba(0,0,0,.12), 0 0 6px 0 rgba(104, 104, 105, 0.1);*/</span></span></span><br><span class=\"line\"><span class=\"css\">     <span class=\"attribute\">transition-duration</span>: <span class=\"number\">0.15s</span>;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>在 <code>/themes/next/layout/page.swig</code> 文件中引入上面新增的文件<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%- if page.type === &#x27;tags&#x27; %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tag-cloud&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tag-cloud-tags&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;tags&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; tagcloud(&#123;min_font: 16, max_font: 16, amount: 300, color: true, start_color: &#x27;#FFF&#x27;, end_color: &#x27;#FFF&#x27;&#125;) &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&#123;% include &#x27;tag-color.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure></li>\n<li>重新构建部署项目，即可查看效果。<a href=\"https://hushaoyu.github.io/blog/tags/\">在线预览</a></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/tag_page.png\" alt=\"标签页\"></li>\n</ul>\n<h4 id=\"标签云\"><a href=\"#标签云\" class=\"headerlink\" title=\"标签云\"></a>标签云</h4><ul>\n<li>使用插件 <a href=\"https://github.com/D0n9X1n/hexo-tag-cloud/blob/master/README.ZH.md\">hexo-tag-cloud</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-tag-cloud --save</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>themes/next/layout/_macro/sidebar.swig</code> 文件中添加如下代码，重新执行 <code>npm start</code> 可查看效果<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 标签云 --&gt;</span></span><br><span class=\"line\">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;/js/tagcloud.js&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;/js/tagcanvas.js&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;widget-wrap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;widget-title&quot;</span>&gt;</span>Tag Cloud<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myCanvasContainer&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;widget tagcloud&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;250&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;250&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;resCanvas&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%&quot;</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123; list_tags() &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li>\n<li>在根项目的配置文件中，增加对标签云的属性配置<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 标签云</span></span><br><span class=\"line\"><span class=\"attr\">tag_cloud:</span></span><br><span class=\"line\">  <span class=\"attr\">textFont:</span> <span class=\"string\">Trebuchet</span> <span class=\"string\">MS,</span> <span class=\"string\">Helvetica</span>     <span class=\"comment\"># 字体</span></span><br><span class=\"line\">  <span class=\"attr\">textColor:</span> <span class=\"string\">&#x27;#333&#x27;</span>                     <span class=\"comment\"># 字体颜色</span></span><br><span class=\"line\">  <span class=\"attr\">textHeight:</span> <span class=\"number\">25</span>                        <span class=\"comment\"># 字体大小</span></span><br><span class=\"line\">  <span class=\"attr\">outlineColor:</span> <span class=\"string\">&#x27;#E2E1D1&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">maxSpeed:</span> <span class=\"number\">0.3</span>                         <span class=\"comment\"># 旋转速度</span></span><br><span class=\"line\">  <span class=\"attr\">pauseOnSelected:</span> <span class=\"literal\">false</span>                <span class=\"comment\"># 当选中对应标签时，是否停止转动</span></span><br></pre></td></tr></table></figure></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/tag_cloud.png\" alt=\"标签云\"></li>\n</ul>\n<h4 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h4><ul>\n<li>在根项目安装插件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-algolia --save</span><br></pre></td></tr></table></figure></li>\n<li>NexT主题已经默认集成了一部分参数配置，并且在页面的左侧 <code>Slider</code> 区域也有搜索的快捷菜单，在主题配置文件中，搜索 <code>algolia_search</code>，将 <code>enable</code> 值设置为 <code>true</code>，启用该搜索功能。<code>hits.per_page</code> 表示搜索结果分页大小，<code>labels</code> 可以设置搜索匹配提示文本。</li>\n<li>需要让搜索功能真正生效，还需要在根项目配置文件中增加 <code>algolia</code> 的账号配置信息<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># search</span></span><br><span class=\"line\"><span class=\"attr\">algolia:</span></span><br><span class=\"line\">  <span class=\"attr\">applicationID:</span> <span class=\"string\">&quot;xxx&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">apiKey:</span> <span class=\"string\">&quot;xxxxx&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">indexName:</span> <span class=\"string\">&quot;indexName&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>配置的信息需要注册 <code>algolia</code> 账号才能获取。可点击 <a href=\"https://www.algolia.com/\">algolia</a> 跳转进行注册。<ul>\n<li>注册账号后，注册一个应用，应用选择免费版本的。创建应用后在左侧菜单点击 <code>Data Source</code>，选择 <code>Indices</code>，创建一个新的索引，索引名称是博客网站需要配置的一个值，后面会用到。</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/create_index.png\" alt=\"创建索引\"></li>\n<li>回到 <code>Overview</code> 总览面板，点击 <code>API Keys</code>，在面板可以看到注册的应用的 <code>application ID</code>。创建新的key，其中的 <code>Indices</code> 选择之前创建的索引，下方的 <code>ACL</code> 权限控制，设置值为：<code>search</code>、<code>addObject</code>、<code>deleteObject</code>、<code>addInde</code>、<code>deleteIndex</code>，其他值默认，然后点击确认创建。</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_appId.png\" alt=\"application ID\"></li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_apiKey.png\" alt=\"创建API Keys\"></li>\n<li>将上述生成的 <code>application ID</code>、<code>apiKey</code>、<code>indexName</code> 填入到配置文件中。</li>\n</ul>\n</li>\n<li>执行以下命令，将网站的博文生成可搜索的静态资源<ul>\n<li><strong>每次博文有更新，需要部署时，都需要先执行以下命令，再执行构建部署命令，否则更新后的内容，在搜索数据库中是没有更新的。</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">export</span> HEXO_ALGOLIA_INDEXING_KEY=<span class=\"string\">&#x27;0f04bd99beb506cc014d144974134458&#x27;</span></span><br><span class=\"line\">$ <span class=\"built_in\">export</span> HEXO_ALGOLIA_INDEXING_KEY</span><br><span class=\"line\">$ hexo algolia</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>重新运行项目，点击左侧的搜索，正常情况下，会出现弹框，输入任意内容，即可显示出搜索结果</li>\n<li><img src=\"https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_search_result.png\" alt=\"搜索结果\"></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckzktchbd0001okpc9ekp812u","category_id":"ckzktchbg0004okpc731r1u4e","_id":"ckzktchbl000fokpc923zhma4"},{"post_id":"ckzktchbf0003okpc85q6g1fs","category_id":"ckzktchbj000bokpc148i0eu9","_id":"ckzktchbn000mokpcehcp8724"},{"post_id":"ckzktchbi0007okpc7vqo1hzl","category_id":"ckzktchbl000gokpc9q0u0ip0","_id":"ckzktchbq000sokpcds7ufvj9"},{"post_id":"ckzktchbj0009okpce60p8mya","category_id":"ckzktchbl000gokpc9q0u0ip0","_id":"ckzktchbt000yokpc0b3b0ak8"},{"post_id":"ckzktchbj000aokpcaio4b0z4","category_id":"ckzktchbl000gokpc9q0u0ip0","_id":"ckzktchbv0014okpc7wwq9djg"},{"post_id":"ckzktchbk000dokpc3cti0opj","category_id":"ckzktchbt000xokpcb0ore0i5","_id":"ckzktchbw001bokpcg6dx47h4"},{"post_id":"ckzktchbs000uokpcb3ld5azo","category_id":"ckzktchbz001pokpc2rgchn9f","_id":"ckzktchc0001uokpc6oygh371"},{"post_id":"ckzktchbt0010okpc0h439q3x","category_id":"ckzktchbz001rokpc3xod7n9b","_id":"ckzktchc10020okpcg4z89nvi"},{"post_id":"ckzktchbu0013okpc9euofrra","category_id":"ckzktchc0001yokpcg60rcpwi","_id":"ckzktchc20024okpca92p6xo6"},{"post_id":"ckzktchbv0016okpcbb990hf4","category_id":"ckzktchc10021okpc9efk4sdu","_id":"ckzktchc30029okpcerzv79jv"},{"post_id":"ckzktchbw0019okpc8wf62e37","category_id":"ckzktchc20025okpc2ny288i8","_id":"ckzktchc3002cokpc8v12gy40"},{"post_id":"ckzktchbk000eokpc9ne4dpnp","category_id":"ckzktchbt000xokpcb0ore0i5","_id":"ckzktchc4002gokpc09sx4a9p"},{"post_id":"ckzktchbk000eokpc9ne4dpnp","category_id":"ckzktchc3002aokpc2am0c2f9","_id":"ckzktchc4002kokpce0ffasya"},{"post_id":"ckzktchbw001cokpc4fbtefkk","category_id":"ckzktchc3002dokpcf7qj7oyy","_id":"ckzktchc4002mokpcfiv72rzi"},{"post_id":"ckzktchbl000iokpc0ssf6w7s","category_id":"ckzktchbw001aokpc98tbfalg","_id":"ckzktchc5002rokpc2vrm64jo"},{"post_id":"ckzktchbl000iokpc0ssf6w7s","category_id":"ckzktchc4002nokpc61g37tel","_id":"ckzktchc5002uokpc61zs9ed9"},{"post_id":"ckzktchbn000kokpc5u1d55oa","category_id":"ckzktchbx001gokpc5la8066n","_id":"ckzktchc5002xokpcai9idxrb"},{"post_id":"ckzktchbn000kokpc5u1d55oa","category_id":"ckzktchc4002pokpchxj29wm6","_id":"ckzktchc60031okpc5s92dfdc"},{"post_id":"ckzktchbo000pokpc7whe8ar0","category_id":"ckzktchbx001gokpc5la8066n","_id":"ckzktchc60033okpccpwhe6zl"},{"post_id":"ckzktchbo000pokpc7whe8ar0","category_id":"ckzktchc5002sokpcb9qh0uh2","_id":"ckzktchc60037okpc0zmnalqw"},{"post_id":"ckzktchbp000qokpc81kg22vt","category_id":"ckzktchby001lokpc0jfc1dn1","_id":"ckzktchc60038okpca0czasm9"},{"post_id":"ckzktchbp000qokpc81kg22vt","category_id":"ckzktchc5002yokpc9oqx04ty","_id":"ckzktchc7003cokpcge6n0pmi"},{"post_id":"ckzktchbt000wokpc0nwrgijb","category_id":"ckzktchbz001rokpc3xod7n9b","_id":"ckzktchc8003fokpcczrtavcg"},{"post_id":"ckzktchbt000wokpc0nwrgijb","category_id":"ckzktchc60034okpc1sef5ity","_id":"ckzktchc8003hokpc1wl1amro"},{"post_id":"ckzktchbx001fokpcce6dbndw","category_id":"ckzktchc4002iokpch0h8cspv","_id":"ckzktchc8003jokpcdrbg2lnv"},{"post_id":"ckzktchbx001fokpcce6dbndw","category_id":"ckzktchc7003aokpc5u6b1z14","_id":"ckzktchc9003lokpc8p02bo5t"},{"post_id":"ckzktchcb003vokpc4dsh0a89","category_id":"ckzktchbl000gokpc9q0u0ip0","_id":"ckzktchcc003xokpc3ry26a4n"}],"PostTag":[{"post_id":"ckzktchbd0001okpc9ekp812u","tag_id":"ckzktchbh0005okpc5o7j3jec","_id":"ckzktchbm000jokpc06js3mu0"},{"post_id":"ckzktchbd0001okpc9ekp812u","tag_id":"ckzktchbk000cokpc9agg38q5","_id":"ckzktchbn000lokpc1idp1bll"},{"post_id":"ckzktchbf0003okpc85q6g1fs","tag_id":"ckzktchbl000hokpcfazccnn4","_id":"ckzktchbt000vokpc6x5y0iqn"},{"post_id":"ckzktchbf0003okpc85q6g1fs","tag_id":"ckzktchbn000ookpc0zi9hbo0","_id":"ckzktchbt000zokpcgw416ik9"},{"post_id":"ckzktchbi0007okpc7vqo1hzl","tag_id":"ckzktchbq000tokpchw1j2bfg","_id":"ckzktchbu0012okpc5jn3hntp"},{"post_id":"ckzktchbj0009okpce60p8mya","tag_id":"ckzktchbq000tokpchw1j2bfg","_id":"ckzktchbw0018okpch6b23kg7"},{"post_id":"ckzktchbj000aokpcaio4b0z4","tag_id":"ckzktchbq000tokpchw1j2bfg","_id":"ckzktchbx001eokpc86ugeuz7"},{"post_id":"ckzktchbk000dokpc3cti0opj","tag_id":"ckzktchbx001dokpc9f9qgwjp","_id":"ckzktchby001iokpc9zmh3yny"},{"post_id":"ckzktchbk000eokpc9ne4dpnp","tag_id":"ckzktchbx001dokpc9f9qgwjp","_id":"ckzktchbz001nokpc89d2dqqh"},{"post_id":"ckzktchbk000eokpc9ne4dpnp","tag_id":"ckzktchby001kokpcetwh7cw0","_id":"ckzktchbz001ookpc7qa34ifv"},{"post_id":"ckzktchbl000iokpc0ssf6w7s","tag_id":"ckzktchbz001mokpcea8yc63x","_id":"ckzktchc0001tokpc6a5carpu"},{"post_id":"ckzktchbl000iokpc0ssf6w7s","tag_id":"ckzktchbz001qokpcaoe36g10","_id":"ckzktchc0001vokpcg8e821je"},{"post_id":"ckzktchbn000kokpc5u1d55oa","tag_id":"ckzktchbz001sokpc3ona2d0c","_id":"ckzktchc20023okpc7zgq3x29"},{"post_id":"ckzktchbn000kokpc5u1d55oa","tag_id":"ckzktchc0001xokpc1pnvdg6o","_id":"ckzktchc20026okpcg78geotv"},{"post_id":"ckzktchbn000kokpc5u1d55oa","tag_id":"ckzktchc0001zokpchdpghqon","_id":"ckzktchc30028okpcg9i64v40"},{"post_id":"ckzktchbo000pokpc7whe8ar0","tag_id":"ckzktchbz001sokpc3ona2d0c","_id":"ckzktchc3002fokpc2rxg0o6k"},{"post_id":"ckzktchbo000pokpc7whe8ar0","tag_id":"ckzktchc20027okpc7la44rzm","_id":"ckzktchc4002hokpchl20aaam"},{"post_id":"ckzktchbo000pokpc7whe8ar0","tag_id":"ckzktchc3002bokpc7pz71asr","_id":"ckzktchc4002lokpchye55sxy"},{"post_id":"ckzktchbp000qokpc81kg22vt","tag_id":"ckzktchc3002eokpc3bo10325","_id":"ckzktchc5002vokpc1r3d00vu"},{"post_id":"ckzktchbp000qokpc81kg22vt","tag_id":"ckzktchc4002jokpcbtij4ybz","_id":"ckzktchc5002wokpc12g6ca7y"},{"post_id":"ckzktchbp000qokpc81kg22vt","tag_id":"ckzktchbz001sokpc3ona2d0c","_id":"ckzktchc60030okpc9evy8vg5"},{"post_id":"ckzktchbp000qokpc81kg22vt","tag_id":"ckzktchc5002qokpch00pb4a2","_id":"ckzktchc60032okpccbrx0t4h"},{"post_id":"ckzktchbs000uokpcb3ld5azo","tag_id":"ckzktchc5002tokpcfw0y4g98","_id":"ckzktchc60036okpcg0zif7vb"},{"post_id":"ckzktchbt000wokpc0nwrgijb","tag_id":"ckzktchc5002zokpca99471sm","_id":"ckzktchc7003bokpc94jiflvx"},{"post_id":"ckzktchbt000wokpc0nwrgijb","tag_id":"ckzktchbz001sokpc3ona2d0c","_id":"ckzktchc8003dokpc5tt6abwa"},{"post_id":"ckzktchbt0010okpc0h439q3x","tag_id":"ckzktchc5002zokpca99471sm","_id":"ckzktchc8003gokpc9xct468f"},{"post_id":"ckzktchbu0013okpc9euofrra","tag_id":"ckzktchc8003eokpc03creib3","_id":"ckzktchc9003kokpc897b5hss"},{"post_id":"ckzktchbv0016okpcbb990hf4","tag_id":"ckzktchc8003iokpcees6beoi","_id":"ckzktchc9003nokpc9fqufu3r"},{"post_id":"ckzktchbw0019okpc8wf62e37","tag_id":"ckzktchc9003mokpcgfgr3bej","_id":"ckzktchca003pokpc9hjwdle0"},{"post_id":"ckzktchbw001cokpc4fbtefkk","tag_id":"ckzktchc9003ookpca8c5cnz2","_id":"ckzktchca003rokpc7kfw8pnp"},{"post_id":"ckzktchbx001fokpcce6dbndw","tag_id":"ckzktchc8003eokpc03creib3","_id":"ckzktchca003tokpcca4t6suv"},{"post_id":"ckzktchbx001fokpcce6dbndw","tag_id":"ckzktchca003sokpc30mg908o","_id":"ckzktchca003uokpcengneng8"},{"post_id":"ckzktchcb003vokpc4dsh0a89","tag_id":"ckzktchbq000tokpchw1j2bfg","_id":"ckzktchcc003wokpc0mjgasd1"}],"Tag":[{"name":"CSS","_id":"ckzktchbh0005okpc5o7j3jec"},{"name":"开发技巧","_id":"ckzktchbk000cokpc9agg38q5"},{"name":"Echarts","_id":"ckzktchbl000hokpcfazccnn4"},{"name":"开发笔记","_id":"ckzktchbn000ookpc0zi9hbo0"},{"name":"Hexo","_id":"ckzktchbq000tokpchw1j2bfg"},{"name":"JavaScript","_id":"ckzktchbx001dokpc9f9qgwjp"},{"name":"正则","_id":"ckzktchby001kokpcetwh7cw0"},{"name":"Markdown","_id":"ckzktchbz001mokpcea8yc63x"},{"name":"handbook","_id":"ckzktchbz001qokpcaoe36g10"},{"name":"React","_id":"ckzktchbz001sokpc3ona2d0c"},{"name":"框架搭建","_id":"ckzktchc0001xokpc1pnvdg6o"},{"name":"creat-react-app","_id":"ckzktchc0001zokpchdpghqon"},{"name":"插件","_id":"ckzktchc20027okpc7la44rzm"},{"name":"react-codemirror2","_id":"ckzktchc3002bokpc7pz71asr"},{"name":"web","_id":"ckzktchc3002eokpc3bo10325"},{"name":"ThreeJS","_id":"ckzktchc4002jokpcbtij4ybz"},{"name":"encrypt","_id":"ckzktchc5002qokpch00pb4a2"},{"name":"ThreeJs","_id":"ckzktchc5002tokpcfw0y4g98"},{"name":"TypeScript","_id":"ckzktchc5002zokpca99471sm"},{"name":"nodeppt","_id":"ckzktchc8003eokpc03creib3"},{"name":"webpack","_id":"ckzktchc8003iokpcees6beoi"},{"name":"工具","_id":"ckzktchc9003mokpcgfgr3bej"},{"name":"微信小程序，开发笔记","_id":"ckzktchc9003ookpca8c5cnz2"},{"name":"PPT","_id":"ckzktchca003sokpc30mg908o"}]}}