<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>漫漫前端路</title>
  
  <subtitle>业精于勤，荒于嬉</subtitle>
  <link href="https://hushaoyu.github.io/atom.xml" rel="self"/>
  
  <link href="https://hushaoyu.github.io/"/>
  <updated>2022-01-23T08:21:20.262Z</updated>
  <id>https://hushaoyu.github.io/</id>
  
  <author>
    <name>跳过这片海</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React插件 - react-codemirror2</title>
    <link href="https://hushaoyu.github.io/2022/01/23/React%E6%8F%92%E4%BB%B6-react-codemirror2/"/>
    <id>https://hushaoyu.github.io/2022/01/23/React%E6%8F%92%E4%BB%B6-react-codemirror2/</id>
    <published>2022-01-23T01:42:36.000Z</published>
    <updated>2022-01-23T08:21:20.262Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul><li><code>react-codemirror2</code> 是基于 <code>CodeMirror</code> 工作原理，可以在React环境中直接使用的一个代码编辑器。<blockquote><p>&ensp;&ensp; <a href="https://codemirror.net/">CodeMirror</a> 是一个用 <code>JavaScript</code> 为浏览器实现的通用文本编辑器。它专门用于编辑代码，并带有多种语言模式和插件，可实现更高级的编辑功能。</p></blockquote></li></ul><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><ul><li>安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install react-codemirror2 codemirror --save</span><br></pre></td></tr></table></figure></li><li>组件：<code>UnControlled</code> 和 <code>Controlled</code><ul><li><code>react-codemirror2</code> 有两种组件，一种是由 <code>codemirror</code> 本身内部的工作原理提供功能支持，非受控的组件 <code>UnControlled</code>；一种是通过 <code>React</code> 的状态 <code>State</code> 来进行数据控制的受控组件 <code>Controlled</code>。</li></ul></li><li>文件说明</li></ul><p><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/plugins-files-desc.png" alt="文件目录"></p><table><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td>addon</td><td>可选的扩展功能配件</td></tr><tr><td>mode</td><td>编辑器当前支持的语言类型</td></tr><tr><td>src</td><td></td></tr><tr><td>theme</td><td>编辑器的样式主题</td></tr></tbody></table><ul><li>特性<ul><li>支持超过 <a href="https://codemirror.net/mode/index.html">100种</a> 开箱即用的语言</li><li>强大的、<a href="#%E9%A1%B5%E5%86%85%E8%B7%B3%E8%BD%AC">可组合</a> 的语言模式系统</li><li><a href="https://codemirror.net/doc/manual.html#addon_show-hint">代码提示，自动完成</a> 提示功能</li><li><a href="https://codemirror.net/doc/manual.html#addon_foldcode">代码折叠</a></li><li>可配置的 <a href="https://codemirror.net/doc/manual.html#option_extraKeys">快捷键绑定</a></li><li>可配置的，基于 <a href="https://codemirror.net/demo/vim.html">Vim</a> 、<a href="https://codemirror.net/demo/emacs.html">Emacs</a> 、<a href="https://codemirror.net/demo/sublime.html">Sublime Text</a> 的键映射绑定</li><li><a href="https://codemirror.net/doc/manual.html#addon_search">查找和替换</a> 操作界面</li><li><a href="https://codemirror.net/doc/manual.html#addon_matchbrackets">括号</a> 和 <a href="https://codemirror.net/doc/manual.html#addon_matchtags">标签</a> 匹配</li><li>支持 <a href="https://codemirror.net/demo/buffers.html">拆分视图</a></li><li>集成 <a href="https://codemirror.net/doc/manual.html#addon_lint">lint</a> 进行语法检测</li><li>可配置的 <a href="https://codemirror.net/demo/variableheight.html">字体大小和样式</a></li><li>大量的可配置 <a href="https://codemirror.net/demo/theme.html">主题</a></li><li>能够调整大小以 <a href="https://codemirror.net/demo/resize.html">自适应内容</a></li><li><a href="https://codemirror.net/doc/manual.html#mark_replacedWith">内联</a> 和 <a href="https://codemirror.net/doc/manual.html#mark_replacedWith">块级</a> 的小部件</li><li>文本标记：<a href="https://codemirror.net/doc/manual.html#mark_replacedWith">受控样式</a> 、<a href="https://codemirror.net/doc/manual.html#markText">只读</a> 、<a href="https://codemirror.net/doc/manual.html#markText">原子</a></li><li><a href="https://codemirror.net/demo/bidi.html">双向文本支持</a> ：<code>LRT</code>、<code>RTL</code></li><li><a href="#search-func">搜索</a></li></ul></li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><ul><li>文件引入<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;Controlled <span class="keyword">as</span> CodeMirror&#125; <span class="keyword">from</span> <span class="string">&#x27;react-codemirror2&#x27;</span>; <span class="comment">// 受控组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/lib/codemirror.css&#x27;</span>; <span class="comment">// 编辑器主体样式</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/theme/material-darker.css&#x27;</span>; <span class="comment">// 编辑器使用 material-darker 主题</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/mode/properties/properties.js&#x27;</span>; <span class="comment">// 编辑器代码语言支持：properties 配置文件</span></span><br></pre></td></tr></table></figure></li><li>组件配置<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">state = &#123;</span><br><span class="line">    <span class="attr">value</span>: _.get(<span class="built_in">this</span>.props, <span class="string">&#x27;initialValue&#x27;</span>, <span class="literal">undefined</span>),</span><br><span class="line">&#125;</span><br><span class="line">editorChange = <span class="function">(<span class="params">editor, data, value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 受控组件设置编辑器内容</span></span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;</span><br><span class="line">        value</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;CodeMirror</span><br><span class="line">    value=&#123;<span class="built_in">this</span>.state.value&#125;</span><br><span class="line">    options=&#123;&#123;</span><br><span class="line">        <span class="attr">width</span>: <span class="number">300</span>,</span><br><span class="line">        <span class="attr">mode</span>: <span class="string">&#x27;properties&#x27;</span>, <span class="comment">// 编辑器语言，需引入语言js文件</span></span><br><span class="line">        <span class="attr">theme</span>: <span class="string">&#x27;material-darker&#x27;</span>, <span class="comment">// 主题配置，需要引入主题样式文件</span></span><br><span class="line">        <span class="attr">lineNumbers</span>: <span class="literal">true</span>,        <span class="comment">// 显示行号</span></span><br><span class="line">    &#125;&#125;</span><br><span class="line">    onBeforeChange=&#123;<span class="built_in">this</span>.editorChange&#125;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/editor-demo.png" alt="预览"></li></ul><h4 id="可组合的语言模式"><a href="#可组合的语言模式" class="headerlink" title="可组合的语言模式"></a>可组合的语言模式</h4><ul><li>编辑器可配置显示多种语言，如常见的 <code>html</code> 文件，就包含三种语言： <code>html</code>、<code>JavaScript</code>、<code>css</code>。官方语言模式中，<code>html</code> 文件有一个内置的集成语言模式配置值： <code>htmlmixed</code><blockquote><p><code>html</code> 语言是基于 <code>xml</code> 语言来解析的，因此如果需要单独配置 <code>html</code> 语言支持，需要引入的是 <code>xml</code> 语言配置 <code>js</code> 文件</p></blockquote><ul><li>引入语言模式文件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/mode/htmlmixed/htmlmixed.js&#x27;</span>; <span class="comment">// 引入语言模式js文件</span></span><br></pre></td></tr></table></figure></li><li>修改配置中的 <code>mode</code> 属性<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">options=&#123;&#123;</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">300</span><span class="string">,</span></span><br><span class="line">  <span class="attr">mode:</span> <span class="string">&#x27;htmlmixed&#x27;</span><span class="string">,</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">&#x27;material-darker&#x27;</span><span class="string">,</span></span><br><span class="line">  <span class="attr">lineNumbers:</span> <span class="literal">true</span><span class="string">,</span>              <span class="string">//</span> <span class="string">显示行号</span></span><br><span class="line"><span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure></li><li>预览<ul><li>修改前<br><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/htmlmixed-none.png" alt="预览"></li><li>修改后<br><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/htmlmixed-able.png" alt="预览"></li></ul></li></ul></li></ul><h4 id="代码提示，自动完成"><a href="#代码提示，自动完成" class="headerlink" title="代码提示，自动完成"></a>代码提示，自动完成</h4><ul><li>目前插件支持的代码提示有 <code>html</code>、<code>JavaScript</code>、<code>css</code>、<code>xml</code>、<code>sql</code>，以及 <code>anyword</code>，<code>anyword</code> 指在当前文本输入光标附近查找相应的词语进行自动提示。</li><li>以 <code>sql</code> 为例，引入相应的 <code>css</code> 样式 及 <code>js</code> 脚本<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/hint/show-hint.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/mode/sql/sql.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/hint/show-hint.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/hint/sql-hint.js&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><code>option</code> 添加 <code>hintOptions</code> 配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">options=&#123;&#123;</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">300</span><span class="string">,</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">&#x27;sql&#x27;</span><span class="string">,</span></span><br><span class="line">    <span class="attr">theme:</span> <span class="string">&#x27;material-darker&#x27;</span><span class="string">,</span></span><br><span class="line">    <span class="attr">hintOptions:</span> &#123;</span><br><span class="line">        <span class="attr">completeSingle:</span> <span class="literal">false</span></span><br><span class="line">    &#125;<span class="string">,</span></span><br><span class="line">    <span class="attr">lineNumbers:</span> <span class="literal">true</span><span class="string">,</span>              <span class="string">//</span> <span class="string">显示行号</span></span><br><span class="line">    <span class="attr">styleActiveLine:</span> <span class="literal">true</span><span class="string">,</span>          <span class="string">//</span> <span class="string">选中行高亮</span></span><br><span class="line"><span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure></li><li>在 <code>onBeforeChange</code> 方法内调用 <code>.showHint()</code> 方法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">editorChange = <span class="function">(<span class="params">editor, data, value</span>) =&gt;</span> &#123;</span><br><span class="line">    editor.showHint();</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;</span><br><span class="line">        value</span><br><span class="line">    &#125;);</span><br><span class="line">    _.isFunction(<span class="built_in">this</span>.props.editorChange) &amp;&amp; <span class="built_in">this</span>.props.editorChange(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/hint-sql.gif" alt="预览"></li></ul><h4 id="代码折叠"><a href="#代码折叠" class="headerlink" title="代码折叠"></a>代码折叠</h4><ul><li>引入样式及脚本文件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 折叠</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/fold/foldgutter.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/fold/foldcode&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/fold/foldgutter&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/fold/brace-fold&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/fold/comment-fold&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><code>option</code> 添加配置<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">foldGutter: <span class="literal">true</span>, <span class="comment">// 支持折叠</span></span><br><span class="line"><span class="attr">lineWrapping</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">gutters</span>: [<span class="string">&#x27;CodeMirror-linenumbers&#x27;</span>, <span class="string">&#x27;CodeMirror-foldgutter&#x27;</span>, <span class="string">&#x27;CodeMirror-lint-markers&#x27;</span>],</span><br></pre></td></tr></table></figure><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/code-fold.gif" alt="预览"></li></ul><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a><span id='search-func'>搜索</span></h4><ul><li>引入样式及脚本文件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 搜索</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/scroll/annotatescrollbar.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/search/matchesonscrollbar.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/search/match-highlighter.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/search/jump-to-line.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/dialog/dialog.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/dialog/dialog.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/search/searchcursor.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/search/search.js&#x27;</span></span><br></pre></td></tr></table></figure></li><li>使用快捷键 <code>ctrl + F</code> 查找<br><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/search.gif" alt="预览"></li><li>支持的快捷键</li></ul><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td><code>ctrl + F</code></td><td>查找</td></tr><tr><td><code>ctrl + G</code></td><td>查找下一个</td></tr><tr><td><code>shift + ctrl + F</code></td><td>查找上一个</td></tr><tr><td><code>shift + ctrl + F</code></td><td>替换</td></tr><tr><td><code>shift + ctrl + R</code></td><td>替换全部</td></tr></tbody></table><ul><li>使用图形交互执行查找替换使用快捷键<blockquote><p>&ensp;&ensp;对于不习惯使用快捷键方式的用户，可以提供 <code>UI</code> 控件，来唤起查找对话框</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">editor = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">mounted = <span class="function"><span class="params">editor</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.editor = editor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">find = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.editor &amp;&amp; <span class="built_in">this</span>.editor.execCommand(<span class="string">&#x27;find&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;Row&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">Col</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.find&#125;</span>&gt;</span>查找<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">Col</span>&gt;</span></span></span><br><span class="line">&lt;/Row&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">CodeMirror</span> <span class="attr">editorDidMount</span>=<span class="string">&#123;this.mounted&#125;</span> <span class="attr">value</span>=<span class="string">&#123;this.state.value&#125;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/search-ui.gif" alt="预览"></li><li>其他相关指令用法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">findNext = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.editor &amp;&amp; <span class="built_in">this</span>.editor.execCommand(<span class="string">&#x27;findNext&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">findPrev = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.editor &amp;&amp; <span class="built_in">this</span>.editor.execCommand(<span class="string">&#x27;findPrev&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">replace = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.editor &amp;&amp; <span class="built_in">this</span>.editor.execCommand(<span class="string">&#x27;replace&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">replaceAll = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.editor &amp;&amp; <span class="built_in">this</span>.editor.execCommand(<span class="string">&#x27;replaceAll&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><a href="https://codemirror.net/doc/manual.html#commands">所有可用的指令</a></li></ul><h4 id="语法校验"><a href="#语法校验" class="headerlink" title="语法校验"></a>语法校验</h4><ul><li>插件目前支持语法校验有：<code>javaScript</code>、<code>coffeeScript</code>、<code>css</code>、<code>html</code>、<code>xml</code>、<code>json</code>，以下以 <code>JavaScript</code> 为例</li><li>引入样式及脚本文件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 语法错误提示</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/lint/lint.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/lint/lint.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;codemirror/addon/lint/javascript-lint.js&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><code>option</code> 内添加新的配置，启用检测<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lint:</span> <span class="literal">true</span><span class="string">,</span></span><br></pre></td></tr></table></figure></li><li>启动项目，发现语法检测并没生效，并且控制台报 <code>JSHINT</code> 相关的错误<br><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javaScript-lint-unwork.png" alt="预览"></li><li>查找资料，发现插件内的 <code>JavaScript</code> 检测依赖第三方插件 <code>jslint</code>，因此需要在项目中安装该插件，并全局设置该变量<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install jslint --save</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; JSHINT &#125; <span class="keyword">from</span> <span class="string">&quot;jshint&quot;</span>;</span><br><span class="line"><span class="built_in">window</span>.JSHINT = JSHINT;</span><br></pre></td></tr></table></figure></li><li>重新启动项目，可以看到 <code>JavaScript</code> 语法检测生效了<br><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javascript-lint-success.gif" alt="预览"></li><li>配合 <code>React</code> 的 <code>state</code> 设置，在出现语法错误时，不允许提交<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">state = &#123;</span><br><span class="line">  <span class="attr">value</span>: _.get(<span class="built_in">this</span>.props, <span class="string">&#x27;initialValue&#x27;</span>, <span class="literal">undefined</span>),</span><br><span class="line">  <span class="attr">validFlag</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">editorChange = <span class="function">(<span class="params">editor, data, value</span>) =&gt;</span> &#123;</span><br><span class="line">    editor.showHint();</span><br><span class="line">    <span class="comment">// 获取校验状态</span></span><br><span class="line">    <span class="keyword">const</span> validFlag = <span class="built_in">this</span>.validCheck(_.get(editor, <span class="string">&#x27;state.lint.marked&#x27;</span>, []));</span><br><span class="line">    <span class="built_in">this</span>.setState(&#123;</span><br><span class="line">        value,</span><br><span class="line">        validFlag</span><br><span class="line">    &#125;);</span><br><span class="line">    _.isFunction(<span class="built_in">this</span>.props.editorChange) &amp;&amp; <span class="built_in">this</span>.props.editorChange(value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 根据类名判断是否出现错误语法</span></span><br><span class="line">validCheck = <span class="function">(<span class="params">marks</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (_.isEmpty(marks)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">const</span> errorFlag = _.isArray(marks) &amp;&amp; marks.findIndex(<span class="function"><span class="params">item</span> =&gt;</span> item.className.indexOf(<span class="string">&#x27;error&#x27;</span>) &gt;= <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">return</span> errorFlag &lt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/React%E6%8F%92%E4%BB%B6%20-%20react-codemirror2/javascript-lint-state.gif" alt="预览"></li></ul><h4 id="代码合并"><a href="#代码合并" class="headerlink" title="代码合并"></a>代码合并</h4><ul><li><a href="https://github.com/scniro/react-codemirror2/issues/123">参考文档</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;react-codemirror2&lt;/code&gt; 是基于 &lt;code&gt;CodeMirror&lt;/code&gt; 工作原理，可以在React环境中直接使用的一个代码编辑器。&lt;blockquote&gt;
&lt;p&gt;&amp;ensp;&amp;ensp; &lt;a href=&quot;https://codemirror.net/&quot;&gt;CodeMirror&lt;/a&gt; 是一个用 &lt;code&gt;JavaScript&lt;/code&gt; 为浏览器实现的通用文本编辑器。它专门用于编辑代码，并带有多种语言模式和插件，可实现更高级的编辑功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;开始&quot;&gt;&lt;a href=&quot;#开始&quot; class=&quot;headerlink&quot; title=&quot;开始&quot;&gt;&lt;/a&gt;开始&lt;/h4&gt;</summary>
    
    
    
    <category term="React" scheme="https://hushaoyu.github.io/categories/React/"/>
    
    <category term="插件" scheme="https://hushaoyu.github.io/categories/React/%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="React" scheme="https://hushaoyu.github.io/tags/React/"/>
    
    <category term="插件" scheme="https://hushaoyu.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="react-codemirror2" scheme="https://hushaoyu.github.io/tags/react-codemirror2/"/>
    
  </entry>
  
  <entry>
    <title>Echarts - 开发笔记</title>
    <link href="https://hushaoyu.github.io/2022/01/18/Echarts-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    <id>https://hushaoyu.github.io/2022/01/18/Echarts-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/</id>
    <published>2022-01-18T06:49:12.000Z</published>
    <updated>2022-01-18T09:28:09.764Z</updated>
    
    <content type="html"><![CDATA[<h4 id="更新渲染会残留之前的数据"><a href="#更新渲染会残留之前的数据" class="headerlink" title="更新渲染会残留之前的数据"></a>更新渲染会残留之前的数据</h4><ul><li>在 <code>setOption</code> 时添加一个额外的参数 <code>true</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.chart.setOption(<span class="built_in">this</span>.option, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><ul><li><code>setOption</code> 参数说明请参考 <a href="https://echarts.apache.org/zh/api.html#echartsInstance.setOption">文档</a></li></ul></li></ul><h4 id="全屏显示图表"><a href="#全屏显示图表" class="headerlink" title="全屏显示图表"></a>全屏显示图表</h4><ul><li>全屏、退出全屏<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//全屏显示</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">fullScreen</span>(<span class="params">ele</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> element = ele || <span class="built_in">document</span>.documentElement;</span><br><span class="line">    <span class="keyword">if</span> (element.requestFullscreen) &#123;</span><br><span class="line">        element.requestFullscreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.msRequestFullscreen) &#123;</span><br><span class="line">        element.msRequestFullscreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.mozRequestFullScreen) &#123;</span><br><span class="line">        element.mozRequestFullScreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.webkitRequestFullscreen) &#123;</span><br><span class="line">        element.webkitRequestFullscreen();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//退出全屏</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">exitFullscreen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.exitFullscreen) &#123;</span><br><span class="line">        <span class="built_in">document</span>.exitFullscreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.msExitFullscreen) &#123;</span><br><span class="line">        <span class="built_in">document</span>.msExitFullscreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.mozCancelFullScreen) &#123;</span><br><span class="line">        <span class="built_in">document</span>.mozCancelFullScreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.webkitExitFullscreen) &#123;</span><br><span class="line">        <span class="built_in">document</span>.webkitExitFullscreen();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>触发<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">handle = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.chart) &#123;</span><br><span class="line">        fullScreen(<span class="built_in">this</span>.chart._dom.parentElement);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>全屏状态下，背景色设置<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//各个浏览器下 全屏状态下背景色设置</span></span><br><span class="line">:<span class="selector-tag">-webkit-full-screen</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: $content-bg <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line">:<span class="selector-tag">-moz-full-screen</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: $content-bg <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">:<span class="selector-tag">-ms-fullscreen</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: $content-bg <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:fullscreen</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: $content-bg <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="折线图需求：同一天内可能存在一条、两条或者三条数据"><a href="#折线图需求：同一天内可能存在一条、两条或者三条数据" class="headerlink" title="折线图需求：同一天内可能存在一条、两条或者三条数据"></a>折线图需求：同一天内可能存在一条、两条或者三条数据</h4><ul><li>构造X轴数据、配置axisLabel及axisTick及formatter<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">option</span> <span class="string">=</span> &#123;</span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="attr">xAxis:</span> [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">...</span></span><br><span class="line">            <span class="attr">axisTick:</span> &#123;</span><br><span class="line">              <span class="attr">interval:</span> <span class="string">(index</span>, <span class="string">indexName)</span> <span class="string">=&gt;</span> <span class="string">indexName.length</span> <span class="string">&lt;</span> <span class="number">11</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">axisLabel:</span> &#123;</span><br><span class="line">                <span class="attr">interval:</span> <span class="string">(index</span>, <span class="string">indexName)</span> <span class="string">=&gt;</span> <span class="string">indexName.length</span> <span class="string">&lt;</span> <span class="number">11</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">data:</span> [</span><br><span class="line">                <span class="string">&#x27;2009/6/12&#x27;</span>, <span class="string">&#x27;2009/6/12 12&#x27;</span>, <span class="string">&#x27;2009/6/12 12&#x27;</span>, </span><br><span class="line">                <span class="string">&#x27;2009/6/13&#x27;</span>, <span class="string">&#x27;2009/6/13 12&#x27;</span>, <span class="string">&#x27;2009/6/14&#x27;</span>],</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">series:</span> [</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="string">...</span></span><br><span class="line">                <span class="attr">data:</span> [</span><br><span class="line">                  <span class="number">3.75</span>,<span class="number">3.75</span>,<span class="number">5.66</span>,<span class="number">6.95</span>,<span class="number">0.95</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,</span><br><span class="line">                  <span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,</span><br><span class="line">                  <span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,</span><br><span class="line">                  <span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>,<span class="number">0.94</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;<span class="string">;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="自定义触发行为"><a href="#自定义触发行为" class="headerlink" title="自定义触发行为"></a>自定义触发行为</h4><ul><li>手动缩放 <code>dataZoom</code><ul><li>单个缩放<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">myChart.dispatchAction(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;dataZoom&#x27;</span>,</span><br><span class="line">    <span class="attr">start</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">end</span>: <span class="number">30</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>批量缩放<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">myChart.dispatchAction(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;dataZoom&#x27;</span>,</span><br><span class="line">    <span class="attr">batch</span>: [&#123;</span><br><span class="line">        <span class="comment">// 第一个 dataZoom 组件</span></span><br><span class="line">        <span class="attr">start</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="attr">end</span>: <span class="number">30</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="comment">// 第二个 dataZoom 组件</span></span><br><span class="line">        <span class="attr">dataZoomIndex</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">start</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">end</span>: <span class="number">20</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li>轮播高亮显示<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">getEchart = <span class="function">(<span class="params">chart</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (chart &amp;&amp; _.isFunction(chart) &amp;&amp; !<span class="built_in">this</span>.timer) &#123;</span><br><span class="line">        <span class="keyword">const</span> instance = chart();</span><br><span class="line">        <span class="comment">// 记录当前轮播的数据索引</span></span><br><span class="line">        <span class="keyword">let</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 用户鼠标 hover 时，停止轮播</span></span><br><span class="line">            !<span class="built_in">this</span>.state.hovered &amp;&amp; instance &amp;&amp;instance.dispatchAction(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;showTip&#x27;</span>,</span><br><span class="line">                <span class="attr">seriesIndex</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">dataIndex</span>: index</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">// 用户鼠标 hover 时，停止轮播数据项计数，hover交互移除后，继续当前索引进行轮播</span></span><br><span class="line">            !<span class="built_in">this</span>.state.hovered &amp;&amp; index++;</span><br><span class="line">            <span class="keyword">if</span> (index &gt; <span class="built_in">this</span>.state.list.length - <span class="number">1</span>) &#123;</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/dispaction_highlight.gif" alt="预览"></li></ul><h4 id="饼图内标题文字自适应显示"><a href="#饼图内标题文字自适应显示" class="headerlink" title="饼图内标题文字自适应显示"></a>饼图内标题文字自适应显示</h4><ul><li><code>options</code> 配置，动态设置字体大小<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">title: [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">text</span>: _.get(<span class="built_in">this</span>.state, <span class="string">`chartData.<span class="subst">$&#123;day&#125;</span>`</span>, <span class="number">0</span>),</span><br><span class="line">        <span class="attr">top</span>: <span class="string">&#x27;32%&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>: <span class="string">&quot;center&quot;</span>,</span><br><span class="line">        <span class="attr">textStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#FF0014&#x27;</span>,</span><br><span class="line">            <span class="attr">fontSize</span>: <span class="built_in">this</span>.getFontSize(_.get(<span class="built_in">this</span>.state, <span class="string">`chartData.<span class="subst">$&#123;day&#125;</span>`</span>, <span class="number">0</span>)),</span><br><span class="line">            <span class="attr">fontWeight</span>: <span class="number">600</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li>获取自适应后的字体大小<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">getFontSize = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> screenWidth = <span class="built_in">document</span>.body.clientWidth;</span><br><span class="line">    <span class="keyword">let</span> fontSize = <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">const</span> valueLength = _.isNumber(value) &amp;&amp; value.toString().length;</span><br><span class="line">    <span class="keyword">if</span> (screenWidth &gt;= <span class="number">1900</span>) &#123;</span><br><span class="line">        fontSize = <span class="built_in">this</span>.generateSize(<span class="number">120</span>, valueLength);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (screenWidth &lt; <span class="number">1920</span> &amp;&amp; screenWidth &gt;= <span class="number">1660</span>) &#123;</span><br><span class="line">        fontSize = <span class="built_in">this</span>.generateSize(<span class="number">100</span>, valueLength);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (screenWidth &lt; <span class="number">1680</span> &amp;&amp; screenWidth &gt;= <span class="number">1400</span>) &#123;</span><br><span class="line">        fontSize = <span class="built_in">this</span>.generateSize(<span class="number">80</span>, valueLength);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fontSize;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>限定字体大小范围<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">generateSize = <span class="function">(<span class="params">size, length</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> fontSize = <span class="built_in">Math</span>.ceil(size / length);</span><br><span class="line">    <span class="keyword">if</span> (fontSize &gt; <span class="number">26</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">26</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fontSize &lt; <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">8</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> fontSize;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/pie_title_autoSize.png" alt="预览"></li></ul><h4 id="根据y轴刻度标签文本动态设置边距"><a href="#根据y轴刻度标签文本动态设置边距" class="headerlink" title="根据y轴刻度标签文本动态设置边距"></a>根据y轴刻度标签文本动态设置边距</h4><ul><li>获取Y轴文本长度最长的一项<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> maxLabel = _.get(yData.slice().sort(<span class="function">(<span class="params">pre, next</span>) =&gt;</span> computedTextWidth(next) - computedTextWidth(pre)), <span class="string">&#x27;[0]&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><code>options</code> 配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">grid:</span> &#123;</span><br><span class="line">    <span class="attr">borderWidth:</span> <span class="number">0</span>,</span><br><span class="line">    <span class="attr">top:</span> <span class="number">15</span>,</span><br><span class="line">    <span class="attr">bottom:</span> <span class="number">20</span>,</span><br><span class="line">    <span class="attr">right:</span> <span class="string">computedTextWidth(maxValue)</span> <span class="string">+</span> <span class="number">18</span>,</span><br><span class="line">    <span class="attr">left:</span> <span class="string">computedTextWidth(maxLabel</span>, <span class="number">12</span>, <span class="literal">true</span><span class="string">)</span> <span class="string">+</span> <span class="number">18</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>计算文本长度工具方法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description </span>计算字符串在浏览器中显示的宽度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>text &#123;string|number&#125; 需要计算的文本</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>fontSize &#123;number&#125; 文本字体大小</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>overflowFlag &#123;boolean&#125; 是否超长省略显示</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> computedTextWidth = <span class="function">(<span class="params">text, fontSize = <span class="number">12</span>, overflowFlag</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> span = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;computedTextWidth&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!span) &#123;</span><br><span class="line">        span = <span class="built_in">document</span>.createElement(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">        span.id = <span class="string">&#x27;computedTextWidth&#x27;</span>;</span><br><span class="line">        span.style.cssText = <span class="string">&#x27;visibility:hidden;position: absolute;left: -999em;top:-999em;&#x27;</span>;</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(span);</span><br><span class="line">    &#125;</span><br><span class="line">    span.style.fontSize = <span class="string">`<span class="subst">$&#123;fontSize&#125;</span>px`</span>;</span><br><span class="line">    <span class="comment">// 如果设置超长省略显示，则超出8个字符串后，接省略号显示</span></span><br><span class="line">    span.innerHTML = overflowFlag &amp;&amp; _.isString(text) &amp;&amp; text.length &gt; <span class="number">8</span> ? <span class="string">`<span class="subst">$&#123;text.slice(<span class="number">0</span>, <span class="number">8</span>)&#125;</span>...`</span> : text;</span><br><span class="line">    <span class="keyword">return</span> span.offsetWidth;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/Y_label_overflow.png" alt="预览"></li></ul><h4 id="legend-文本过长换行显示"><a href="#legend-文本过长换行显示" class="headerlink" title="legend 文本过长换行显示"></a><code>legend</code> 文本过长换行显示</h4><ul><li><code>legend</code> 配置项设置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">legend:</span> &#123;</span><br><span class="line">          <span class="string">top:&#x27;20%&#x27;</span>,</span><br><span class="line">          <span class="string">width:222</span>,</span><br><span class="line">          <span class="string">right:30</span>,</span><br><span class="line">          <span class="attr">orient:</span> <span class="string">&#x27;vertical&#x27;</span>,</span><br><span class="line">          <span class="attr">type:</span> <span class="string">&#x27;scroll&#x27;</span>,</span><br><span class="line">          <span class="attr">data:</span> <span class="string">this.props.userList</span>,</span><br><span class="line">          <span class="attr">formatter:</span> <span class="string">function</span> <span class="string">(params)</span> &#123;</span><br><span class="line">            <span class="string">return</span> <span class="string">formatterLegendText(params);</span></span><br><span class="line">          &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>工具方法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 格式化legend 文本过长换行显示</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params</span>:</span></span><br><span class="line"><span class="comment"> *  params: 文本</span></span><br><span class="line"><span class="comment"> *  provideNumber: 每一行要显示的文本字数</span></span><br><span class="line"><span class="comment"> *  rows: 指定最多显示多少行</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> formatterLegendText = <span class="function">(<span class="params">params, provideNumber = <span class="number">17</span>, rows</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//超过十个字符就换行展示</span></span><br><span class="line">    <span class="keyword">let</span> newParamsName = <span class="string">&quot;&quot;</span>;<span class="comment">// 最终拼接成的字符串</span></span><br><span class="line">    <span class="keyword">const</span> paramsNameNumber = params.length;<span class="comment">// 实际标签的个数</span></span><br><span class="line">    <span class="comment">// const provideNumber = 17;// 每行能显示的字的个数</span></span><br><span class="line">    <span class="keyword">const</span> maxRows = <span class="built_in">Math</span>.ceil(paramsNameNumber / provideNumber);<span class="comment">// 换行的话，需要显示几行，向上取整;</span></span><br><span class="line">    <span class="keyword">let</span> rowNumber = rows || maxRows;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 条件等同于rowNumber&gt;1</span></span><br><span class="line">    <span class="keyword">if</span> (paramsNameNumber &gt; provideNumber) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> p = <span class="number">0</span>; p &lt; rowNumber; p += <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> tempStr = <span class="string">&quot;&quot;</span>;<span class="comment">// 表示每一次截取的字符串</span></span><br><span class="line">            <span class="keyword">let</span> start = p * provideNumber;<span class="comment">// 开始截取的位置</span></span><br><span class="line">            <span class="keyword">let</span> end = start + provideNumber;<span class="comment">// 结束截取的位置</span></span><br><span class="line">            <span class="comment">// 此处特殊处理最后一行的索引值</span></span><br><span class="line">            <span class="keyword">if</span> (p == rowNumber - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// 最后一次不换行</span></span><br><span class="line">                tempStr = params.substring(start, paramsNameNumber);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 每一次拼接字符串并换行</span></span><br><span class="line">                tempStr = params.substring(start, end) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            newParamsName += tempStr;<span class="comment">// 最终拼成的字符串</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 将旧标签的值赋给新标签</span></span><br><span class="line">        newParamsName = params;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rows &amp;&amp; rows &lt; maxRows) &#123;</span><br><span class="line">        newParamsName += <span class="string">&#x27;...&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将最终的字符串返回</span></span><br><span class="line">    <span class="keyword">return</span> newParamsName</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/legend_wrap.png" alt="预览"></li></ul><h4 id="将某个省份地区，切割成两部分显示"><a href="#将某个省份地区，切割成两部分显示" class="headerlink" title="将某个省份地区，切割成两部分显示"></a>将某个省份地区，切割成两部分显示</h4><ul><li>引入完整天津地图<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> chinaCity <span class="keyword">from</span> <span class="string">&#x27;echarts/map/json/province/tianjin.json&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>通过地区代码定义需要分割的副地图区域数据<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subMapArea = [<span class="string">&#x27;120101&#x27;</span>,<span class="string">&#x27;120102&#x27;</span>,<span class="string">&#x27;120103&#x27;</span>,<span class="string">&#x27;120104&#x27;</span>,<span class="string">&#x27;120105&#x27;</span>,<span class="string">&#x27;120106&#x27;</span>];</span><br></pre></td></tr></table></figure></li><li>通过区域数据，将完整地图json数据划分为两份地图数据，并注册地图名称<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">componentWillMount</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> mainMap = _.cloneDeep(chinaCity);</span><br><span class="line">    <span class="keyword">const</span> subMap = _.cloneDeep(chinaCity);</span><br><span class="line">    <span class="keyword">const</span> mainFeatures = [], subFeatures = [];</span><br><span class="line">    chinaCity.features.map(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.subMapArea.indexOf(item.id) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            mainFeatures.push(_.cloneDeep(item));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            subFeatures.push(_.cloneDeep(item));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    mainMap.features = _.cloneDeep(mainFeatures);</span><br><span class="line">    subMap.features = _.cloneDeep(subFeatures);</span><br><span class="line">    echarts.registerMap(<span class="string">&#x27;mainMap&#x27;</span>, mainMap);</span><br><span class="line">    echarts.registerMap(<span class="string">&#x27;subMap&#x27;</span>, subMap);</span><br><span class="line">    mainMap.features.map(<span class="function">(<span class="params">&#123;properties: &#123;cp = [], name = <span class="string">&#x27;&#x27;</span>&#125;, id&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.geoCoordMap[name] = cp.slice();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    subMap.features.map(<span class="function">(<span class="params">&#123;properties: &#123;cp = [], name = <span class="string">&#x27;&#x27;</span>&#125;, id&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.subGeoCoordMap[name] = cp.slice();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在各自的option中geo的定义中，使用不同的地图名称显示地图轮廓<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">geo:</span> [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">map:&#x27;mainMap&#x27;</span>,</span><br><span class="line">    <span class="string">...</span></span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Echarts%20-%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/subMap.png" alt="预览"></li></ul>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;更新渲染会残留之前的数据&quot;&gt;&lt;a href=&quot;#更新渲染会残留之前的数据&quot; class=&quot;headerlink&quot; title=&quot;更新渲染会残留之前的数据&quot;&gt;&lt;/a&gt;更新渲染会残留之前的数据&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;setOption&lt;/code&gt; 时添加一个额外的参数 &lt;code&gt;true&lt;/code&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.chart.setOption(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.option, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setOption&lt;/code&gt; 参数说明请参考 &lt;a href=&quot;https://echarts.apache.org/zh/api.html#echartsInstance.setOption&quot;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;全屏显示图表&quot;&gt;&lt;a href=&quot;#全屏显示图表&quot; class=&quot;headerlink&quot; title=&quot;全屏显示图表&quot;&gt;&lt;/a&gt;全屏显示图表&lt;/h4&gt;</summary>
    
    
    
    <category term="Echarts" scheme="https://hushaoyu.github.io/categories/Echarts/"/>
    
    
    <category term="Echarts" scheme="https://hushaoyu.github.io/tags/Echarts/"/>
    
    <category term="开发笔记" scheme="https://hushaoyu.github.io/tags/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序 - 开发笔记</title>
    <link href="https://hushaoyu.github.io/2022/01/17/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    <id>https://hushaoyu.github.io/2022/01/17/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/</id>
    <published>2022-01-17T06:13:12.000Z</published>
    <updated>2022-01-17T08:21:58.424Z</updated>
    
    <content type="html"><![CDATA[<h4 id="data-指令"><a href="#data-指令" class="headerlink" title="data-* 指令"></a><code>data-*</code> 指令</h4><blockquote><p>用于将 <code>wxml</code> 页面的数据传递至后台 <code>js</code></p></blockquote><ul><li><code>wxml</code> 代码<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;container&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;nav_left&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;navLeftItems&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;nav_left_items&#x27;</span> <span class="attr">bindtap</span>=<span class="string">&#x27;switchItem&#x27;</span> <span class="attr">data-id</span>=<span class="string">&quot;&#123;&#123;item.id&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;item.categoryName&#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><code>js</code> 代码：通过 <code>event</code> 参数获取需要传递的 <code>data-*</code> 参数<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">switchItem: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(event.target.dataset.id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="路由跳转方式及区别"><a href="#路由跳转方式及区别" class="headerlink" title="路由跳转方式及区别"></a>路由跳转方式及区别</h4><ul><li><p><code>wx.switchTab</code></p><ul><li>跳转至 <code>tabBar</code> 页面，并关闭其他非 <code>tabBar</code> 页面</li><li>参数说明<table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td><code>url</code></td><td>string</td><td>/</td><td>是</td><td>需要跳转的 <code>tabBar</code> 页面的路径（需在 <code>app.json</code> 的 <code>tabBar</code> 字段定义的页面），<span style="color:red;">路径后不能带参数</span>（传参可用全局变量）</td></tr><tr><td><code>success</code></td><td>function</td><td>/</td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td><code>fail</code></td><td>function</td><td>/</td><td>否</td><td>接口调用失败的回调函数</td></tr><tr><td><code>complete</code></td><td>function</td><td>/</td><td>否</td><td>接口调用结束的回调函数（无论成功或失败，都会执行）</td></tr></tbody></table></li><li>代码示例<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跳转</span></span><br><span class="line">wx.switchTab(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/pages/catagory/catagory&#x27;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>wx.navigationTo</code></p><ul><li><p><span style="color:red;">保留当前页面</span>，跳转至应用内的某个页面。但是<span style="color:red;">不能跳转至 <code>tabBar</code> 页面。</span>调用此方法，页面会被加入堆栈，可以使用 <code>wx.navigateBack</code> 执行返回上一页操作。</p></li><li><p>参数说明</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td><code>url</code></td><td>string</td><td>/</td><td>是</td><td>需要跳转的应用内非 <code>tabBar</code> 的页面的路径, 路径后可以带参数。参数与路径之间使用 <code>?</code> 分隔，参数键与参数值用 <code>=</code> 相连，不同参数用 <code>&amp;</code> 分隔；如 <code>path?key=value&amp;key2=value2</code></td></tr><tr><td><code>events</code></td><td>object</td><td>/</td><td>否</td><td>页面间通信接口，用于监听被打开页面发送到当前页面的数据。基础库 <code>2.7.3</code> 开始支持</td></tr><tr><td><code>success</code></td><td>function</td><td>/</td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td><code>fail</code></td><td>function</td><td>/</td><td>否</td><td>接口调用失败的回调函数</td></tr><tr><td><code>complete</code></td><td>function</td><td>/</td><td>否</td><td>接口调用结束的回调函数（无论成功或失败，都会执行）</td></tr></tbody></table></li><li><p>代码示例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跳转</span></span><br><span class="line"><span class="attr">confirmSearch</span>: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    wx.navigateTo(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/pages/product_list/product_list?name=<span class="subst">$&#123;event.detail.value&#125;</span>`</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 参数接收</span></span><br><span class="line"><span class="attr">onLoad</span>: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> searchName = options.name || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>wx.redirectTo</code></p><ul><li><p><span style="color:red;">关闭当前页面</span>，跳转至应用内的某个页面。但是<span style="color:red;">不能跳转至 <code>tabBar</code> 页面。</span>调用此方法，页面不会被加入堆栈，无法使用 <code>wx.navigateBack</code> 执行返回上一页操作。</p></li><li><p>参数说明</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td><code>url</code></td><td>string</td><td>/</td><td>是</td><td>需要跳转的应用内非 <code>tabBar</code> 的页面的路径, 路径后可以带参数。参数与路径之间使用 <code>?</code> 分隔，参数键与参数值用 <code>=</code> 相连，不同参数用 <code>&amp;</code> 分隔；如 <code>path?key=value&amp;key2=value2</code></td></tr><tr><td><code>success</code></td><td>function</td><td>/</td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td><code>fail</code></td><td>function</td><td>/</td><td>否</td><td>接口调用失败的回调函数</td></tr><tr><td><code>complete</code></td><td>function</td><td>/</td><td>否</td><td>接口调用结束的回调函数（无论成功或失败，都会执行）</td></tr></tbody></table></li><li><p>使用方法与 <code>wx.navigateTo</code> 类似</p></li></ul></li><li><p><code>wx.navigateBack</code></p><ul><li><p>关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages 获取当前的页面栈，决定需要返回几层</p></li><li><p>参数说明</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td><code>delta</code></td><td>number</td><td>/</td><td>是</td><td>返回的页面数，如果 <code>delta</code> 大于现有页面数，则返回到首页</td></tr><tr><td><code>success</code></td><td>function</td><td>/</td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td><code>fail</code></td><td>function</td><td>/</td><td>否</td><td>接口调用失败的回调函数</td></tr><tr><td><code>complete</code></td><td>function</td><td>/</td><td>否</td><td>接口调用结束的回调函数（无论成功或失败，都会执行）</td></tr></tbody></table></li><li><p>代码示例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 此处是A页面</span></span><br><span class="line">wx.navigateTo(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;B?id=1&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 此处是B页面</span></span><br><span class="line">wx.navigateTo(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;C?id=1&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 在C页面内 navigateBack，将返回A页面</span></span><br><span class="line">wx.navigateBack(&#123;</span><br><span class="line">    <span class="attr">delta</span>: <span class="number">2</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>wx.reLaunch</code></p><ul><li><p>关闭所有页面，打开到应用内的某个页面</p></li><li><p>参数说明</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td><code>url</code></td><td>string</td><td>/</td><td>是</td><td>需要跳转的页面的路径, 路径后可以带参数。参数与路径之间使用 <code>?</code> 分隔，参数键与参数值用 <code>=</code> 相连，不同参数用 <code>&amp;</code> 分隔；如 <code>path?key=value&amp;key2=value2</code></td></tr><tr><td><code>success</code></td><td>function</td><td>/</td><td>否</td><td>接口调用成功的回调函数</td></tr><tr><td><code>fail</code></td><td>function</td><td>/</td><td>否</td><td>接口调用失败的回调函数</td></tr><tr><td><code>complete</code></td><td>function</td><td>/</td><td>否</td><td>接口调用结束的回调函数（无论成功或失败，都会执行）</td></tr></tbody></table></li></ul></li></ul><h4 id="wxml-中使用三目运算符"><a href="#wxml-中使用三目运算符" class="headerlink" title="wxml 中使用三目运算符"></a><code>wxml</code> 中使用三目运算符</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123;activeFilterName===&#x27;sale&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&#x27;onClickFilter&#x27;</span> <span class="attr">data-name</span>=<span class="string">&#x27;sale&#x27;</span>&gt;</span>销量<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123;activeFilterName===&#x27;new_product&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&#x27;onClickFilter&#x27;</span> <span class="attr">data-name</span>=<span class="string">&#x27;new_product&#x27;</span>&gt;</span>新品<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123;activeFilterName===&#x27;high_praise&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&#x27;onClickFilter&#x27;</span> <span class="attr">data-name</span>=<span class="string">&#x27;high_praise&#x27;</span>&gt;</span>好评<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123;activeFilterName===&#x27;price&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&#x27;onClickFilter&#x27;</span> <span class="attr">data-name</span>=<span class="string">&#x27;price&#x27;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="设置和获取全局变量"><a href="#设置和获取全局变量" class="headerlink" title="设置和获取全局变量"></a>设置和获取全局变量</h4><blockquote><p><code>getApp()</code> 是一个全局函数，在应用内所有页面可以使用。</p></blockquote><ul><li>设置<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户自定义方法</span></span><br><span class="line"><span class="attr">hotItemClick</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    getApp().globalData.activeItemName = event.currentTarget.dataset.name;</span><br><span class="line">    getApp().globalData.activeItemIndex = event.currentTarget.dataset.index;</span><br><span class="line">    wx.switchTab(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/pages/catagory/catagory&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>获取<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.getCategory();</span><br><span class="line">    <span class="keyword">const</span> activeItemName = getApp().globalData.activeItemName;</span><br><span class="line">    <span class="keyword">const</span> activeItemIndex = getApp().globalData.activeItemIndex;</span><br><span class="line">    <span class="keyword">if</span> (activeItemName &amp;&amp; activeItemIndex) &#123;</span><br><span class="line">      <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">        <span class="attr">activeItem</span>: activeItemName,</span><br><span class="line">        <span class="attr">activeIndex</span>: activeItemIndex,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="页面设置背景色"><a href="#页面设置背景色" class="headerlink" title="页面设置背景色"></a>页面设置背景色</h4><ul><li><code>wxss</code> 配置<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">page</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eaeaea</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="隐藏与显示元素"><a href="#隐藏与显示元素" class="headerlink" title="隐藏与显示元素"></a>隐藏与显示元素</h4><ul><li><code>wx:if</code><ul><li><code>showClass</code> 为 <code>true</code> 时显示，为 <code>false</code> 时隐藏。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;official_wrapper&#x27;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;showClass&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">official-account</span> <span class="attr">class</span>=<span class="string">&quot;official&quot;</span> <span class="attr">bindload</span>=<span class="string">&quot;loadOfficial&quot;</span> <span class="attr">binderror</span>=<span class="string">&quot;errorOfficial&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">official-account</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><code>hidden</code><ul><li><code>faceShow</code> 为 <code>true</code> 时显示，为 <code>false</code> 时隐藏。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">hidden</span>=<span class="string">&quot;&#123;&#123;faceShow&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;toFace&quot;</span>&gt;</span>人脸识别<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li>区别<ul><li><code>wx:if</code> 在隐藏的时候，元素会被销毁不渲染，而 <code>hidden</code> 在隐藏时仍然渲染，只是不呈现。</li><li>因此出于对性能的考虑，如果该元素需要频繁的进行显示隐藏操作，则选择使用 <code>hidden</code> 属性进行控制。如果该元素只在初始化的时候需要设置其是否显示，则使用 <code>wx:if</code> 进行处理。</li></ul></li></ul><h4 id="阿里云OSS图片缩略图"><a href="#阿里云OSS图片缩略图" class="headerlink" title="阿里云OSS图片缩略图"></a>阿里云OSS图片缩略图</h4><ul><li>使用方法<ul><li>图片路径后面拼接如下路径：<ul><li>格式：<code>?x-oss-process=image/[处理类型],x_100,y_50[宽高等参数]</code></li><li>示例：<code>?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0</code></li></ul></li></ul></li><li>原图<ul><li><code>https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png</code><br><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png" alt="原图"></li></ul></li><li>缩略图<ul><li><code>https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0</code><br><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png?x-oss-process=image/resize,m_fill,h_100,w_200,limit_0" alt="原图"></li></ul></li><li><i class="fa fa-link"></i> <a href="https://help.aliyun.com/document_detail/44688.html">参考文档</a></li></ul><h4 id="阿里云OSS视频预览图"><a href="#阿里云OSS视频预览图" class="headerlink" title="阿里云OSS视频预览图"></a>阿里云OSS视频预览图</h4><ul><li><code>OSS</code> 提供的视频截帧功能和 <code>OSS</code> 图片服务功能使用的方式是类似的，都是通过传入 <code>x-oss-process</code> 参数的方式来实现的。最简单的使用方式就是直接在 <code>url</code> 后面拼接处理字符串。比如如下的 <code>url</code>：<br><code>http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast</code><br><img src="http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast" alt="预览图"><ul><li>指定的就是对 <code>demo.mp4</code> 这个文件直接调用视频截图，截图的位置由参数 <code>t</code> 指定，后面的单位是 <code>ms</code>，因此这个 <code>url</code> 的含义就是截取视频文件的第 <code>10s</code> 的内容。生成的 <code>url</code> 可以直接嵌入在网页提供给用户浏览。</li></ul></li><li>控制图片输出大小<ul><li>视频截帧功能支持选择输出图片的大小，使用 <code>w</code> 参数指定宽度，<code>h</code> 指定长度;</li><li>不指定 <code>w</code> 和 <code>h</code> 参数，或者 <code>w</code> 和 <code>h</code> 都指定为 <code>0</code>，输出的图片大小为视频的真实长宽;</li><li>单独指定 <code>w</code> 或者 <code>h</code> 参数，输出的图片大小指定的数值，另外一个没有指定的数值通过视频原始比例自动计算出来;</li><li>同时指定 <code>w</code> 和 <code>h</code> 参数，输出图片大小为指定的数值，如果长宽比例和原始视频比不相等则强制拉伸;</li></ul></li><li>比如下面这个 <code>url</code> 就是将输出的图片大小指定为 <code>800</code> 宽度<ul><li>输出格式：<code>OSS</code> 输出的视频格式支持 <code>jpg</code> 和 <code>png</code> 两种格式，可以通过 <code>f</code> 参数来切换，默认输出的是 <code>jpg</code> 格式，对于没有特殊需求的用户无需指定该参数<br><code>http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast,w_800</code><br><img src="http://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_10000,m_fast,w_800" alt="预览图"></li></ul></li><li><i class="fa fa-link"></i> <a href="https://help.aliyun.com/document_detail/64555.html">参考文档</a></li></ul><h4 id="保存-base64-格式的图片"><a href="#保存-base64-格式的图片" class="headerlink" title="保存 base64 格式的图片"></a>保存 <code>base64</code> 格式的图片</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> saveImg = wx.getFileSystemManager()</span><br><span class="line"><span class="keyword">const</span> number = <span class="built_in">Math</span>.random()</span><br><span class="line">saveImg.writeFile(&#123;</span><br><span class="line">    <span class="attr">filePath</span>: wx.env.USER_DATA_PATH + <span class="string">&#x27;/pic&#x27;</span> + number + <span class="string">&#x27;.png&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: fileData,</span><br><span class="line">    <span class="attr">encoding</span>: <span class="string">&#x27;base64&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        wx.saveImageToPhotosAlbum(&#123;</span><br><span class="line">            <span class="attr">filePath</span>: wx.env.USER_DATA_PATH + <span class="string">&#x27;/pic&#x27;</span> + number + <span class="string">&#x27;.png&#x27;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">                wx.showToast(&#123;</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;保存成功&#x27;</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">fail</span>: <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(err)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;, <span class="attr">fail</span>: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="小程序列表渲染-wx-for-中自定义-index-item"><a href="#小程序列表渲染-wx-for-中自定义-index-item" class="headerlink" title="小程序列表渲染 wx:for 中自定义 index,item"></a>小程序列表渲染 <code>wx:for</code> 中自定义 <code>index</code>,<code>item</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;array&#125;&#125;&quot;</span> <span class="attr">wx:for-index</span>=<span class="string">&quot;in&quot;</span> <span class="attr">wx:for-item</span>=<span class="string">&quot;it&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;in&#125;&#125;:&#123;&#123;it&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="微信开放能力-open-type-参考文档"><a href="#微信开放能力-open-type-参考文档" class="headerlink" title="微信开放能力 open-type  参考文档"></a>微信开放能力 <code>open-type</code> <i class="fa fa-link"></i> <a href="https://developers.weixin.qq.com/miniprogram/dev/component/button.html">参考文档</a></h4><table><thead><tr><th>合法值</th><th>说明</th><th>锚点</th></tr></thead><tbody><tr><td><code>contact</code></td><td>打开客服会话，如果用户在会话中点击消息卡片后返回小程序，可以从 <code>bindcontact</code> 回调中获得具体信息</td><td><a href="#contact-button">跳转</a></td></tr><tr><td><code>share</code></td><td>触发用户转发</td><td><a href="#">跳转</a></td></tr><tr><td><code>getPhoneNumber</code></td><td>获取用户手机号，可以从 <code>bindgetphonenumber</code> 回调中获取到用户信息</td><td><a href="#">跳转</a></td></tr><tr><td><code>getUserInfo</code></td><td>获取用户信息，可以从 <code>bindgetuserinfo</code> 回调中获取到用户信息</td><td><a href="#">跳转</a></td></tr><tr><td><code>launchApp</code></td><td>打开 <code>APP</code>，可以通过 <code>app-parameter</code> 属性设定向 <code>APP</code> 传的参数</td><td><a href="#">跳转</a></td></tr><tr><td><code>openSetting</code></td><td>打开授权设置页</td><td><a href="#">跳转</a></td></tr><tr><td><code>feedback</code></td><td>打开“意见反馈”页面，用户可提交反馈内容并上传日志，开发者可以登录小程序管理后台后进入左侧菜单“客服反馈”页面获取到反馈内容</td><td><a href="#">跳转</a></td></tr><tr><td><code>chooseAvatar</code></td><td>获取用户头像，可以从 <code>bindchooseavatar</code> 回调中获取到头像信息</td><td><a href="#">跳转</a></td></tr></tbody></table><h4 id="微信小程序组件之-button-客服会话功能"><a href="#微信小程序组件之-button-客服会话功能" class="headerlink" title="微信小程序组件之 button 客服会话功能"></a><span id="contact-button">微信小程序组件之 <code>button</code> 客服会话功能</span></h4><ul><li>先登录 <a href="https://mp.weixin.qq.com/">微信公众平台</a> ，如果没有账户可以去申请一个微信小程序账号.</li><li>在微信公众平台启动小程序客服推送，点击客服反馈来添加客服人员(客服人员可以添加100个).</li><li>打开 <a href="https://mpkf.weixin.qq.com/">微信公众平台客服</a> ，使用绑定的微信号扫码登录，点击登录进入微信公众平台客服界面.</li><li>那么就开始愉快的敲代码<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;contact&quot;</span> <span class="attr">bindcontact</span>=<span class="string">&quot;handleContact&quot;</span>&gt;</span>客服<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;data-指令&quot;&gt;&lt;a href=&quot;#data-指令&quot; class=&quot;headerlink&quot; title=&quot;data-* 指令&quot;&gt;&lt;/a&gt;&lt;code&gt;data-*&lt;/code&gt; 指令&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;用于将 &lt;code&gt;wxml&lt;/code&gt; 页面的数据传递至后台 &lt;code&gt;js&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wxml&lt;/code&gt; 代码&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;#x27;container&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;#x27;nav_left&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;wx:for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#123;&amp;#123;navLeftItems&amp;#125;&amp;#125;&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;wx:key&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;#x27;nav_left_items&amp;#x27;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;bindtap&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;#x27;switchItem&amp;#x27;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#123;&amp;#123;item.id&amp;#125;&amp;#125;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&amp;#123;item.categoryName&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;js&lt;/code&gt; 代码：通过 &lt;code&gt;event&lt;/code&gt; 参数获取需要传递的 &lt;code&gt;data-*&lt;/code&gt; 参数&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;switchItem: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(event.target.dataset.id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="微信小程序，开发笔记" scheme="https://hushaoyu.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%8C%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="微信小程序，开发笔记" scheme="https://hushaoyu.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%8C%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>nodeppt - css</title>
    <link href="https://hushaoyu.github.io/2022/01/14/nodeppt-css/"/>
    <id>https://hushaoyu.github.io/2022/01/14/nodeppt-css/</id>
    <published>2022-01-14T08:23:10.000Z</published>
    <updated>2022-01-14T08:23:32.120Z</updated>
    
    
    
    
    <category term="nodeppt" scheme="https://hushaoyu.github.io/categories/nodeppt/"/>
    
    
    <category term="nodeppt" scheme="https://hushaoyu.github.io/tags/nodeppt/"/>
    
  </entry>
  
  <entry>
    <title>生成PPT - nodeppt</title>
    <link href="https://hushaoyu.github.io/2022/01/14/%E7%94%9F%E6%88%90PPT-nodeppt/"/>
    <id>https://hushaoyu.github.io/2022/01/14/%E7%94%9F%E6%88%90PPT-nodeppt/</id>
    <published>2022-01-14T07:25:16.000Z</published>
    <updated>2022-01-14T08:22:29.628Z</updated>
    
    <content type="html"><![CDATA[<h4 id="全局安装脚本"><a href="#全局安装脚本" class="headerlink" title="全局安装脚本"></a>全局安装脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g nodeppt</span><br></pre></td></tr></table></figure><ul><li><a href="https://github.com/ksky521/nodeppt">github</a></li></ul><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><ul><li>命令<ul><li><code>new</code>：使用线上模板创建一个md文件<ul><li><code>nodeppt new demo.md</code> # 根据官方模板创建一个新的 <code>slide</code> 板块</li><li><code>nodeppt new demo.md -t username/repo</code> # 根据 <code>github</code> 指定模板创建新的 <code>slide</code>板块</li></ul></li><li><code>serve</code>：启动一个指定的md文件预览</li><li><code>build</code>：编译产出一个md文件</li></ul></li></ul><h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Page:</span> <span class="string">↑/↓/←/→</span> <span class="string">Space</span> <span class="string">Home</span> <span class="string">End</span></span><br><span class="line"><span class="attr">Fullscreen:</span> <span class="string">F</span></span><br><span class="line"><span class="attr">Overview:</span> <span class="string">-/+</span></span><br><span class="line"><span class="attr">Speaker Note:</span> <span class="string">N</span></span><br><span class="line"><span class="attr">Grid Background:</span> <span class="string">Enter</span></span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">nodeppt</span> <span class="string">markdown</span> <span class="string">演示</span></span><br><span class="line"><span class="attr">speaker:</span> <span class="string">三水清</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://github.com/ksky521/nodeppt</span></span><br><span class="line"><span class="attr">js:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://www.echartsjs.com/asset/theme/shine.js</span></span><br><span class="line"><span class="attr">prismTheme:</span> <span class="string">solarizedlight</span></span><br><span class="line"><span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echarts</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mermaid</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">katex</span></span><br></pre></td></tr></table></figure><ul><li><code>title</code>：演讲主题</li><li><code>speaker</code>：演讲人</li><li><code>url</code>：地址</li><li><code>js</code>：需要加载的 <code>js</code> 文件数组，将被放在 <code>body</code> 标签之前</li><li><code>css</code>：需要加载的 <code>css</code> 文件数组，将被放在 <code>head</code> 标签内</li><li><code>prismTheme</code>：<code>prism</code> 配色，取值范围 <code>[&#39;dark&#39;, &#39;coy&#39;, &#39;funky&#39;, &#39;okaidia&#39;, &#39;tomorrow&#39;, &#39;solarizedlight&#39;, &#39;twilight&#39;]</code></li><li><code>plugins</code>：主题配色插件，目前支持的有 <a href="https://github.com/ksky521/nodeppt/blob/master/site/echarts.md">echarts</a> 、<a href="https://github.com/ksky521/nodeppt/blob/master/site/mermaid.md">mermaid</a> 、<a href="https://www.npmjs.com/package/markdown-it-katex">katex</a></li></ul><h4 id="语法"><a href="#语法" class="headerlink" title=" 语法"></a><slide> 语法</h4>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;全局安装脚本&quot;&gt;&lt;a href=&quot;#全局安装脚本&quot; class=&quot;headerlink&quot; title=&quot;全局安装脚本&quot;&gt;&lt;/a&gt;全局安装脚本&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g nodeppt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ksky521/nodeppt&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="PPT" scheme="https://hushaoyu.github.io/categories/PPT/"/>
    
    <category term="nodeppt" scheme="https://hushaoyu.github.io/categories/PPT/nodeppt/"/>
    
    
    <category term="nodeppt" scheme="https://hushaoyu.github.io/tags/nodeppt/"/>
    
    <category term="PPT" scheme="https://hushaoyu.github.io/tags/PPT/"/>
    
  </entry>
  
  <entry>
    <title>React 基础开发框架搭建</title>
    <link href="https://hushaoyu.github.io/2022/01/14/React-%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/"/>
    <id>https://hushaoyu.github.io/2022/01/14/React-%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/</id>
    <published>2022-01-14T02:02:01.000Z</published>
    <updated>2022-01-14T02:15:50.078Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><blockquote><p>&ensp;&ensp;Create React App 是一种官方支持的创建单页 React 应用程序的方式。它提供了一个没有配置的现代构建设置。</p></blockquote><h4 id=""><a href="#" class="headerlink" title=""></a></h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;ensp;&amp;ensp;Create React App 是一种官方支持的创建单页 React 应用程序的方式。它</summary>
      
    
    
    
    <category term="React" scheme="https://hushaoyu.github.io/categories/React/"/>
    
    <category term="create-react-app" scheme="https://hushaoyu.github.io/categories/React/create-react-app/"/>
    
    
    <category term="React" scheme="https://hushaoyu.github.io/tags/React/"/>
    
    <category term="框架搭建" scheme="https://hushaoyu.github.io/tags/%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/"/>
    
    <category term="creat-react-app" scheme="https://hushaoyu.github.io/tags/creat-react-app/"/>
    
  </entry>
  
  <entry>
    <title>webpack - 技巧篇</title>
    <link href="https://hushaoyu.github.io/2022/01/14/webpack-%E6%8A%80%E5%B7%A7%E7%AF%87/"/>
    <id>https://hushaoyu.github.io/2022/01/14/webpack-%E6%8A%80%E5%B7%A7%E7%AF%87/</id>
    <published>2022-01-14T01:56:14.000Z</published>
    <updated>2022-01-14T02:01:15.564Z</updated>
    
    <content type="html"><![CDATA[<h4 id="打包图片资源"><a href="#打包图片资源" class="headerlink" title="打包图片资源"></a>打包图片资源</h4><ul><li>安装 <code>loader</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save-dev file-loader</span><br></pre></td></tr></table></figure></li><li>在 <code>webpack.config.js</code> 文件的规则中添加配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">test:</span> <span class="string">/\.(png|svg|jpg|gif)$/</span>,</span><br><span class="line">    <span class="attr">use:</span> [<span class="string">&#x27;file-loader&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;打包图片资源&quot;&gt;&lt;a href=&quot;#打包图片资源&quot; class=&quot;headerlink&quot; title=&quot;打包图片资源&quot;&gt;&lt;/a&gt;打包图片资源&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;安装 &lt;code&gt;loader&lt;/code&gt;&lt;figure class=&quot;highlight b</summary>
      
    
    
    
    <category term="webpack" scheme="https://hushaoyu.github.io/categories/webpack/"/>
    
    
    <category term="webpack" scheme="https://hushaoyu.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>CSS - 开发技巧</title>
    <link href="https://hushaoyu.github.io/2022/01/13/CSS-%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/"/>
    <id>https://hushaoyu.github.io/2022/01/13/CSS-%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/</id>
    <published>2022-01-13T07:58:19.000Z</published>
    <updated>2022-01-21T05:22:26.257Z</updated>
    
    
    
    
    <category term="CSS" scheme="https://hushaoyu.github.io/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://hushaoyu.github.io/tags/CSS/"/>
    
    <category term="开发技巧" scheme="https://hushaoyu.github.io/tags/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Note - 使用NexT主题</title>
    <link href="https://hushaoyu.github.io/2022/01/10/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/"/>
    <id>https://hushaoyu.github.io/2022/01/10/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/</id>
    <published>2022-01-10T02:08:41.000Z</published>
    <updated>2022-01-11T03:30:03.253Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><blockquote><p>&ensp;&ensp;«NexT» is a high quality elegant Hexo theme. It is crafted from scratch with love.</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><ul><li>进入hexo项目根目录，执行以下代码，将主题克隆至themes文件夹：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> hexo</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li><li>在项目的根配置文件 <code>_config.yml</code> 中，将 <code>theme</code> 的配置值修改为  <code>next</code> 应用主题，重新执行构建命令更新程序。<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure></li><li><code>Tips</code>：每次更新项目需要执行 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 才能应用本地更新，略显麻烦，可以在 <code>package.json</code> 文件中添加 <code>start</code> 命令，有改动只需要执行 <code>npm start</code> 就可以了<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;start&quot;:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo s&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="主题切换"><a href="#主题切换" class="headerlink" title="主题切换"></a>主题切换</h4><ul><li>NexT默认集成了4中主题模式，<code>Gemini</code>、<code>Mist</code>、<code>Muse</code>、<code>Pisces</code>。在项目配置文件中修改 <code>scheme</code> 来应用不同的主题模式。</li></ul><h4 id="隐藏网站页面底部的-powered-by"><a href="#隐藏网站页面底部的-powered-by" class="headerlink" title="隐藏网站页面底部的 powered by"></a>隐藏网站页面底部的 <code>powered by</code></h4><ul><li>在文件 <code>themes/next/layout/_partials/footer.swig</code> 中，将 <code>footer.powered</code> 代码块使用 <code>&lt;!-- --&gt;</code> 注释掉。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">&#123;%- <span class="keyword">if</span> theme.footer.powered %&#125;</span><br><span class="line">  &lt;div class=<span class="string">&quot;powered-by&quot;</span>&gt;</span><br><span class="line">    &#123;%- <span class="built_in">set</span> next_site = <span class="string">&#x27;https://theme-next.org&#x27;</span> %&#125;</span><br><span class="line">    &#123;%- <span class="keyword">if</span> theme.scheme !== <span class="string">&#x27;Gemini&#x27;</span> %&#125;</span><br><span class="line">      &#123;%- <span class="built_in">set</span> next_site = <span class="string">&#x27;https://&#x27;</span> + theme.scheme | lower + <span class="string">&#x27;.theme-next.org&#x27;</span> %&#125;</span><br><span class="line">    &#123;%- endif %&#125;</span><br><span class="line">    &#123;&#123;- __(<span class="string">&#x27;footer.powered&#x27;</span>, next_url(<span class="string">&#x27;https://hexo.io&#x27;</span>, <span class="string">&#x27;Hexo&#x27;</span>, &#123;class: <span class="string">&#x27;theme-link&#x27;</span>&#125;) + <span class="string">&#x27; &amp; &#x27;</span> + next_url(next_site, <span class="string">&#x27;NexT.&#x27;</span> + theme.scheme, &#123;class: <span class="string">&#x27;theme-link&#x27;</span>&#125;)) &#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="文章添加阴影"><a href="#文章添加阴影" class="headerlink" title="文章添加阴影"></a>文章添加阴影</h4><ul><li>在文件 <code>themes/next/source/css/_common/components/post/post.styl</code> 中添加如下样式：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, .<span class="number">5</span>);</span><br><span class="line">  -moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="设置各板块的背景透明度"><a href="#设置各板块的背景透明度" class="headerlink" title="设置各板块的背景透明度"></a>设置各板块的背景透明度</h4><ul><li>在文件 <code>themes/next/source/css/_schemes/Pisces/_layout.styl</code> 中可以看到，板块的 <code>background</code> 属性，配置的都是 <code>--content-bg-color</code> 变量，因此我们只需找到这个变量所在的位置进行修改既可以了。</li><li>在项目中搜索，可以找到是在 <code>themes/next/source/css/_variables/base.styl</code> 文件中进行配置的，将其值修改如下<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$body-bg-color</span> = rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">8</span>);</span><br><span class="line"><span class="variable">$content-bg-color</span> = rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">8</span>);</span><br></pre></td></tr></table></figure></li></ul><h4 id="设置网站图标-favicon-ico"><a href="#设置网站图标-favicon-ico" class="headerlink" title="设置网站图标 favicon.ico"></a>设置网站图标 <code>favicon.ico</code></h4><ul><li>在文件夹 <code>/themes/next/source/images</code> 中，有不同场景不同格式的网站图标，根据格式进行替换。</li><li>其他可自定义配置图标<ul><li><code>avatar.gif</code>：网站个人介绍logo</li></ul></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/favicon.png" alt="网站图标"></li></ul><h4 id="修改博客底部标签样式"><a href="#修改博客底部标签样式" class="headerlink" title="修改博客底部标签样式"></a>修改博客底部标签样式</h4><ul><li>在文件 <code>/themes/next/layout/_macro/post.swig</code> 中，搜索 <code>rel=&quot;tag&quot;</code>，将<code>#</code>替换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/article_tag.png" alt="文章底部标签"></li></ul><h4 id="显示当前页面的浏览进度"><a href="#显示当前页面的浏览进度" class="headerlink" title="显示当前页面的浏览进度"></a>显示当前页面的浏览进度</h4><ul><li>NexT默认已经集成该功能，在主题配置文件中，将 <code>scrollpercent</code> 的配置值设置为 <code>true</code>，在页面右下角即可看到图标。<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="修改链接文字样式"><a href="#修改链接文字样式" class="headerlink" title="修改链接文字样式"></a>修改链接文字样式</h4><ul><li>在文件 <code>themes/next/source/css/_common/components/post/post.styl</code> 中，添加以下代码<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff106c</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="设置头像的悬停效果"><a href="#设置头像的悬停效果" class="headerlink" title="设置头像的悬停效果"></a>设置头像的悬停效果</h4><ul><li>在主题配置文件中，找到 <code>avatar</code> 配置，将其 <code>rotated</code> 属性设置为 <code>true</code><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="根据发布的博客自动生成首页"><a href="#根据发布的博客自动生成首页" class="headerlink" title="根据发布的博客自动生成首页"></a>根据发布的博客自动生成首页</h4><ul><li>根目录执行代码，安装插件 <a href="https://github.com/chekun/hexo-excerpt">hexo-excerpt</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure></li><li>在主题配置文件中将 <code>excerpt_description</code> 的配置值设置为true，另外在根项目中增加以下内容：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首页</span></span><br><span class="line"><span class="attr">excerpt:</span></span><br><span class="line">  <span class="attr">depth:</span> <span class="number">2</span>  <span class="comment">#按层来算，也就是按代码块来算，截取博文多少层的内容来显示在主页</span></span><br><span class="line">  <span class="attr">excerpt_excludes:</span> []</span><br><span class="line">  <span class="attr">more_excludes:</span> []</span><br><span class="line">  <span class="attr">hideWholePostExcerpts:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><a href="https://hushaoyu.github.io/">在线预览</a></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/home.png" alt="首页"></li></ul><h4 id="首页阅读更多按钮样式更改"><a href="#首页阅读更多按钮样式更改" class="headerlink" title="首页阅读更多按钮样式更改"></a>首页阅读更多按钮样式更改</h4><ul><li>在文件 <code>themes/next/source/css/_common/components/post/post.styl</code> 中添加如下样式：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, <span class="number">#a166ab</span> <span class="number">0%</span>, <span class="number">#ef4e7b</span> <span class="number">25%</span>, <span class="number">#f37055</span> <span class="number">50%</span>, <span class="number">#ef4e7b</span> <span class="number">75%</span>, <span class="number">#a166ab</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="暗黑模式切换"><a href="#暗黑模式切换" class="headerlink" title="暗黑模式切换"></a>暗黑模式切换</h4><ul><li>根目录执行代码，安装插件 <a href="https://github.com/rqh656418510/hexo-next-darkmode/blob/main/README_CN.md">Hexo NexT Darkmode</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-next-darkmode --save</span><br></pre></td></tr></table></figure></li><li>在主题配置文件中，首先将NexT默认的暗黑主题设置为 <code>false</code> ：<ul><li><code>darkmode: false</code></li></ul></li><li>之后添加如下配置：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">darkmode_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">bottom:</span> <span class="string">&#x27;64px&#x27;</span> <span class="comment"># default: &#x27;32px&#x27;</span></span><br><span class="line">  <span class="attr">right:</span> <span class="string">&#x27;100px&#x27;</span> <span class="comment"># default: &#x27;32px&#x27;</span></span><br><span class="line">  <span class="attr">left:</span> <span class="string">&#x27;unset&#x27;</span> <span class="comment"># default: &#x27;unset&#x27;</span></span><br><span class="line">  <span class="attr">time:</span> <span class="string">&#x27;0.5s&#x27;</span> <span class="comment"># default: &#x27;0.3s&#x27;</span></span><br><span class="line">  <span class="attr">mixColor:</span> <span class="string">&#x27;transparent&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">backgroundColor:</span> <span class="string">&#x27;transparent&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">buttonColorDark:</span> <span class="string">&#x27;#100f2c&#x27;</span> <span class="comment"># default: &#x27;#100f2c&#x27;</span></span><br><span class="line">  <span class="attr">buttonColorLight:</span> <span class="string">&#x27;#fff&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">isActivated:</span> <span class="literal">true</span> <span class="comment"># default false</span></span><br><span class="line">  <span class="attr">saveInCookies:</span> <span class="literal">true</span> <span class="comment"># default: true</span></span><br><span class="line">  <span class="attr">label:</span> <span class="string">&#x27;🌓&#x27;</span> <span class="comment"># default: &#x27;&#x27;</span></span><br><span class="line">  <span class="attr">autoMatchOsTheme:</span> <span class="literal">true</span> <span class="comment"># default: true</span></span><br><span class="line">  <span class="attr">libUrl:</span> <span class="comment"># Set custom library cdn url for Darkmode.js</span></span><br></pre></td></tr></table></figure></li><li>默认激活暗黑/夜间模式，请始终与 <code>saveInCookies: false</code>、<code>autoMatchOsTheme: false</code> 一起使用</li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/theme_mode.png" alt="主题暗黑模式切换"></li></ul><h4 id="博文加密访问"><a href="#博文加密访问" class="headerlink" title="博文加密访问"></a>博文加密访问</h4><ul><li>NexT默认集成加密访问功能，在文件 <code>themes/next/layout/_partials/head/head.swig</code> 中添加如下代码：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#JavaScript</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (prompt(<span class="string">&#x27;请输入密码&#x27;</span>) !== <span class="string">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class="line">                alert(<span class="string">&#x27;密码错误&#x27;</span>);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>之后在需要加密访问的博客中，在头部添加 <code>password</code> 配置即可开启：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password: 123456</span><br></pre></td></tr></table></figure></li><li>默认的加密访问功能，在样式上并不优美，我们可以使用第三方的插件来实现这个功能。根项目安装插件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li><li><a href="https://github.com/D0n9X1n/hexo-blog-encrypt">hexo-blog-encrypt</a></li><li>在根项目的配置文件中增加如下配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">encrypt:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>然后和之前一样，在需要进行加密的博文中，配置相应的 <code>password</code> 属性即可生效。</li><li>这种将密码配置到博文中的方式，灵活性不足，如果需要统一配置和更改密码，需要在每个博文中修改一遍。为解决这种问题，插件允许通过指定 <code>tag</code> 来进行加密，并且不同的 <code>tag</code> 可以指定不同的密码。同样在根项目的配置文件中，修改之前的 <code>encrypt</code> 配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章加密访问</span></span><br><span class="line"><span class="attr">encrypt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">silent:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">surge</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">encrypt</span>, <span class="attr">password:</span> <span class="number">123456</span>&#125;</span><br><span class="line">  <span class="attr">abstract:</span> <span class="string">博文已加密，请提供密码查看！</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">输入密码，查看文章</span></span><br><span class="line">  <span class="attr">wrong_pass_message:</span> <span class="string">密码验证失败，请提供正确的密码.</span></span><br><span class="line">  <span class="attr">wrong_hash_message:</span> <span class="string">抱歉,</span> <span class="string">这个文章不能被校验,</span> <span class="string">不过您还是能看看解密后的内容.</span></span><br></pre></td></tr></table></figure></li><li>设置 <code>tags</code> 属性，指定 <code>tag</code> 的 <code>name</code> 和 <code>password</code> 属性，同时在需要进行加密的博文中，设置此 <code>tag</code> 值<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span> [<span class="string">web</span>, <span class="string">ThreeJS</span>, <span class="string">React</span>, <span class="string">encrypt</span>]</span><br></pre></td></tr></table></figure></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/password_needed.png" alt="需要加密访问"></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/password_confirm.png" alt="确认密码"></li></ul><h4 id="增加文章字数统计及阅读时长功能"><a href="#增加文章字数统计及阅读时长功能" class="headerlink" title="增加文章字数统计及阅读时长功能"></a>增加文章字数统计及阅读时长功能</h4><ul><li>根项目中安装插件 <a href="https://github.com/theme-next/hexo-symbols-count-time">hexo-symbols-count-time</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></li><li>在主题配置文件中，搜索 <code>symbols_count_time</code> 配置，NexT默认已经集成此配置，安装插件后重新构建部署即可生效<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/word_count.png" alt="博文字数及阅读时长统计"></li></ul><h4 id="代码复制成功反馈"><a href="#代码复制成功反馈" class="headerlink" title="代码复制成功反馈"></a>代码复制成功反馈</h4><ul><li>NexT默认已经集成代码复制功能，但是复制成功的反馈默认是禁用的，在主题配置文件中，搜索 <code>codeblock</code> ，将其 <code>show_result</code> 值设置为 <code>true</code><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">&#x27;night eighties&#x27;</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">flat</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="开启页面加载进度条"><a href="#开启页面加载进度条" class="headerlink" title="开启页面加载进度条"></a>开启页面加载进度条</h4><ul><li>进入到next主题文件目录下执行命令，将插件克隆至主题文件中，<a href="https://github.com/theme-next/theme-next-pace">文档</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-pace <span class="built_in">source</span>/lib/pace</span><br></pre></td></tr></table></figure></li><li>在主题配置文件中，修改 <code>pace</code> 的配置，可以通过修改 <code>theme</code> 以应用不同的进度条主题样式。<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">minimal</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="博文支持评论"><a href="#博文支持评论" class="headerlink" title="博文支持评论"></a>博文支持评论</h4><ul><li>NexT支持多种评论插件，可选值有：<code>changyan</code> 、 <code>disqus</code> 、 <code>disqusjs</code> 、 <code>gitalk</code> | <code>livere</code> | <code>valine</code>，本文使用的是 <a href="https://valine.js.org/quickstart.html">valine</a></li><li>根据文档提示操作，注册账号、应用，获取到 <code>appId</code> 和 <code>appKey</code>，在主题配置文件中修改配置<ul><li>设置当前评论模块使用的插件<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Available values: tabs | buttons</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">tabs</span></span><br><span class="line">  <span class="comment"># Choose a comment system to be displayed by default.</span></span><br><span class="line">  <span class="comment"># Available values: changyan | disqus | disqusjs | gitalk | livere | valine</span></span><br><span class="line">  <span class="attr">active:</span> <span class="string">valine</span></span><br></pre></td></tr></table></figure></li><li><code>valine</code> 配置 <code>appId</code> 和 <code>appKey</code>，其他更多的配置参考官方文档说明<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">xxxx</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">xxxx</span> <span class="comment"># Your leancloud application appkey</span></span><br></pre></td></tr></table></figure></li></ul></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/comment.png" alt="评论区"><h4 id="集成网易云音乐"><a href="#集成网易云音乐" class="headerlink" title="集成网易云音乐"></a>集成网易云音乐</h4></li><li>打开网易云网页版，搜索需要添加的歌曲，复制歌曲的外链信息，将其添加到 <code>themes/next/layout/_macro/sidebar.swig</code> 文件中，代码放置位置取决于你想让面板显示在哪个位置<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 网易云音乐 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;music163player&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=1901049671&amp;auto=1&amp;height=66&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/wyy_music.png" alt="网易云音乐"></li></ul><h4 id="标签页美化"><a href="#标签页美化" class="headerlink" title="标签页美化"></a>标签页美化</h4><ul><li>在 <code>/themes/next/layout/</code> 目录下新建文件 <code>tag-color.swig</code> 文件，、填入以下代码<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> alltags = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;tag-cloud-tags&#x27;</span>);</span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> tags = alltags[<span class="number">0</span>].getElementsByTagName(<span class="string">&#x27;a&#x27;</span>);</span></span><br><span class="line"><span class="javascript">     <span class="keyword">for</span> (<span class="keyword">var</span> i = tags.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> r=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">130</span>);</span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> g=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">100</span>);</span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> b=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">80</span>);</span></span><br><span class="line"><span class="javascript">       tags[i].style.background = <span class="string">&quot;rgb(&quot;</span>+r+<span class="string">&quot;,&quot;</span>+g+<span class="string">&quot;,&quot;</span>+b+<span class="string">&quot;)&quot;</span>;</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.tag-cloud-tags</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="comment">/*font-family: Helvetica, Tahoma, Arial;*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*font-weight: 100;*/</span></span></span><br><span class="line"><span class="css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">    <span class="attribute">counter-reset</span>: tags;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.tag-cloud-tags</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding-right</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding-left</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">5px</span> <span class="number">0px</span> <span class="number">0px</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.tag-cloud-tags</span> <span class="selector-tag">a</span>:before&#123;</span></span><br><span class="line"><span class="css">    content: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.tag-cloud-tags</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">     <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">5px</span> <span class="number">15px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">4</span>);</span></span><br><span class="line"><span class="css">     <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span></span><br><span class="line"><span class="css">     <span class="comment">/*box-shadow: 10px 10px 15px 2px rgba(0,0,0,.12), 0 0 6px 0 rgba(104, 104, 105, 0.1);*/</span></span></span><br><span class="line"><span class="css">     <span class="attribute">transition-duration</span>: <span class="number">0.15s</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>在 <code>/themes/next/layout/page.swig</code> 文件中引入上面新增的文件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- if page.type === &#x27;tags&#x27; %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tag-cloud&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tag-cloud-tags&quot;</span> <span class="attr">id</span>=<span class="string">&quot;tags&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; tagcloud(&#123;min_font: 16, max_font: 16, amount: 300, color: true, start_color: &#x27;#FFF&#x27;, end_color: &#x27;#FFF&#x27;&#125;) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% include &#x27;tag-color.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure></li><li>重新构建部署项目，即可查看效果。<a href="https://hushaoyu.github.io/tags/">在线预览</a></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/tag_page.png" alt="标签页"></li></ul><h4 id="标签云"><a href="#标签云" class="headerlink" title="标签云"></a>标签云</h4><ul><li>使用插件 <a href="https://github.com/D0n9X1n/hexo-tag-cloud/blob/master/README.ZH.md">hexo-tag-cloud</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-tag-cloud --save</span><br></pre></td></tr></table></figure></li><li>在 <code>themes/next/layout/_macro/sidebar.swig</code> 文件中添加如下代码，重新执行 <code>npm start</code> 可查看效果<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 标签云 --&gt;</span></span><br><span class="line">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; url_for(&#x27;/js/tagcloud.js&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; url_for(&#x27;/js/tagcanvas.js&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;widget-wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;widget-title&quot;</span>&gt;</span>Tag Cloud<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myCanvasContainer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;widget tagcloud&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">&quot;250&quot;</span> <span class="attr">height</span>=<span class="string">&quot;250&quot;</span> <span class="attr">id</span>=<span class="string">&quot;resCanvas&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; list_tags() &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li><li>在根项目的配置文件中，增加对标签云的属性配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 标签云</span></span><br><span class="line"><span class="attr">tag_cloud:</span></span><br><span class="line">  <span class="attr">textFont:</span> <span class="string">Trebuchet</span> <span class="string">MS,</span> <span class="string">Helvetica</span>     <span class="comment"># 字体</span></span><br><span class="line">  <span class="attr">textColor:</span> <span class="string">&#x27;#333&#x27;</span>                     <span class="comment"># 字体颜色</span></span><br><span class="line">  <span class="attr">textHeight:</span> <span class="number">25</span>                        <span class="comment"># 字体大小</span></span><br><span class="line">  <span class="attr">outlineColor:</span> <span class="string">&#x27;#E2E1D1&#x27;</span></span><br><span class="line">  <span class="attr">maxSpeed:</span> <span class="number">0.3</span>                         <span class="comment"># 旋转速度</span></span><br><span class="line">  <span class="attr">pauseOnSelected:</span> <span class="literal">false</span>                <span class="comment"># 当选中对应标签时，是否停止转动</span></span><br></pre></td></tr></table></figure></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/tag_cloud.png" alt="标签云"></li></ul><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><ul><li>在根项目安装插件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-algolia --save</span><br></pre></td></tr></table></figure></li><li>NexT主题已经默认集成了一部分参数配置，并且在页面的左侧 <code>Slider</code> 区域也有搜索的快捷菜单，在主题配置文件中，搜索 <code>algolia_search</code>，将 <code>enable</code> 值设置为 <code>true</code>，启用该搜索功能。<code>hits.per_page</code> 表示搜索结果分页大小，<code>labels</code> 可以设置搜索匹配提示文本。</li><li>需要让搜索功能真正生效，还需要在根项目配置文件中增加 <code>algolia</code> 的账号配置信息<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># search</span></span><br><span class="line"><span class="attr">algolia:</span></span><br><span class="line">  <span class="attr">applicationID:</span> <span class="string">&quot;xxx&quot;</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="string">&quot;xxxxx&quot;</span></span><br><span class="line">  <span class="attr">indexName:</span> <span class="string">&quot;indexName&quot;</span></span><br></pre></td></tr></table></figure></li><li>配置的信息需要注册 <code>algolia</code> 账号才能获取。可点击 <a href="https://www.algolia.com/">algolia</a> 跳转进行注册。<ul><li>注册账号后，注册一个应用，应用选择免费版本的。创建应用后在左侧菜单点击 <code>Data Source</code>，选择 <code>Indices</code>，创建一个新的索引，索引名称是博客网站需要配置的一个值，后面会用到。</li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/create_index.png" alt="创建索引"></li><li>回到 <code>Overview</code> 总览面板，点击 <code>API Keys</code>，在面板可以看到注册的应用的 <code>application ID</code>。创建新的key，其中的 <code>Indices</code> 选择之前创建的索引，下方的 <code>ACL</code> 权限控制，设置值为：<code>search</code>、<code>addObject</code>、<code>deleteObject</code>、<code>addInde</code>、<code>deleteIndex</code>，其他值默认，然后点击确认创建。</li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_appId.png" alt="application ID"></li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_apiKey.png" alt="创建API Keys"></li><li>将上述生成的 <code>application ID</code>、<code>apiKey</code>、<code>indexName</code> 填入到配置文件中。</li></ul></li><li>执行以下命令，将网站的博文生成可搜索的静态资源<ul><li><strong>每次博文有更新，需要部署时，都需要先执行以下命令，再执行构建部署命令，否则更新后的内容，在搜索数据库中是没有更新的。</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> HEXO_ALGOLIA_INDEXING_KEY=<span class="string">&#x27;0f04bd99beb506cc014d144974134458&#x27;</span></span><br><span class="line">$ <span class="built_in">export</span> HEXO_ALGOLIA_INDEXING_KEY</span><br><span class="line">$ hexo algolia</span><br></pre></td></tr></table></figure></li></ul></li><li>重新运行项目，点击左侧的搜索，正常情况下，会出现弹框，输入任意内容，即可显示出搜索结果</li><li><img src="https://hsj-studio.oss-cn-shanghai.aliyuncs.com/blog/articles/Hexo-Note-%E4%BD%BF%E7%94%A8NexT%E4%B8%BB%E9%A2%98/algolia_search_result.png" alt="搜索结果"></li></ul>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;ensp;&amp;ensp;«NexT» is a high quality elegant Hexo theme. It is crafted from scratch with love.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://hushaoyu.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://hushaoyu.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Note - 命令</title>
    <link href="https://hushaoyu.github.io/2022/01/09/Hexo-Note-%E5%91%BD%E4%BB%A4/"/>
    <id>https://hushaoyu.github.io/2022/01/09/Hexo-Note-%E5%91%BD%E4%BB%A4/</id>
    <published>2022-01-09T07:17:57.000Z</published>
    <updated>2022-01-10T06:25:39.399Z</updated>
    
    <content type="html"><![CDATA[<h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init projectName</span><br></pre></td></tr></table></figure><p>初始化 Hexo 网址项目，在上一节中已经提到过。<a href="/2022/01/05/Hexo-Note-%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%8A%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE">Hexo Note - 初始化及常用配置</a></p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><ul><li><code>layout</code>: 创建的页面类型。通常有<code>post</code>和<code>page</code>，默认是<code>post</code>，因此在使用时，省略此参数表明创建的是post类型的页面，<ul><li><code>post</code>：普通的博文，会在首页和归档中列出。</li><li><code>page</code>：独立的页面，不会展示在首页和归档页，如标签页、自定义的404页面等。</li></ul></li></ul><p>其他可选参数：</p><table><thead><tr><th align="center">参数</th><th>描述</th></tr></thead><tbody><tr><td align="center"><code>-p， --path</code></td><td>自定义新博文的路径</td></tr><tr><td align="center"><code>-r, --replace</code></td><td>如果存在同名博文，将其替换</td></tr><tr><td align="center"><code>-s, --slug</code></td><td>博文的 Slug，作为新博文的文件名和发布后的 URL</td></tr><tr><td align="center">&ensp;&ensp;默认情况下，Hexo 或根据<code>permalink</code>配置，及文件名称来决定博文生成的路径。如果创建的是独立页面，则使用文件名来在<code>sources</code>目录下生成相应的目录，并在目录下生成<code>index.md</code>文件。</td><td></td></tr></tbody></table><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>生成可直接访问的网站静态文件。<br /><br>其他可选参数：</p><table><thead><tr><th align="center">参数</th><th>描述</th></tr></thead><tbody><tr><td align="center"><code>-d, --deploy</code></td><td>文件生成后立即部署网站</td></tr><tr><td align="center"><code>-w, --watch</code></td><td>监视文件变动</td></tr><tr><td align="center"><code>-b, --bail</code></td><td>生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td align="center"><code>-f, --force</code></td><td>强制重新生成文件，Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td></tr><tr><td align="center"><code>-c, --concurrency</code></td><td>最大同时生成文件的数量，默认无限制</td></tr></tbody></table><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>本地启动服务器。默认情况下，访问网址为：<code>http://localhost:4000/</code> <br /><br>其他可选参数：</p><table><thead><tr><th align="center">参数</th><th>描述</th></tr></thead><tbody><tr><td align="center"><code>-p, --port</code></td><td>重新指定端口</td></tr><tr><td align="center"><code>-s, --static</code></td><td>只使用静态文件</td></tr><tr><td align="center"><code>-l, --log</code></td><td>启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br /><br>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;init&quot;&gt;&lt;a href=&quot;#init&quot; class=&quot;headerlink&quot; title=&quot;init&quot;&gt;&lt;/a&gt;init&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init projectName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;初始化 Hexo 网址项目，在上一节中已经提到过。&lt;a href=&quot;/2022/01/05/Hexo-Note-%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%8A%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE&quot;&gt;Hexo Note - 初始化及常用配置&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://hushaoyu.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://hushaoyu.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Note - 初始化及常用配置</title>
    <link href="https://hushaoyu.github.io/2022/01/09/Hexo-Note-%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%8A%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    <id>https://hushaoyu.github.io/2022/01/09/Hexo-Note-%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%8A%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</id>
    <published>2022-01-09T06:07:29.000Z</published>
    <updated>2022-01-10T06:25:39.390Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是-Hexo-？"><a href="#什么是-Hexo-？" class="headerlink" title="什么是 Hexo ？"></a>什么是 Hexo ？</h3><blockquote><p>&ensp;&ensp;Hexo 是一个快速、简洁且高效的博客框架。<a href="https://hexo.bootcss.com/docs/index.html">Hexo</a> 使用 Markdown（或其他渲染引擎）解析博文，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><ul><li><a href="/2022/01/05/Markdown-using-document">Markdown站内手册</a></li><li><a href="https://markdown.com.cn/">Markdown官方手册</a></li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h4><p>安装前，确认机器环境已经安装 <a href="http://git-scm.com/">Git</a> 和 <a href="http://nodejs.org/">Node</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">git version 2.31.1.windows.1</span><br><span class="line"></span><br><span class="line">$ node -v</span><br><span class="line">v14.13.0</span><br></pre></td></tr></table></figure><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p>&ensp;&ensp;全局安装hexo cli工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="搭建网站"><a href="#搭建网站" class="headerlink" title="搭建网站"></a>搭建网站</h3><h4 id="初始化博客项目目录，并安装依赖"><a href="#初始化博客项目目录，并安装依赖" class="headerlink" title="初始化博客项目目录，并安装依赖"></a>初始化博客项目目录，并安装依赖</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init projectName</span><br><span class="line">$ <span class="built_in">cd</span> projectName &amp;&amp; npm install</span><br></pre></td></tr></table></figure><p>&ensp;&ensp;构建后可以看到目录的基本结构，其中_.config.yml为网站的配置文件；source为资源文件，比如后续需要新建的博文，就是在这个目录下生成的；themes是主题文件夹，Hexo将根据这个目录下的资源配置，来渲染网站，生成页面。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><p>&ensp;&ensp;博客网站的网站标题、描述，以及网站的归属等信息设置</p><table><thead><tr><th align="center">参数</th><th>描述</th></tr></thead><tbody><tr><td align="center"><code>title</code></td><td>网站标题</td></tr><tr><td align="center"><code>subtitle</code></td><td>网站副标题</td></tr><tr><td align="center"><code>description</code></td><td>描述，主要用于SEO，建议准确描述网站内容，可使用关键字</td></tr><tr><td align="center"><code>keywords</code></td><td>关键字</td></tr><tr><td align="center"><code>author</code></td><td>网站作者</td></tr><tr><td align="center"><code>language</code></td><td>网站所使用的语言，可根据使用的主题提供的语言选项来进行设置，如zh-CN</td></tr><tr><td align="center"><code>timezone</code></td><td>网站时区，中国大陆用户可以设置 <code>Asia/Shanghai</code>，具体可参见 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a></td></tr></tbody></table><h4 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h4><p>&ensp;&ensp;通常用于设置网站网址即博文的永久链接格式</p><table><thead><tr><th align="center">参数</th><th>描述</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center"><code>url</code></td><td>网址，协议需要指定，如 <code>http://</code> 或者 <code>https://</code></td><td align="center"></td></tr><tr><td align="center"><code>permalink</code></td><td>博文的永久链接格式，具体格式可查看 <a href="https://hexo.bootcss.com/docs/permalinks.html">永久链接格式</a></td><td align="center"></td></tr><tr><td align="center"><code>pretty_urls</code></td><td>改写 <code>permalink</code> 的值来美化 URL</td><td align="center"></td></tr><tr><td align="center"><code>pretty_urls.trailing_index</code></td><td>是否在永久链接中保留尾部的 index.html，设置为 false 时去除</td><td align="center"></td></tr><tr><td align="center"><code>pretty_urls.trailing_html</code></td><td>是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效)</td><td align="center">true</td></tr></tbody></table><p>其他更详细的配置说明，可查看 <a href="https://hexo.bootcss.com/docs/configuration.html">官网说明</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;什么是-Hexo-？&quot;&gt;&lt;a href=&quot;#什么是-Hexo-？&quot; class=&quot;headerlink&quot; title=&quot;什么是 Hexo ？&quot;&gt;&lt;/a&gt;什么是 Hexo ？&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;ensp;&amp;ensp;Hexo 是一个快速、简洁且高效的博客框架。&lt;a href=&quot;https://hexo.bootcss.com/docs/index.html&quot;&gt;Hexo&lt;/a&gt; 使用 Markdown（或其他渲染引擎）解析博文，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2022/01/05/Markdown-using-document&quot;&gt;Markdown站内手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://markdown.com.cn/&quot;&gt;Markdown官方手册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://hushaoyu.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://hushaoyu.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Markdown using document</title>
    <link href="https://hushaoyu.github.io/2022/01/05/Markdown-using-document/"/>
    <id>https://hushaoyu.github.io/2022/01/05/Markdown-using-document/</id>
    <published>2022-01-05T05:35:07.000Z</published>
    <updated>2022-01-10T06:25:39.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a><a href="https://markdown.com.cn/basic-syntax/" title="官方文档">基本语法</a></h1><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><h4 id="1、一个-‘-’-表示一级标题，两个表示二级标题，依此类推，对应-h1-h6"><a href="#1、一个-‘-’-表示一级标题，两个表示二级标题，依此类推，对应-h1-h6" class="headerlink" title="1、一个 ‘#’ 表示一级标题，两个表示二级标题，依此类推，对应 h1 ~ h6"></a>1、一个 ‘#’ 表示一级标题，两个表示二级标题，依此类推，对应 h1 ~ h6</h4><h3 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h3><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><h4 id="1、直接使用空白行来标记行分割"><a href="#1、直接使用空白行来标记行分割" class="headerlink" title="1、直接使用空白行来标记行分割"></a>1、直接使用空白行来标记行分割</h4><p>content1</p><p>content2</p><hr><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><h4 id="1、在内容末尾使用br，可创建换行"><a href="#1、在内容末尾使用br，可创建换行" class="headerlink" title="1、在内容末尾使用br，可创建换行"></a>1、在内容末尾使用br，可创建换行</h4><p><code>例子：在内容末尾使用br，可创&lt;br /&gt;建换行</code><br /><br>例子：在内容末尾使用br，可创<br />建换行</p><hr><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><h4 id="1、在需要强调的内容前后使用两个星号进行标记"><a href="#1、在需要强调的内容前后使用两个星号进行标记" class="headerlink" title="1、在需要强调的内容前后使用两个星号进行标记"></a>1、在需要强调的内容前后使用两个星号进行标记</h4><p><code>这段文字中，地名是需要强调的，如：**北京**是个美丽的城市，**杭州**也是</code><br /><br>这段文字中，地名是需要强调的，如：<strong>北京</strong>是个美丽的城市，<strong>杭州</strong>也是</p><hr><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><h4 id="1、块引用：使用-‘-gt-’-符号，多行引用，使用空-‘-gt-’-隔开"><a href="#1、块引用：使用-‘-gt-’-符号，多行引用，使用空-‘-gt-’-隔开" class="headerlink" title="1、块引用：使用 ‘&gt;’ 符号，多行引用，使用空 ‘&gt;’ 隔开"></a>1、块引用：使用 ‘&gt;’ 符号，多行引用，使用空 ‘&gt;’ 隔开</h4><blockquote><p>import</p><p>import</p></blockquote><h4 id="2、嵌套引用：后面多一个-‘-gt-’，表示被嵌套，如-‘-gt-gt-’"><a href="#2、嵌套引用：后面多一个-‘-gt-’，表示被嵌套，如-‘-gt-gt-’" class="headerlink" title="2、嵌套引用：后面多一个 ‘&gt;’，表示被嵌套，如 ‘&gt;&gt;’"></a>2、嵌套引用：后面多一个 ‘&gt;’，表示被嵌套，如 ‘&gt;&gt;’</h4><blockquote><p>first</p><blockquote><p>second</p></blockquote></blockquote><h4 id="3、包含其他Markdown语法的引用"><a href="#3、包含其他Markdown语法的引用" class="headerlink" title="3、包含其他Markdown语法的引用"></a>3、包含其他Markdown语法的引用</h4><blockquote><p>content</p><ul><li>list</li></ul><p><em>Everything</em> is going ware;</p></blockquote><hr><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效"><a href="#1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效" class="headerlink" title="1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效"></a>1、有序列表：使用数字加英文句号进行标记，英文句号需要与后续内容间隔一个空格语法才生效</h4><ol><li>第一行</li><li>第二行</li></ol><h4 id="2、无序列表：使用连字符-‘-‘。子级列表，使用两个空格递进表示层级。"><a href="#2、无序列表：使用连字符-‘-‘。子级列表，使用两个空格递进表示层级。" class="headerlink" title="2、无序列表：使用连字符 ‘-‘。子级列表，使用两个空格递进表示层级。"></a>2、无序列表：使用连字符 ‘-‘。子级列表，使用两个空格递进表示层级。</h4><ul><li>第一行</li><li>第二行<ul><li>子行</li></ul></li></ul><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="1、代码块使用反引号包裹"><a href="#1、代码块使用反引号包裹" class="headerlink" title="1、代码块使用反引号包裹 ``"></a>1、代码块使用反引号包裹 ``</h4><p><code>这里面的是代码块内容，里层再次使用反引号，可识别Markdown语法，如``&lt;br /&gt;`` </code><br /><code> 标签就是被识别的效果</code></p><hr><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><h4 id="1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）"><a href="#1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）" class="headerlink" title="1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）"></a>1、分割线使用三个连续的星号（最佳实践：在星号前后使用空白行）</h4><hr><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><h4 id="1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title"><a href="#1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title" class="headerlink" title="1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title"></a>1、链接文本放在中括号内，链接地址放在紧跟其后的小括号内，小括号内第一个值为超链接，第二个使用双引号包裹的为title</h4><p><code>[这是一个链接](https://www.baidu.com &quot;这是一个百度地址&quot;)</code><br /><br><a href="https://www.baidu.com/" title="这是一个百度地址">这是一个链接</a></p><h4 id="2、带格式化的链接"><a href="#2、带格式化的链接" class="headerlink" title="2、带格式化的链接"></a>2、带格式化的链接</h4><p><code>这是一个 **[百度](https://www.baidu.com &quot;这是一个百度地址&quot;)** 链接</code><br /><br>这是一个 <strong><a href="https://www.baidu.com/" title="这是一个百度地址">百度</a></strong> 链接</p><hr><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><h4 id="1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性"><a href="#1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性" class="headerlink" title="1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性"></a>1、与使用超链接类似，只是在最前面加了感叹号，中括号内的为图片的替代文本，即alt属性</h4><p><code>![这是图片](/assets/img/philly-magic-garden.jpg &quot;Magic Gardens&quot;)</code><br><img src="https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png" alt="这是图片" title="Animate"></p><h4 id="2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址"><a href="#2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址" class="headerlink" title="2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址"></a>2、带超链接的图片：先使用中括号包裹图片语法内容，再在中括号后面加一个小括号，放入超链接地址</h4><p><code>[![这是图片](https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png &quot;Animate&quot;)](https://en.wikipedia.org/wiki/File:Future_Splash_Animator_icon.png)</code><br><a href="https://en.wikipedia.org/wiki/File:Future_Splash_Animator_icon.png"><img src="https://upload.wikimedia.org/wikipedia/commons/a/a6/Future_Splash_Animator_icon.png" alt="这是图片" title="Animate"></a></p><hr><h3 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h3><hr><h3 id="内嵌-HTML-标签"><a href="#内嵌-HTML-标签" class="headerlink" title="内嵌 HTML 标签"></a>内嵌 HTML 标签</h3><h4 id="1、自定义样式"><a href="#1、自定义样式" class="headerlink" title="1、自定义样式"></a>1、自定义样式</h4><p><code>使用样式自定义&lt;span style=&quot;color: rgb(255,3,255);margin: 0 5px;&quot;&gt;标签&lt;/span&gt;样式</code></p><p>使用样式自定义<span style="color: rgb(255,3,255);margin: 0 5px;">标签</span>样式</p><h1 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a><a href="https://markdown.com.cn/extended-syntax/" title="官方文档">扩展语法</a></h1><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a><span id="extend-table">表格</span></h3><h4 id="1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题"><a href="#1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题" class="headerlink" title="1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题"></a>1、基本用法：使用管道符分割列，使用三个或多个连字符创建列标题</h4><p><code>| syntax | description | </code><br /><code>| --- | --- |</code><br /><code>| header | title |</code><br /><code>| name | value |</code><br /><code> | name | value |</code></p><table><thead><tr><th>syntax</th><th>description</th></tr></thead><tbody><tr><td>header</td><td>title</td></tr><tr><td>name</td><td>value</td></tr><tr><td>name</td><td>value</td></tr></tbody></table><h4 id="2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中"><a href="#2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中" class="headerlink" title="2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中"></a>2、内容对齐：在连字符前后加冒号，左边冒号表示左对齐，右边表示右对齐，两侧都有表示居中</h4><p><code>| syntax | description | other | </code><br /><code>| :--- | :---: | ---: |</code><br /><code>| 1 | title | 1 |</code><br /><code>| 1 | value | 1 |</code><br /><code> | 1 | value | 1 |</code></p><table><thead><tr><th align="left">syntax</th><th align="center">description</th><th align="right">other</th></tr></thead><tbody><tr><td align="left">1</td><td align="center">title</td><td align="right">1</td></tr><tr><td align="left">1</td><td align="center">value</td><td align="right">1</td></tr><tr><td align="left">1</td><td align="center">value</td><td align="right">1</td></tr></tbody></table><h3 id="围栏代码块"><a href="#围栏代码块" class="headerlink" title="围栏代码块"></a>围栏代码块</h3><h4 id="1、使用三个反引号-包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行"><a href="#1、使用三个反引号-包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行" class="headerlink" title="1、使用三个反引号```包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行"></a>1、使用三个反引号```包裹表示围栏代码块，如果只用单个反引号包裹，只会形成一行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;key&quot;: 1,</span><br><span class="line">  &quot;name&quot;: &quot;test&quot;,</span><br><span class="line">  &quot;value&quot;: 2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>&#123;   &quot;key&quot;: 1,   &quot;name&quot;: &quot;test&quot;,   &quot;value&quot;: 2 &#125;</code></p><h4 id="2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等"><a href="#2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等" class="headerlink" title="2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等"></a>2、语法高亮：在第一个三个反引号后面，加上高亮所使用的语法，取值有：json、bash、javascript等</h4><ul><li><code>json：</code><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;key&quot;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;value&quot;</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><code>bash：</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ midkr <span class="built_in">test</span></span><br></pre></td></tr></table></figure></li><li><code>javascript：</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure></li></ul><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><h4 id="1、方括号内，使用上标符号接其他标识符"><a href="#1、方括号内，使用上标符号接其他标识符" class="headerlink" title="1、方括号内，使用上标符号接其他标识符"></a>1、方括号内，使用上标符号接其他标识符</h4><p>这里面的内容包含[^1]脚注。</p><p>[^1]: this is a</p><h3 id="标题ID和锚点"><a href="#标题ID和锚点" class="headerlink" title="标题ID和锚点"></a>标题ID和锚点</h3><h4 id="1、标题内容使用内嵌html标签的形式提供id"><a href="#1、标题内容使用内嵌html标签的形式提供id" class="headerlink" title="1、标题内容使用内嵌html标签的形式提供id"></a>1、标题内容使用内嵌html标签的形式提供id</h4><p><code>### &lt;span id=&quot;extend-table&quot;&gt;表格&lt;/span&gt;</code></p><h4 id="2、使用中括号包含描点文本内容，后接小括号提供id"><a href="#2、使用中括号包含描点文本内容，后接小括号提供id" class="headerlink" title="2、使用中括号包含描点文本内容，后接小括号提供id"></a>2、使用中括号包含描点文本内容，后接小括号提供id</h4><p><code>[跳至表格](#extend-table)</code><br><br /><br><a href="#extend-table">跳至表格</a></p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><h4 id="1、使用双波浪号"><a href="#1、使用双波浪号" class="headerlink" title="1、使用双波浪号~~"></a>1、使用双波浪号~~</h4><p><code>~~内容删除~~</code><br /><br><del>内容删除</del></p><h3 id="任务列表语法"><a href="#任务列表语法" class="headerlink" title="任务列表语法"></a>任务列表语法</h3><h4 id="1、使用-和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格"><a href="#1、使用-和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格" class="headerlink" title="1、使用 -/*/+ 和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格"></a>1、使用 -/*/+ 和方括号表示，方括号内输入x表示任务已完成。方括号前后均需空格，空复选框也需要空格</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- [x] 起床</span><br><span class="line">* [ ] 洗漱</span><br><span class="line">+ [ ] 吃早餐</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> 起床</li></ul><ul><li><input disabled="" type="checkbox"> 洗漱</li></ul><ul><li><input disabled="" type="checkbox"> 吃早餐</li></ul><h3 id="使用emoji表情"><a href="#使用emoji表情" class="headerlink" title="使用emoji表情"></a><a href="https://emojipedia.org/">使用emoji表情</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 🏜️ 第一次使用表情</span><br><span class="line">- 🎄 圣诞树</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h4 id="中文段落缩进两个字符-使用-amp-ensp-；"><a href="#中文段落缩进两个字符-使用-amp-ensp-；" class="headerlink" title="中文段落缩进两个字符,使用&amp;ensp;；"></a>中文段落缩进两个字符,使用<code>&amp;ensp;</code>；</h4><p><code>&amp;ensp;&amp;ensp;这是一段缩进两个字符的文本</code><br /><br>&ensp;&ensp;这是一段缩进两个字符的文本</p><h4 id="站内博文间跳转"><a href="#站内博文间跳转" class="headerlink" title="站内博文间跳转"></a>站内博文间跳转</h4><ul><li>相对路径<ul><li>在站点的根配置文件中，<code>permalink</code>参数指定了博文的生成格式：<code>permalink: :year/:month/:day/:title/</code>，因此在是使用相对路径时，需要根据日期递归到根目录再寻址到需要跳转的博文路径：<br /><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  [Markdown站内手册](../../../../2022/01/05/Markdown-using-document)```</span><br><span class="line">- 绝对路径</span><br><span class="line">  - 同样根据博文的生成格式，将博文从根路径开始，将绝对路径表示出来：</span><br><span class="line">  ```bash</span><br><span class="line">  [Markdown站内手册](/2022/01/05/Markdown-using-document)</span><br></pre></td></tr></table></figure></li></ul></li><li>post_link<ul><li>待研究</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;基本语法&quot;&gt;&lt;a href=&quot;#基本语法&quot; class=&quot;headerlink&quot; title=&quot;基本语法&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://markdown.com.cn/basic-syntax/&quot; title=&quot;官方文档&quot;&gt;基本语法&lt;/a&gt;&lt;/h1&gt;&lt;h3 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h3&gt;&lt;h4 id=&quot;1、一个-‘-’-表示一级标题，两个表示二级标题，依此类推，对应-h1-h6&quot;&gt;&lt;a href=&quot;#1、一个-‘-’-表示一级标题，两个表示二级标题，依此类推，对应-h1-h6&quot; class=&quot;headerlink&quot; title=&quot;1、一个 ‘#’ 表示一级标题，两个表示二级标题，依此类推，对应 h1 ~ h6&quot;&gt;&lt;/a&gt;1、一个 ‘#’ 表示一级标题，两个表示二级标题，依此类推，对应 h1 ~ h6&lt;/h4&gt;</summary>
    
    
    
    <category term="handbook" scheme="https://hushaoyu.github.io/categories/handbook/"/>
    
    <category term="Markdown" scheme="https://hushaoyu.github.io/categories/handbook/Markdown/"/>
    
    
    <category term="Markdown" scheme="https://hushaoyu.github.io/tags/Markdown/"/>
    
    <category term="handbook" scheme="https://hushaoyu.github.io/tags/handbook/"/>
    
  </entry>
  
  <entry>
    <title>There.js入门系列之React中使用Three.js</title>
    <link href="https://hushaoyu.github.io/2022/01/05/There-js%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8BReact%E4%B8%AD%E4%BD%BF%E7%94%A8Three-js/"/>
    <id>https://hushaoyu.github.io/2022/01/05/There-js%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8BReact%E4%B8%AD%E4%BD%BF%E7%94%A8Three-js/</id>
    <published>2022-01-05T05:27:18.000Z</published>
    <updated>2022-01-07T03:21:35.579Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码验证失败，请提供正确的密码." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ab9479d48ed7bfca45e173c351eeb258ceb889960d3cf4060cf7cf4551cb71e5">4630436162ade97ba2718b7d0c4b3b6351ade09e539dfebeb5402828e29e64b0f41eb1e0ff1190f7511b2f172bf61b91eebc2f7ad92bd458a943c3f388d15fd6ffb2ab5dcdd5ca5be7a53be65b3149bb68de244f810ed966192b82228cdc362f088736edaaebe931c47c95f67ac4e50728df6f82eadb0a90e5cfe6620d8a8a6eb19dbbeee5ff4bee397f5e2a06331e852650d318beb5578cbbdda3c37d25f099a3b7f7493d41b725f14299d4e561a775c7cebf554da7b204f69b22c85a4f4d8ebc9b3826ec2750cc9e1ea4ad32fad91d2ebc6ab087580e18304105159ef6f69a27d67bdefafb0d2f7628aa0422745e7726a829b9b2d293c9a0c0832bbc6f5e881ceb4e79c6a082d5afd0578a69d56fc0d8a964539a0f1771a5f25c207c236714cb234097a0e3e7232895ac7cf6342358acd594c34693d181d93ad985f5a6651087a80c93c4a7bbb8f3348ed6cdc6d175</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="输入密码，查看文章">输入密码，查看文章</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">博文已加密，请提供密码查看！</summary>
    
    
    
    <category term="web" scheme="https://hushaoyu.github.io/categories/web/"/>
    
    <category term="ThreeJS" scheme="https://hushaoyu.github.io/categories/web/ThreeJS/"/>
    
    
    <category term="React" scheme="https://hushaoyu.github.io/tags/React/"/>
    
    <category term="web" scheme="https://hushaoyu.github.io/tags/web/"/>
    
    <category term="ThreeJS" scheme="https://hushaoyu.github.io/tags/ThreeJS/"/>
    
    <category term="encrypt" scheme="https://hushaoyu.github.io/tags/encrypt/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hushaoyu.github.io/2022/01/04/hello-world/"/>
    <id>https://hushaoyu.github.io/2022/01/04/hello-world/</id>
    <published>2022-01-04T08:06:28.571Z</published>
    <updated>2022-01-06T09:15:07.591Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;</summary>
    
    
    
    <category term="test" scheme="https://hushaoyu.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://hushaoyu.github.io/tags/test/"/>
    
  </entry>
  
</feed>
